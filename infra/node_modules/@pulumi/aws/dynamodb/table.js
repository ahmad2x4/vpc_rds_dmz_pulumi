"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a DynamoDB table resource
 *
 * > **Note:** It is recommended to use `lifecycle` [`ignoreChanges`](https://www.terraform.io/docs/configuration/resources.html#ignore_changes) for `readCapacity` and/or `writeCapacity` if there's [autoscaling policy](https://www.terraform.io/docs/providers/aws/r/appautoscaling_policy.html) attached to the table.
 *
 * ## Example Usage
 *
 * The following dynamodb table description models the table and GSI shown
 * in the [AWS SDK example documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const basicDynamodbTable = new aws.dynamodb.Table("basic-dynamodb-table", {
 *     attributes: [
 *         {
 *             name: "UserId",
 *             type: "S",
 *         },
 *         {
 *             name: "GameTitle",
 *             type: "S",
 *         },
 *         {
 *             name: "TopScore",
 *             type: "N",
 *         },
 *     ],
 *     billingMode: "PROVISIONED",
 *     globalSecondaryIndexes: [{
 *         hashKey: "GameTitle",
 *         name: "GameTitleIndex",
 *         nonKeyAttributes: ["UserId"],
 *         projectionType: "INCLUDE",
 *         rangeKey: "TopScore",
 *         readCapacity: 10,
 *         writeCapacity: 10,
 *     }],
 *     hashKey: "UserId",
 *     rangeKey: "GameTitle",
 *     readCapacity: 20,
 *     tags: {
 *         Environment: "production",
 *         Name: "dynamodb-table-1",
 *     },
 *     ttl: {
 *         attributeName: "TimeToExist",
 *         enabled: false,
 *     },
 *     writeCapacity: 20,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dynamodb_table.html.markdown.
 */
class Table extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["attributes"] = state ? state.attributes : undefined;
            inputs["billingMode"] = state ? state.billingMode : undefined;
            inputs["globalSecondaryIndexes"] = state ? state.globalSecondaryIndexes : undefined;
            inputs["hashKey"] = state ? state.hashKey : undefined;
            inputs["localSecondaryIndexes"] = state ? state.localSecondaryIndexes : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["pointInTimeRecovery"] = state ? state.pointInTimeRecovery : undefined;
            inputs["rangeKey"] = state ? state.rangeKey : undefined;
            inputs["readCapacity"] = state ? state.readCapacity : undefined;
            inputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            inputs["streamArn"] = state ? state.streamArn : undefined;
            inputs["streamEnabled"] = state ? state.streamEnabled : undefined;
            inputs["streamLabel"] = state ? state.streamLabel : undefined;
            inputs["streamViewType"] = state ? state.streamViewType : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["ttl"] = state ? state.ttl : undefined;
            inputs["writeCapacity"] = state ? state.writeCapacity : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.attributes === undefined) {
                throw new Error("Missing required property 'attributes'");
            }
            if (!args || args.hashKey === undefined) {
                throw new Error("Missing required property 'hashKey'");
            }
            inputs["attributes"] = args ? args.attributes : undefined;
            inputs["billingMode"] = args ? args.billingMode : undefined;
            inputs["globalSecondaryIndexes"] = args ? args.globalSecondaryIndexes : undefined;
            inputs["hashKey"] = args ? args.hashKey : undefined;
            inputs["localSecondaryIndexes"] = args ? args.localSecondaryIndexes : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["pointInTimeRecovery"] = args ? args.pointInTimeRecovery : undefined;
            inputs["rangeKey"] = args ? args.rangeKey : undefined;
            inputs["readCapacity"] = args ? args.readCapacity : undefined;
            inputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            inputs["streamEnabled"] = args ? args.streamEnabled : undefined;
            inputs["streamViewType"] = args ? args.streamViewType : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["ttl"] = args ? args.ttl : undefined;
            inputs["writeCapacity"] = args ? args.writeCapacity : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["streamArn"] = undefined /*out*/;
            inputs["streamLabel"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Table.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Table(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Table.__pulumiType;
    }
}
exports.Table = Table;
/** @internal */
Table.__pulumiType = 'aws:dynamodb/table:Table';
//# sourceMappingURL=table.js.map