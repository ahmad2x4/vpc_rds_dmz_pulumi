"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get information about the organization that the user's account belongs to
 *
 * ## Example Usage
 *
 * ### SNS topic that can be interacted by the organization only
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.organizations.getOrganization();
 * const snsTopic = new aws.sns.Topic("snsTopic", {});
 * const snsTopicPolicyPolicyDocument = snsTopic.arn.apply(arn => aws.iam.getPolicyDocument({
 *     statements: [{
 *         actions: [
 *             "SNS:Subscribe",
 *             "SNS:Publish",
 *         ],
 *         conditions: [{
 *             test: "StringEquals",
 *             values: [example],
 *             variable: "aws:PrincipalOrgID",
 *         }],
 *         effect: "Allow",
 *         principals: [{
 *             identifiers: ["*"],
 *             type: "AWS",
 *         }],
 *         resources: [arn],
 *     }],
 * }));
 * const snsTopicPolicyTopicPolicy = new aws.sns.TopicPolicy("snsTopicPolicy", {
 *     arn: snsTopic.arn,
 *     policy: snsTopicPolicyPolicyDocument.json,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/organizations_organization.html.markdown.
 */
function getOrganization(opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:organizations/getOrganization:getOrganization", {}, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getOrganization = getOrganization;
//# sourceMappingURL=getOrganization.js.map