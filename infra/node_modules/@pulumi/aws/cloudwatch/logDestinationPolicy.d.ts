import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a CloudWatch Logs destination policy resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testDestination = new aws.cloudwatch.LogDestination("testDestination", {
 *     roleArn: aws_iam_role_iam_for_cloudwatch.arn,
 *     targetArn: aws_kinesis_stream_kinesis_for_cloudwatch.arn,
 * });
 * const testDestinationPolicyPolicyDocument = testDestination.arn.apply(arn => aws.iam.getPolicyDocument({
 *     statements: [{
 *         actions: ["logs:PutSubscriptionFilter"],
 *         effect: "Allow",
 *         principals: [{
 *             identifiers: ["123456789012"],
 *             type: "AWS",
 *         }],
 *         resources: [arn],
 *     }],
 * }));
 * const testDestinationPolicyLogDestinationPolicy = new aws.cloudwatch.LogDestinationPolicy("testDestinationPolicy", {
 *     accessPolicy: testDestinationPolicyPolicyDocument.json,
 *     destinationName: testDestination.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_log_destination_policy.html.markdown.
 */
export declare class LogDestinationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing LogDestinationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogDestinationPolicyState, opts?: pulumi.CustomResourceOptions): LogDestinationPolicy;
    /**
     * Returns true if the given object is an instance of LogDestinationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LogDestinationPolicy;
    /**
     * The policy document. This is a JSON formatted string.
     */
    readonly accessPolicy: pulumi.Output<string>;
    /**
     * A name for the subscription filter
     */
    readonly destinationName: pulumi.Output<string>;
    /**
     * Create a LogDestinationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogDestinationPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LogDestinationPolicy resources.
 */
export interface LogDestinationPolicyState {
    /**
     * The policy document. This is a JSON formatted string.
     */
    readonly accessPolicy?: pulumi.Input<string>;
    /**
     * A name for the subscription filter
     */
    readonly destinationName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LogDestinationPolicy resource.
 */
export interface LogDestinationPolicyArgs {
    /**
     * The policy document. This is a JSON formatted string.
     */
    readonly accessPolicy: pulumi.Input<string>;
    /**
     * A name for the subscription filter
     */
    readonly destinationName: pulumi.Input<string>;
}
