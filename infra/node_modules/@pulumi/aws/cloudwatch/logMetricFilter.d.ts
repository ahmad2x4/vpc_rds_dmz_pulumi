import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a CloudWatch Log Metric Filter resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const dada = new aws.cloudwatch.LogGroup("dada", {});
 * const yada = new aws.cloudwatch.LogMetricFilter("yada", {
 *     logGroupName: dada.name,
 *     metricTransformation: {
 *         name: "EventCount",
 *         namespace: "YourNamespace",
 *         value: "1",
 *     },
 *     pattern: "",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_log_metric_filter.html.markdown.
 */
export declare class LogMetricFilter extends pulumi.CustomResource {
    /**
     * Get an existing LogMetricFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogMetricFilterState, opts?: pulumi.CustomResourceOptions): LogMetricFilter;
    /**
     * Returns true if the given object is an instance of LogMetricFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LogMetricFilter;
    /**
     * The name of the log group to associate the metric filter with.
     */
    readonly logGroupName: pulumi.Output<string>;
    /**
     * A block defining collection of information
     * needed to define how metric data gets emitted. See below.
     */
    readonly metricTransformation: pulumi.Output<outputs.cloudwatch.LogMetricFilterMetricTransformation>;
    /**
     * A name for the metric filter.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
     * for extracting metric data out of ingested log events.
     */
    readonly pattern: pulumi.Output<string>;
    /**
     * Create a LogMetricFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogMetricFilterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LogMetricFilter resources.
 */
export interface LogMetricFilterState {
    /**
     * The name of the log group to associate the metric filter with.
     */
    readonly logGroupName?: pulumi.Input<string>;
    /**
     * A block defining collection of information
     * needed to define how metric data gets emitted. See below.
     */
    readonly metricTransformation?: pulumi.Input<inputs.cloudwatch.LogMetricFilterMetricTransformation>;
    /**
     * A name for the metric filter.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
     * for extracting metric data out of ingested log events.
     */
    readonly pattern?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LogMetricFilter resource.
 */
export interface LogMetricFilterArgs {
    /**
     * The name of the log group to associate the metric filter with.
     */
    readonly logGroupName: pulumi.Input<string>;
    /**
     * A block defining collection of information
     * needed to define how metric data gets emitted. See below.
     */
    readonly metricTransformation: pulumi.Input<inputs.cloudwatch.LogMetricFilterMetricTransformation>;
    /**
     * A name for the metric filter.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
     * for extracting metric data out of ingested log events.
     */
    readonly pattern: pulumi.Input<string>;
}
