"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Batch Job Definition resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.batch.JobDefinition("test", {
 *     containerProperties: `{
 * 	"command": ["ls", "-la"],
 * 	"image": "busybox",
 * 	"memory": 1024,
 * 	"vcpus": 1,
 * 	"volumes": [
 *       {
 *         "host": {
 *           "sourcePath": "/tmp"
 *         },
 *         "name": "tmp"
 *       }
 *     ],
 * 	"environment": [
 * 		{"name": "VARNAME", "value": "VARVAL"}
 * 	],
 * 	"mountPoints": [
 * 		{
 *           "sourceVolume": "tmp",
 *           "containerPath": "/tmp",
 *           "readOnly": false
 *         }
 * 	],
 *     "ulimits": [
 *       {
 *         "hardLimit": 1024,
 *         "name": "nofile",
 *         "softLimit": 1024
 *       }
 *     ]
 * }
 * `,
 *     type: "container",
 * });
 * ```
 *
 * ## retryStrategy
 *
 * `retryStrategy` supports the following:
 *
 * * `attempts` - (Optional) The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
 *
 * ## timeout
 *
 * `timeout` supports the following:
 *
 * * `attemptDurationSeconds` - (Optional) The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/batch_job_definition.html.markdown.
 */
class JobDefinition extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["containerProperties"] = state ? state.containerProperties : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["retryStrategy"] = state ? state.retryStrategy : undefined;
            inputs["revision"] = state ? state.revision : undefined;
            inputs["timeout"] = state ? state.timeout : undefined;
            inputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.type === undefined) {
                throw new Error("Missing required property 'type'");
            }
            inputs["containerProperties"] = args ? args.containerProperties : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["retryStrategy"] = args ? args.retryStrategy : undefined;
            inputs["timeout"] = args ? args.timeout : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["revision"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(JobDefinition.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing JobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new JobDefinition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of JobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobDefinition.__pulumiType;
    }
}
exports.JobDefinition = JobDefinition;
/** @internal */
JobDefinition.__pulumiType = 'aws:batch/jobDefinition:JobDefinition';
//# sourceMappingURL=jobDefinition.js.map