import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a static IP address attachment - relationship between a Lightsail static IP & Lightsail instance.
 *
 * > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testStaticIp = new aws.lightsail.StaticIp("test", {});
 * const testInstance = new aws.lightsail.Instance("test", {
 *     availabilityZone: "us-east-1b",
 *     blueprintId: "string",
 *     bundleId: "string",
 *     keyPairName: "someKeyName",
 * });
 * const testStaticIpAttachment = new aws.lightsail.StaticIpAttachment("test", {
 *     instanceName: testInstance.id,
 *     staticIpName: testStaticIp.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/lightsail_static_ip_attachment.html.markdown.
 */
export declare class StaticIpAttachment extends pulumi.CustomResource {
    /**
     * Get an existing StaticIpAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StaticIpAttachmentState, opts?: pulumi.CustomResourceOptions): StaticIpAttachment;
    /**
     * Returns true if the given object is an instance of StaticIpAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StaticIpAttachment;
    /**
     * The name of the Lightsail instance to attach the IP to
     */
    readonly instanceName: pulumi.Output<string>;
    /**
     * The allocated static IP address
     */
    readonly ipAddress: pulumi.Output<string>;
    /**
     * The name of the allocated static IP
     */
    readonly staticIpName: pulumi.Output<string>;
    /**
     * Create a StaticIpAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticIpAttachmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering StaticIpAttachment resources.
 */
export interface StaticIpAttachmentState {
    /**
     * The name of the Lightsail instance to attach the IP to
     */
    readonly instanceName?: pulumi.Input<string>;
    /**
     * The allocated static IP address
     */
    readonly ipAddress?: pulumi.Input<string>;
    /**
     * The name of the allocated static IP
     */
    readonly staticIpName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a StaticIpAttachment resource.
 */
export interface StaticIpAttachmentArgs {
    /**
     * The name of the Lightsail instance to attach the IP to
     */
    readonly instanceName: pulumi.Input<string>;
    /**
     * The name of the allocated static IP
     */
    readonly staticIpName: pulumi.Input<string>;
}
