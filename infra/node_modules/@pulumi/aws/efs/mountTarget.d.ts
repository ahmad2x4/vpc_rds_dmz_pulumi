import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an Elastic File System (EFS) mount target.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = new aws.ec2.Vpc("foo", {
 *     cidrBlock: "10.0.0.0/16",
 * });
 * const alphaSubnet = new aws.ec2.Subnet("alpha", {
 *     availabilityZone: "us-west-2a",
 *     cidrBlock: "10.0.1.0/24",
 *     vpcId: foo.id,
 * });
 * const alphaMountTarget = new aws.efs.MountTarget("alpha", {
 *     fileSystemId: aws_efs_file_system_foo.id,
 *     subnetId: alphaSubnet.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/efs_mount_target.html.markdown.
 */
export declare class MountTarget extends pulumi.CustomResource {
    /**
     * Get an existing MountTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MountTargetState, opts?: pulumi.CustomResourceOptions): MountTarget;
    /**
     * Returns true if the given object is an instance of MountTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MountTarget;
    /**
     * The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     */
    readonly dnsName: pulumi.Output<string>;
    /**
     * Amazon Resource Name of the file system.
     */
    readonly fileSystemArn: pulumi.Output<string>;
    /**
     * The ID of the file system for which the mount target is intended.
     */
    readonly fileSystemId: pulumi.Output<string>;
    /**
     * The address (within the address range of the specified subnet) at
     * which the file system may be mounted via the mount target.
     */
    readonly ipAddress: pulumi.Output<string>;
    /**
     * The ID of the network interface that Amazon EFS created when it created the mount target.
     */
    readonly networkInterfaceId: pulumi.Output<string>;
    /**
     * A list of up to 5 VPC security group IDs (that must
     * be for the same VPC as subnet specified) in effect for the mount target.
     */
    readonly securityGroups: pulumi.Output<string[]>;
    /**
     * The ID of the subnet to add the mount target in.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * Create a MountTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MountTargetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MountTarget resources.
 */
export interface MountTargetState {
    /**
     * The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     */
    readonly dnsName?: pulumi.Input<string>;
    /**
     * Amazon Resource Name of the file system.
     */
    readonly fileSystemArn?: pulumi.Input<string>;
    /**
     * The ID of the file system for which the mount target is intended.
     */
    readonly fileSystemId?: pulumi.Input<string>;
    /**
     * The address (within the address range of the specified subnet) at
     * which the file system may be mounted via the mount target.
     */
    readonly ipAddress?: pulumi.Input<string>;
    /**
     * The ID of the network interface that Amazon EFS created when it created the mount target.
     */
    readonly networkInterfaceId?: pulumi.Input<string>;
    /**
     * A list of up to 5 VPC security group IDs (that must
     * be for the same VPC as subnet specified) in effect for the mount target.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnet to add the mount target in.
     */
    readonly subnetId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MountTarget resource.
 */
export interface MountTargetArgs {
    /**
     * The ID of the file system for which the mount target is intended.
     */
    readonly fileSystemId: pulumi.Input<string>;
    /**
     * The address (within the address range of the specified subnet) at
     * which the file system may be mounted via the mount target.
     */
    readonly ipAddress?: pulumi.Input<string>;
    /**
     * A list of up to 5 VPC security group IDs (that must
     * be for the same VPC as subnet specified) in effect for the mount target.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnet to add the mount target in.
     */
    readonly subnetId: pulumi.Input<string>;
}
