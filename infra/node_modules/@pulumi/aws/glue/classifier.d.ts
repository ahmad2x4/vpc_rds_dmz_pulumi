import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Glue Classifier resource.
 *
 * > **NOTE:** It is only valid to create one type of classifier (csv, grok, JSON, or XML). Changing classifier types will recreate the classifier.
 *
 * ## Example Usage
 *
 * ### Csv Classifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Classifier("example", {
 *     csvClassifier: {
 *         allowSingleColumn: false,
 *         containsHeader: "PRESENT",
 *         delimiter: ",",
 *         disableValueTrimming: false,
 *         headers: [
 *             "example1",
 *             "example2",
 *         ],
 *         quoteSymbol: "'",
 *     },
 * });
 * ```
 *
 * ### Grok Classifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Classifier("example", {
 *     grokClassifier: {
 *         classification: "example",
 *         grokPattern: "example",
 *     },
 * });
 * ```
 *
 * ### JSON Classifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Classifier("example", {
 *     jsonClassifier: {
 *         jsonPath: "example",
 *     },
 * });
 * ```
 *
 * ### XML Classifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Classifier("example", {
 *     xmlClassifier: {
 *         classification: "example",
 *         rowTag: "example",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_classifier.html.markdown.
 */
export declare class Classifier extends pulumi.CustomResource {
    /**
     * Get an existing Classifier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClassifierState, opts?: pulumi.CustomResourceOptions): Classifier;
    /**
     * Returns true if the given object is an instance of Classifier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Classifier;
    /**
     * A classifier for Csv content. Defined below.
     */
    readonly csvClassifier: pulumi.Output<outputs.glue.ClassifierCsvClassifier | undefined>;
    /**
     * A classifier that uses grok patterns. Defined below.
     */
    readonly grokClassifier: pulumi.Output<outputs.glue.ClassifierGrokClassifier | undefined>;
    /**
     * A classifier for JSON content. Defined below.
     */
    readonly jsonClassifier: pulumi.Output<outputs.glue.ClassifierJsonClassifier | undefined>;
    /**
     * The name of the classifier.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A classifier for XML content. Defined below.
     */
    readonly xmlClassifier: pulumi.Output<outputs.glue.ClassifierXmlClassifier | undefined>;
    /**
     * Create a Classifier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClassifierArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Classifier resources.
 */
export interface ClassifierState {
    /**
     * A classifier for Csv content. Defined below.
     */
    readonly csvClassifier?: pulumi.Input<inputs.glue.ClassifierCsvClassifier>;
    /**
     * A classifier that uses grok patterns. Defined below.
     */
    readonly grokClassifier?: pulumi.Input<inputs.glue.ClassifierGrokClassifier>;
    /**
     * A classifier for JSON content. Defined below.
     */
    readonly jsonClassifier?: pulumi.Input<inputs.glue.ClassifierJsonClassifier>;
    /**
     * The name of the classifier.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A classifier for XML content. Defined below.
     */
    readonly xmlClassifier?: pulumi.Input<inputs.glue.ClassifierXmlClassifier>;
}
/**
 * The set of arguments for constructing a Classifier resource.
 */
export interface ClassifierArgs {
    /**
     * A classifier for Csv content. Defined below.
     */
    readonly csvClassifier?: pulumi.Input<inputs.glue.ClassifierCsvClassifier>;
    /**
     * A classifier that uses grok patterns. Defined below.
     */
    readonly grokClassifier?: pulumi.Input<inputs.glue.ClassifierGrokClassifier>;
    /**
     * A classifier for JSON content. Defined below.
     */
    readonly jsonClassifier?: pulumi.Input<inputs.glue.ClassifierJsonClassifier>;
    /**
     * The name of the classifier.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A classifier for XML content. Defined below.
     */
    readonly xmlClassifier?: pulumi.Input<inputs.glue.ClassifierXmlClassifier>;
}
