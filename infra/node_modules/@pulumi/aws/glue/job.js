"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Glue Job resource.
 *
 * > Glue functionality, such as monitoring and logging of jobs, is typically managed with the `defaultArguments` argument. See the [Special Parameters Used by AWS Glue](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html) topic in the Glue developer guide for additional information.
 *
 * ## Example Usage
 *
 * ### Python Job
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Job("example", {
 *     command: {
 *         scriptLocation: pulumi.interpolate`s3://${aws_s3_bucket_example.bucket}/example.py`,
 *     },
 *     roleArn: aws_iam_role_example.arn,
 * });
 * ```
 *
 * ### Scala Job
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Job("example", {
 *     command: {
 *         scriptLocation: pulumi.interpolate`s3://${aws_s3_bucket_example.bucket}/example.scala`,
 *     },
 *     defaultArguments: {
 *         "--job-language": "scala",
 *     },
 *     roleArn: aws_iam_role_example.arn,
 * });
 * ```
 *
 * ### Enabling CloudWatch Logs and Metrics
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleLogGroup = new aws.cloudwatch.LogGroup("example", {
 *     retentionInDays: 14,
 * });
 * const exampleJob = new aws.glue.Job("example", {
 *     defaultArguments: {
 *         // ... potentially other arguments ...
 *         "--continuous-log-logGroup": exampleLogGroup.name,
 *         "--enable-continuous-cloudwatch-log": "true",
 *         "--enable-continuous-log-filter": "true",
 *         "--enable-metrics": "",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_job.html.markdown.
 */
class Job extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["allocatedCapacity"] = state ? state.allocatedCapacity : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["command"] = state ? state.command : undefined;
            inputs["connections"] = state ? state.connections : undefined;
            inputs["defaultArguments"] = state ? state.defaultArguments : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["executionProperty"] = state ? state.executionProperty : undefined;
            inputs["glueVersion"] = state ? state.glueVersion : undefined;
            inputs["maxCapacity"] = state ? state.maxCapacity : undefined;
            inputs["maxRetries"] = state ? state.maxRetries : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["numberOfWorkers"] = state ? state.numberOfWorkers : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
            inputs["securityConfiguration"] = state ? state.securityConfiguration : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["timeout"] = state ? state.timeout : undefined;
            inputs["workerType"] = state ? state.workerType : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.command === undefined) {
                throw new Error("Missing required property 'command'");
            }
            if (!args || args.roleArn === undefined) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["allocatedCapacity"] = args ? args.allocatedCapacity : undefined;
            inputs["command"] = args ? args.command : undefined;
            inputs["connections"] = args ? args.connections : undefined;
            inputs["defaultArguments"] = args ? args.defaultArguments : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["executionProperty"] = args ? args.executionProperty : undefined;
            inputs["glueVersion"] = args ? args.glueVersion : undefined;
            inputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            inputs["maxRetries"] = args ? args.maxRetries : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["numberOfWorkers"] = args ? args.numberOfWorkers : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
            inputs["securityConfiguration"] = args ? args.securityConfiguration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeout"] = args ? args.timeout : undefined;
            inputs["workerType"] = args ? args.workerType : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Job.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Job(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }
}
exports.Job = Job;
/** @internal */
Job.__pulumiType = 'aws:glue/job:Job';
//# sourceMappingURL=job.js.map