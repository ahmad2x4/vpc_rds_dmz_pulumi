import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import { ARN } from "../index";
/**
 * Manages an AWS DataSync EFS Location.
 *
 * > **NOTE:** The EFS File System must have a mounted EFS Mount Target before creating this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.datasync.EfsLocation("example", {
 *     ec2Config: {
 *         securityGroupArns: [aws_security_group_example.arn],
 *         subnetArn: aws_subnet_example.arn,
 *     },
 *     // The below example uses aws.efs.MountTarget as a reference to ensure a mount target already exists when resource creation occurs.
 *     // You can accomplish the same behavior with dependsOn or an aws.efs.MountTarget data source reference.
 *     efsFileSystemArn: aws_efs_mount_target_example.fileSystemArn,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/datasync_location_efs.html.markdown.
 */
export declare class EfsLocation extends pulumi.CustomResource {
    /**
     * Get an existing EfsLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EfsLocationState, opts?: pulumi.CustomResourceOptions): EfsLocation;
    /**
     * Returns true if the given object is an instance of EfsLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EfsLocation;
    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     */
    readonly ec2Config: pulumi.Output<outputs.datasync.EfsLocationEc2Config>;
    /**
     * Amazon Resource Name (ARN) of EFS File System.
     */
    readonly efsFileSystemArn: pulumi.Output<ARN>;
    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     */
    readonly subdirectory: pulumi.Output<string | undefined>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    readonly uri: pulumi.Output<string>;
    /**
     * Create a EfsLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EfsLocationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EfsLocation resources.
 */
export interface EfsLocationState {
    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     */
    readonly ec2Config?: pulumi.Input<inputs.datasync.EfsLocationEc2Config>;
    /**
     * Amazon Resource Name (ARN) of EFS File System.
     */
    readonly efsFileSystemArn?: pulumi.Input<ARN>;
    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     */
    readonly subdirectory?: pulumi.Input<string>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    readonly uri?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EfsLocation resource.
 */
export interface EfsLocationArgs {
    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     */
    readonly ec2Config: pulumi.Input<inputs.datasync.EfsLocationEc2Config>;
    /**
     * Amazon Resource Name (ARN) of EFS File System.
     */
    readonly efsFileSystemArn: pulumi.Input<ARN>;
    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     */
    readonly subdirectory?: pulumi.Input<string>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
