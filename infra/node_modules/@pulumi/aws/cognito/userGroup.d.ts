import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Cognito User Group resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const mainUserPool = new aws.cognito.UserPool("main", {});
 * const groupRole = new aws.iam.Role("groupRole", {
 *     assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Sid": "",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "Federated": "cognito-identity.amazonaws.com"
 *       },
 *       "Action": "sts:AssumeRoleWithWebIdentity",
 *       "Condition": {
 *         "StringEquals": {
 *           "cognito-identity.amazonaws.com:aud": "us-east-1:12345678-dead-beef-cafe-123456790ab"
 *         },
 *         "ForAnyValue:StringLike": {
 *           "cognito-identity.amazonaws.com:amr": "authenticated"
 *         }
 *       }
 *     }
 *   ]
 * }
 * `,
 * });
 * const mainUserGroup = new aws.cognito.UserGroup("main", {
 *     description: "Managed by Pulumi",
 *     precedence: 42,
 *     roleArn: groupRole.arn,
 *     userPoolId: mainUserPool.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cognito_user_group.html.markdown.
 */
export declare class UserGroup extends pulumi.CustomResource {
    /**
     * Get an existing UserGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserGroupState, opts?: pulumi.CustomResourceOptions): UserGroup;
    /**
     * Returns true if the given object is an instance of UserGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserGroup;
    /**
     * The description of the user group.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the user group.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The precedence of the user group.
     */
    readonly precedence: pulumi.Output<number | undefined>;
    /**
     * The ARN of the IAM role to be associated with the user group.
     */
    readonly roleArn: pulumi.Output<string | undefined>;
    /**
     * The user pool ID.
     */
    readonly userPoolId: pulumi.Output<string>;
    /**
     * Create a UserGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering UserGroup resources.
 */
export interface UserGroupState {
    /**
     * The description of the user group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the user group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The precedence of the user group.
     */
    readonly precedence?: pulumi.Input<number>;
    /**
     * The ARN of the IAM role to be associated with the user group.
     */
    readonly roleArn?: pulumi.Input<string>;
    /**
     * The user pool ID.
     */
    readonly userPoolId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a UserGroup resource.
 */
export interface UserGroupArgs {
    /**
     * The description of the user group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the user group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The precedence of the user group.
     */
    readonly precedence?: pulumi.Input<number>;
    /**
     * The ARN of the IAM role to be associated with the user group.
     */
    readonly roleArn?: pulumi.Input<string>;
    /**
     * The user pool ID.
     */
    readonly userPoolId: pulumi.Input<string>;
}
