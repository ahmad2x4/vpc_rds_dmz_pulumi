import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Cognito Resource Server.
 *
 * ## Example Usage
 *
 * ### Create a basic resource server
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pool = new aws.cognito.UserPool("pool", {});
 * const resource = new aws.cognito.ResourceServer("resource", {
 *     identifier: "https://example.com",
 *     userPoolId: pool.id,
 * });
 * ```
 *
 * ### Create a resource server with sample-scope
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pool = new aws.cognito.UserPool("pool", {});
 * const resource = new aws.cognito.ResourceServer("resource", {
 *     identifier: "https://example.com",
 *     scopes: [{
 *         scopeDescription: "a Sample Scope Description",
 *         scopeName: "sample-scope",
 *     }],
 *     userPoolId: pool.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cognito_resource_server.html.markdown.
 */
export declare class ResourceServer extends pulumi.CustomResource {
    /**
     * Get an existing ResourceServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceServerState, opts?: pulumi.CustomResourceOptions): ResourceServer;
    /**
     * Returns true if the given object is an instance of ResourceServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceServer;
    /**
     * An identifier for the resource server.
     */
    readonly identifier: pulumi.Output<string>;
    /**
     * A name for the resource server.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of Authorization Scope.
     */
    readonly scopes: pulumi.Output<outputs.cognito.ResourceServerScope[] | undefined>;
    /**
     * A list of all scopes configured for this resource server in the format identifier/scope_name.
     */
    readonly scopeIdentifiers: pulumi.Output<string[]>;
    readonly userPoolId: pulumi.Output<string>;
    /**
     * Create a ResourceServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResourceServer resources.
 */
export interface ResourceServerState {
    /**
     * An identifier for the resource server.
     */
    readonly identifier?: pulumi.Input<string>;
    /**
     * A name for the resource server.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A list of Authorization Scope.
     */
    readonly scopes?: pulumi.Input<pulumi.Input<inputs.cognito.ResourceServerScope>[]>;
    /**
     * A list of all scopes configured for this resource server in the format identifier/scope_name.
     */
    readonly scopeIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    readonly userPoolId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ResourceServer resource.
 */
export interface ResourceServerArgs {
    /**
     * An identifier for the resource server.
     */
    readonly identifier: pulumi.Input<string>;
    /**
     * A name for the resource server.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A list of Authorization Scope.
     */
    readonly scopes?: pulumi.Input<pulumi.Input<inputs.cognito.ResourceServerScope>[]>;
    readonly userPoolId: pulumi.Input<string>;
}
