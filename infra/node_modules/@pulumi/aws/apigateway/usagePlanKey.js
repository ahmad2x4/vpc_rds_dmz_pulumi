"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an API Gateway Usage Plan Key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.apigateway.RestApi("test", {});
 * const myusageplan = new aws.apigateway.UsagePlan("myusageplan", {
 *     apiStages: [{
 *         apiId: test.id,
 *         stage: aws_api_gateway_deployment_foo.stageName,
 *     }],
 * });
 * const mykey = new aws.apigateway.ApiKey("mykey", {});
 * const main = new aws.apigateway.UsagePlanKey("main", {
 *     keyId: mykey.id,
 *     keyType: "API_KEY",
 *     usagePlanId: myusageplan.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_usage_plan_key.html.markdown.
 */
class UsagePlanKey extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["keyId"] = state ? state.keyId : undefined;
            inputs["keyType"] = state ? state.keyType : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["usagePlanId"] = state ? state.usagePlanId : undefined;
            inputs["value"] = state ? state.value : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.keyId === undefined) {
                throw new Error("Missing required property 'keyId'");
            }
            if (!args || args.keyType === undefined) {
                throw new Error("Missing required property 'keyType'");
            }
            if (!args || args.usagePlanId === undefined) {
                throw new Error("Missing required property 'usagePlanId'");
            }
            inputs["keyId"] = args ? args.keyId : undefined;
            inputs["keyType"] = args ? args.keyType : undefined;
            inputs["usagePlanId"] = args ? args.usagePlanId : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["value"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(UsagePlanKey.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing UsagePlanKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new UsagePlanKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of UsagePlanKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UsagePlanKey.__pulumiType;
    }
}
exports.UsagePlanKey = UsagePlanKey;
/** @internal */
UsagePlanKey.__pulumiType = 'aws:apigateway/usagePlanKey:UsagePlanKey';
//# sourceMappingURL=usagePlanKey.js.map