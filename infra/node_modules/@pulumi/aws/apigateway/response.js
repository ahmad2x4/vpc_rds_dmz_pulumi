"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an API Gateway Gateway Response for a REST API Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const main = new aws.apigateway.RestApi("main", {});
 * const test = new aws.apigateway.Response("test", {
 *     responseParameters: {
 *         "gatewayresponse.header.Authorization": "'Basic'",
 *     },
 *     responseTemplates: {
 *         "application/json": "{'message':$context.error.messageString}",
 *     },
 *     responseType: "UNAUTHORIZED",
 *     restApiId: main.id,
 *     statusCode: "401",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_gateway_response.html.markdown.
 */
class Response extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["responseParameters"] = state ? state.responseParameters : undefined;
            inputs["responseTemplates"] = state ? state.responseTemplates : undefined;
            inputs["responseType"] = state ? state.responseType : undefined;
            inputs["restApiId"] = state ? state.restApiId : undefined;
            inputs["statusCode"] = state ? state.statusCode : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.responseType === undefined) {
                throw new Error("Missing required property 'responseType'");
            }
            if (!args || args.restApiId === undefined) {
                throw new Error("Missing required property 'restApiId'");
            }
            inputs["responseParameters"] = args ? args.responseParameters : undefined;
            inputs["responseTemplates"] = args ? args.responseTemplates : undefined;
            inputs["responseType"] = args ? args.responseType : undefined;
            inputs["restApiId"] = args ? args.restApiId : undefined;
            inputs["statusCode"] = args ? args.statusCode : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Response.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Response resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Response(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Response.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Response.__pulumiType;
    }
}
exports.Response = Response;
/** @internal */
Response.__pulumiType = 'aws:apigateway/response:Response';
//# sourceMappingURL=response.js.map