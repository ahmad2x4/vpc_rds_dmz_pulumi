"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a HTTP Method for an API Gateway Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myDemoAPI = new aws.apigateway.RestApi("MyDemoAPI", {
 *     description: "This is my API for demonstration purposes",
 * });
 * const myDemoResource = new aws.apigateway.Resource("MyDemoResource", {
 *     parentId: myDemoAPI.rootResourceId,
 *     pathPart: "mydemoresource",
 *     restApi: myDemoAPI.id,
 * });
 * const myDemoMethod = new aws.apigateway.Method("MyDemoMethod", {
 *     authorization: "NONE",
 *     httpMethod: "GET",
 *     resourceId: myDemoResource.id,
 *     restApi: myDemoAPI.id,
 * });
 * ```
 *
 * ## Usage with Cognito User Pool Authorizer
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const config = new pulumi.Config();
 * const cognitoUserPoolName = config.require("cognitoUserPoolName");
 *
 * const thisUserPools = aws.cognito.getUserPools({
 *     name: cognitoUserPoolName,
 * });
 * const thisRestApi = new aws.apigateway.RestApi("this", {});
 * const thisResource = new aws.apigateway.Resource("this", {
 *     parentId: thisRestApi.rootResourceId,
 *     pathPart: "{proxy+}",
 *     restApi: thisRestApi.id,
 * });
 * const thisAuthorizer = new aws.apigateway.Authorizer("this", {
 *     providerArns: thisUserPools.arns,
 *     restApi: thisRestApi.id,
 *     type: "COGNITO_USER_POOLS",
 * });
 * const any = new aws.apigateway.Method("any", {
 *     authorization: "COGNITO_USER_POOLS",
 *     authorizerId: thisAuthorizer.id,
 *     httpMethod: "ANY",
 *     requestParameters: {
 *         "method.request.path.proxy": true,
 *     },
 *     resourceId: thisResource.id,
 *     restApi: thisRestApi.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_method.html.markdown.
 */
class Method extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["apiKeyRequired"] = state ? state.apiKeyRequired : undefined;
            inputs["authorization"] = state ? state.authorization : undefined;
            inputs["authorizationScopes"] = state ? state.authorizationScopes : undefined;
            inputs["authorizerId"] = state ? state.authorizerId : undefined;
            inputs["httpMethod"] = state ? state.httpMethod : undefined;
            inputs["requestModels"] = state ? state.requestModels : undefined;
            inputs["requestParameters"] = state ? state.requestParameters : undefined;
            inputs["requestValidatorId"] = state ? state.requestValidatorId : undefined;
            inputs["resourceId"] = state ? state.resourceId : undefined;
            inputs["restApi"] = state ? state.restApi : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.authorization === undefined) {
                throw new Error("Missing required property 'authorization'");
            }
            if (!args || args.httpMethod === undefined) {
                throw new Error("Missing required property 'httpMethod'");
            }
            if (!args || args.resourceId === undefined) {
                throw new Error("Missing required property 'resourceId'");
            }
            if (!args || args.restApi === undefined) {
                throw new Error("Missing required property 'restApi'");
            }
            inputs["apiKeyRequired"] = args ? args.apiKeyRequired : undefined;
            inputs["authorization"] = args ? args.authorization : undefined;
            inputs["authorizationScopes"] = args ? args.authorizationScopes : undefined;
            inputs["authorizerId"] = args ? args.authorizerId : undefined;
            inputs["httpMethod"] = args ? args.httpMethod : undefined;
            inputs["requestModels"] = args ? args.requestModels : undefined;
            inputs["requestParameters"] = args ? args.requestParameters : undefined;
            inputs["requestValidatorId"] = args ? args.requestValidatorId : undefined;
            inputs["resourceId"] = args ? args.resourceId : undefined;
            inputs["restApi"] = args ? args.restApi : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Method.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Method resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Method(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Method.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Method.__pulumiType;
    }
}
exports.Method = Method;
/** @internal */
Method.__pulumiType = 'aws:apigateway/method:Method';
//# sourceMappingURL=method.js.map