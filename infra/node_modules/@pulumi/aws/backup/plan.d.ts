import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an AWS Backup plan resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.Plan("example", {
 *     rules: [{
 *         ruleName: "tfExampleBackupRule",
 *         schedule: "cron(0 12 * * ? *)",
 *         targetVaultName: aws_backup_vault_test.name,
 *     }],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/backup_plan.html.markdown.
 */
export declare class Plan extends pulumi.CustomResource {
    /**
     * Get an existing Plan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PlanState, opts?: pulumi.CustomResourceOptions): Plan;
    /**
     * Returns true if the given object is an instance of Plan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Plan;
    /**
     * The ARN of the backup plan.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The display name of a backup plan.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A rule object that specifies a scheduled task that is used to back up a selection of resources.
     */
    readonly rules: pulumi.Output<outputs.backup.PlanRule[]>;
    /**
     * Metadata that you can assign to help organize the plans you create.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Plan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PlanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Plan resources.
 */
export interface PlanState {
    /**
     * The ARN of the backup plan.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The display name of a backup plan.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A rule object that specifies a scheduled task that is used to back up a selection of resources.
     */
    readonly rules?: pulumi.Input<pulumi.Input<inputs.backup.PlanRule>[]>;
    /**
     * Metadata that you can assign to help organize the plans you create.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.
     */
    readonly version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Plan resource.
 */
export interface PlanArgs {
    /**
     * The display name of a backup plan.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A rule object that specifies a scheduled task that is used to back up a selection of resources.
     */
    readonly rules: pulumi.Input<pulumi.Input<inputs.backup.PlanRule>[]>;
    /**
     * Metadata that you can assign to help organize the plans you create.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
