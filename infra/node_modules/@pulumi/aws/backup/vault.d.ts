import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an AWS Backup vault resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.Vault("example", {
 *     kmsKeyArn: aws_kms_key_example.arn,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/backup_vault.html.markdown.
 */
export declare class Vault extends pulumi.CustomResource {
    /**
     * Get an existing Vault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VaultState, opts?: pulumi.CustomResourceOptions): Vault;
    /**
     * Returns true if the given object is an instance of Vault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Vault;
    /**
     * The ARN of the vault.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The server-side encryption key that is used to protect your backups.
     */
    readonly kmsKeyArn: pulumi.Output<string>;
    /**
     * Name of the backup vault to create.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The number of recovery points that are stored in a backup vault.
     */
    readonly recoveryPoints: pulumi.Output<number>;
    /**
     * Metadata that you can assign to help organize the resources that you create.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Create a Vault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VaultArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Vault resources.
 */
export interface VaultState {
    /**
     * The ARN of the vault.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The server-side encryption key that is used to protect your backups.
     */
    readonly kmsKeyArn?: pulumi.Input<string>;
    /**
     * Name of the backup vault to create.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The number of recovery points that are stored in a backup vault.
     */
    readonly recoveryPoints?: pulumi.Input<number>;
    /**
     * Metadata that you can assign to help organize the resources that you create.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
/**
 * The set of arguments for constructing a Vault resource.
 */
export interface VaultArgs {
    /**
     * The server-side encryption key that is used to protect your backups.
     */
    readonly kmsKeyArn?: pulumi.Input<string>;
    /**
     * Name of the backup vault to create.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Metadata that you can assign to help organize the resources that you create.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
