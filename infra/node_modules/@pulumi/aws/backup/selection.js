"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages selection conditions for AWS Backup plan resources.
 *
 * ## Example Usage
 *
 * ### IAM Role
 *
 * > For more information about creating and managing IAM Roles for backups and restores, see the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/iam-service-roles.html).
 *
 * The below example creates an IAM role with the default managed IAM Policy for allowing AWS Backup to create backups.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleRole = new aws.iam.Role("example", {
 *     assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": ["sts:AssumeRole"],
 *       "Effect": "allow",
 *       "Principal": {
 *         "Service": ["backup.amazonaws.com"]
 *       }
 *     }
 *   ]
 * }
 * `,
 * });
 * const exampleRolePolicyAttachment = new aws.iam.RolePolicyAttachment("example", {
 *     policyArn: "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
 *     role: exampleRole.name,
 * });
 * const exampleSelection = new aws.backup.Selection("example", {
 *     iamRoleArn: exampleRole.arn,
 * });
 * ```
 *
 * ### Selecting Backups By Tag
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.Selection("example", {
 *     iamRoleArn: aws_iam_role_example.arn,
 *     planId: aws_backup_plan_example.id,
 *     selectionTags: [{
 *         key: "foo",
 *         type: "STRINGEQUALS",
 *         value: "bar",
 *     }],
 * });
 * ```
 *
 * ### Selecting Backups By Resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.Selection("example", {
 *     iamRoleArn: aws_iam_role_example.arn,
 *     planId: aws_backup_plan_example.id,
 *     resources: [
 *         aws_db_instance_example.arn,
 *         aws_ebs_volume_example.arn,
 *         aws_efs_file_system_example.arn,
 *     ],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/backup_selection.html.markdown.
 */
class Selection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["iamRoleArn"] = state ? state.iamRoleArn : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["planId"] = state ? state.planId : undefined;
            inputs["resources"] = state ? state.resources : undefined;
            inputs["selectionTags"] = state ? state.selectionTags : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.iamRoleArn === undefined) {
                throw new Error("Missing required property 'iamRoleArn'");
            }
            if (!args || args.planId === undefined) {
                throw new Error("Missing required property 'planId'");
            }
            inputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["planId"] = args ? args.planId : undefined;
            inputs["resources"] = args ? args.resources : undefined;
            inputs["selectionTags"] = args ? args.selectionTags : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Selection.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Selection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Selection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Selection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Selection.__pulumiType;
    }
}
exports.Selection = Selection;
/** @internal */
Selection.__pulumiType = 'aws:backup/selection:Selection';
//# sourceMappingURL=selection.js.map