import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a CodePipeline Webhook.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/codepipeline_webhook.html.markdown.
 */
export declare class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook;
    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Webhook;
    /**
     * The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
     */
    readonly authentication: pulumi.Output<string>;
    /**
     * An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
     */
    readonly authenticationConfiguration: pulumi.Output<outputs.codepipeline.WebhookAuthenticationConfiguration | undefined>;
    /**
     * One or more `filter` blocks. Filter blocks are documented below.
     */
    readonly filters: pulumi.Output<outputs.codepipeline.WebhookFilter[]>;
    /**
     * The name of the webhook.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
     */
    readonly targetAction: pulumi.Output<string>;
    /**
     * The name of the pipeline.
     */
    readonly targetPipeline: pulumi.Output<string>;
    /**
     * The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
     */
    readonly authentication?: pulumi.Input<string>;
    /**
     * An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
     */
    readonly authenticationConfiguration?: pulumi.Input<inputs.codepipeline.WebhookAuthenticationConfiguration>;
    /**
     * One or more `filter` blocks. Filter blocks are documented below.
     */
    readonly filters?: pulumi.Input<pulumi.Input<inputs.codepipeline.WebhookFilter>[]>;
    /**
     * The name of the webhook.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
     */
    readonly targetAction?: pulumi.Input<string>;
    /**
     * The name of the pipeline.
     */
    readonly targetPipeline?: pulumi.Input<string>;
    /**
     * The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
     */
    readonly url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
     */
    readonly authentication: pulumi.Input<string>;
    /**
     * An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
     */
    readonly authenticationConfiguration?: pulumi.Input<inputs.codepipeline.WebhookAuthenticationConfiguration>;
    /**
     * One or more `filter` blocks. Filter blocks are documented below.
     */
    readonly filters: pulumi.Input<pulumi.Input<inputs.codepipeline.WebhookFilter>[]>;
    /**
     * The name of the webhook.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
     */
    readonly targetAction: pulumi.Input<string>;
    /**
     * The name of the pipeline.
     */
    readonly targetPipeline: pulumi.Input<string>;
}
