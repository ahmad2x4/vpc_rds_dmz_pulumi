"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an AWS Storage Gateway file, tape, or volume gateway in the provider region.
 *
 * > NOTE: The Storage Gateway API requires the gateway to be connected to properly return information after activation. If you are receiving `The specified gateway is not connected` errors during resource creation (gateway activation), ensure your gateway instance meets the [Storage Gateway requirements](https://docs.aws.amazon.com/storagegateway/latest/userguide/Requirements.html).
 *
 * ## Example Usage
 *
 * ### File Gateway
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.Gateway("example", {
 *     gatewayIpAddress: "1.2.3.4",
 *     gatewayName: "example",
 *     gatewayTimezone: "GMT",
 *     gatewayType: "FILE_S3",
 * });
 * ```
 *
 * ### Tape Gateway
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.Gateway("example", {
 *     gatewayIpAddress: "1.2.3.4",
 *     gatewayName: "example",
 *     gatewayTimezone: "GMT",
 *     gatewayType: "VTL",
 *     mediaChangerType: "AWS-Gateway-VTL",
 *     tapeDriveType: "IBM-ULT3580-TD5",
 * });
 * ```
 *
 * ### Volume Gateway (Cached)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.Gateway("example", {
 *     gatewayIpAddress: "1.2.3.4",
 *     gatewayName: "example",
 *     gatewayTimezone: "GMT",
 *     gatewayType: "CACHED",
 * });
 * ```
 *
 * ### Volume Gateway (Stored)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.Gateway("example", {
 *     gatewayIpAddress: "1.2.3.4",
 *     gatewayName: "example",
 *     gatewayTimezone: "GMT",
 *     gatewayType: "STORED",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/storagegateway_gateway.html.markdown.
 */
class Gateway extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["activationKey"] = state ? state.activationKey : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["cloudwatchLogGroupArn"] = state ? state.cloudwatchLogGroupArn : undefined;
            inputs["gatewayId"] = state ? state.gatewayId : undefined;
            inputs["gatewayIpAddress"] = state ? state.gatewayIpAddress : undefined;
            inputs["gatewayName"] = state ? state.gatewayName : undefined;
            inputs["gatewayTimezone"] = state ? state.gatewayTimezone : undefined;
            inputs["gatewayType"] = state ? state.gatewayType : undefined;
            inputs["mediumChangerType"] = state ? state.mediumChangerType : undefined;
            inputs["smbActiveDirectorySettings"] = state ? state.smbActiveDirectorySettings : undefined;
            inputs["smbGuestPassword"] = state ? state.smbGuestPassword : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tapeDriveType"] = state ? state.tapeDriveType : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.gatewayName === undefined) {
                throw new Error("Missing required property 'gatewayName'");
            }
            if (!args || args.gatewayTimezone === undefined) {
                throw new Error("Missing required property 'gatewayTimezone'");
            }
            inputs["activationKey"] = args ? args.activationKey : undefined;
            inputs["cloudwatchLogGroupArn"] = args ? args.cloudwatchLogGroupArn : undefined;
            inputs["gatewayIpAddress"] = args ? args.gatewayIpAddress : undefined;
            inputs["gatewayName"] = args ? args.gatewayName : undefined;
            inputs["gatewayTimezone"] = args ? args.gatewayTimezone : undefined;
            inputs["gatewayType"] = args ? args.gatewayType : undefined;
            inputs["mediumChangerType"] = args ? args.mediumChangerType : undefined;
            inputs["smbActiveDirectorySettings"] = args ? args.smbActiveDirectorySettings : undefined;
            inputs["smbGuestPassword"] = args ? args.smbGuestPassword : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tapeDriveType"] = args ? args.tapeDriveType : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["gatewayId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Gateway.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Gateway(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gateway.__pulumiType;
    }
}
exports.Gateway = Gateway;
/** @internal */
Gateway.__pulumiType = 'aws:storagegateway/gateway:Gateway';
//# sourceMappingURL=gateway.js.map