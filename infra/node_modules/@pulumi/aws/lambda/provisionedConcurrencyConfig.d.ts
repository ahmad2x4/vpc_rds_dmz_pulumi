import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Lambda Provisioned Concurrency Configuration.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/lambda_provisioned_concurrency_config.html.markdown.
 */
export declare class ProvisionedConcurrencyConfig extends pulumi.CustomResource {
    /**
     * Get an existing ProvisionedConcurrencyConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProvisionedConcurrencyConfigState, opts?: pulumi.CustomResourceOptions): ProvisionedConcurrencyConfig;
    /**
     * Returns true if the given object is an instance of ProvisionedConcurrencyConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProvisionedConcurrencyConfig;
    /**
     * Name or Amazon Resource Name (ARN) of the Lambda Function.
     */
    readonly functionName: pulumi.Output<string>;
    /**
     * Amount of capacity to allocate. Must be greater than or equal to `1`.
     */
    readonly provisionedConcurrentExecutions: pulumi.Output<number>;
    /**
     * Lambda Function version or Lambda Alias name.
     */
    readonly qualifier: pulumi.Output<string>;
    /**
     * Create a ProvisionedConcurrencyConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProvisionedConcurrencyConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProvisionedConcurrencyConfig resources.
 */
export interface ProvisionedConcurrencyConfigState {
    /**
     * Name or Amazon Resource Name (ARN) of the Lambda Function.
     */
    readonly functionName?: pulumi.Input<string>;
    /**
     * Amount of capacity to allocate. Must be greater than or equal to `1`.
     */
    readonly provisionedConcurrentExecutions?: pulumi.Input<number>;
    /**
     * Lambda Function version or Lambda Alias name.
     */
    readonly qualifier?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ProvisionedConcurrencyConfig resource.
 */
export interface ProvisionedConcurrencyConfigArgs {
    /**
     * Name or Amazon Resource Name (ARN) of the Lambda Function.
     */
    readonly functionName: pulumi.Input<string>;
    /**
     * Amount of capacity to allocate. Must be greater than or equal to `1`.
     */
    readonly provisionedConcurrentExecutions: pulumi.Input<number>;
    /**
     * Lambda Function version or Lambda Alias name.
     */
    readonly qualifier: pulumi.Input<string>;
}
