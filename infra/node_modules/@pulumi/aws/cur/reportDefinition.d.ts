import * as pulumi from "@pulumi/pulumi";
/**
 * Manages Cost and Usage Report Definitions.
 *
 * > *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.
 *
 * > *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleCurReportDefinition = new aws.cur.ReportDefinition("exampleCurReportDefinition", {
 *     additionalArtifacts: [
 *         "REDSHIFT",
 *         "QUICKSIGHT",
 *     ],
 *     additionalSchemaElements: ["RESOURCES"],
 *     compression: "GZIP",
 *     format: "textORcsv",
 *     reportName: "example-cur-report-definition",
 *     s3Bucket: "example-bucket-name",
 *     s3Region: "us-east-1",
 *     timeUnit: "HOURLY",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cur_report_definition.html.markdown.
 */
export declare class ReportDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ReportDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReportDefinitionState, opts?: pulumi.CustomResourceOptions): ReportDefinition;
    /**
     * Returns true if the given object is an instance of ReportDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReportDefinition;
    /**
     * A list of additional artifacts. Valid values are: REDSHIFT, QUICKSIGHT.
     */
    readonly additionalArtifacts: pulumi.Output<string[] | undefined>;
    /**
     * A list of schema elements. Valid values are: RESOURCES.
     */
    readonly additionalSchemaElements: pulumi.Output<string[]>;
    /**
     * Compression format for report. Valid values are: GZIP, ZIP.
     */
    readonly compression: pulumi.Output<string>;
    /**
     * Format for report. Valid values are: textORcsv.
     */
    readonly format: pulumi.Output<string>;
    /**
     * Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.
     */
    readonly reportName: pulumi.Output<string>;
    /**
     * Name of the existing S3 bucket to hold generated reports.
     */
    readonly s3Bucket: pulumi.Output<string>;
    /**
     * Report path prefix. Limited to 256 characters.
     */
    readonly s3Prefix: pulumi.Output<string | undefined>;
    /**
     * Region of the existing S3 bucket to hold generated reports.
     */
    readonly s3Region: pulumi.Output<string>;
    /**
     * The frequency on which report data are measured and displayed.  Valid values are: HOURLY, DAILY.
     */
    readonly timeUnit: pulumi.Output<string>;
    /**
     * Create a ReportDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReportDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ReportDefinition resources.
 */
export interface ReportDefinitionState {
    /**
     * A list of additional artifacts. Valid values are: REDSHIFT, QUICKSIGHT.
     */
    readonly additionalArtifacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of schema elements. Valid values are: RESOURCES.
     */
    readonly additionalSchemaElements?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Compression format for report. Valid values are: GZIP, ZIP.
     */
    readonly compression?: pulumi.Input<string>;
    /**
     * Format for report. Valid values are: textORcsv.
     */
    readonly format?: pulumi.Input<string>;
    /**
     * Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.
     */
    readonly reportName?: pulumi.Input<string>;
    /**
     * Name of the existing S3 bucket to hold generated reports.
     */
    readonly s3Bucket?: pulumi.Input<string>;
    /**
     * Report path prefix. Limited to 256 characters.
     */
    readonly s3Prefix?: pulumi.Input<string>;
    /**
     * Region of the existing S3 bucket to hold generated reports.
     */
    readonly s3Region?: pulumi.Input<string>;
    /**
     * The frequency on which report data are measured and displayed.  Valid values are: HOURLY, DAILY.
     */
    readonly timeUnit?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ReportDefinition resource.
 */
export interface ReportDefinitionArgs {
    /**
     * A list of additional artifacts. Valid values are: REDSHIFT, QUICKSIGHT.
     */
    readonly additionalArtifacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of schema elements. Valid values are: RESOURCES.
     */
    readonly additionalSchemaElements: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Compression format for report. Valid values are: GZIP, ZIP.
     */
    readonly compression: pulumi.Input<string>;
    /**
     * Format for report. Valid values are: textORcsv.
     */
    readonly format: pulumi.Input<string>;
    /**
     * Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.
     */
    readonly reportName: pulumi.Input<string>;
    /**
     * Name of the existing S3 bucket to hold generated reports.
     */
    readonly s3Bucket: pulumi.Input<string>;
    /**
     * Report path prefix. Limited to 256 characters.
     */
    readonly s3Prefix?: pulumi.Input<string>;
    /**
     * Region of the existing S3 bucket to hold generated reports.
     */
    readonly s3Region: pulumi.Input<string>;
    /**
     * The frequency on which report data are measured and displayed.  Valid values are: HOURLY, DAILY.
     */
    readonly timeUnit: pulumi.Input<string>;
}
