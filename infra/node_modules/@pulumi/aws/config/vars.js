"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
let __config = new pulumi.Config("aws");
/**
 * The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
 */
exports.accessKey = __config.get("accessKey") || utilities.getEnv("AWS_ACCESS_KEY_ID");
exports.allowedAccountIds = __config.getObject("allowedAccountIds");
exports.assumeRole = __config.getObject("assumeRole");
exports.endpoints = __config.getObject("endpoints");
exports.forbiddenAccountIds = __config.getObject("forbiddenAccountIds");
/**
 * Resource tag key prefixes to ignore across all resources.
 */
exports.ignoreTagPrefixes = __config.getObject("ignoreTagPrefixes");
/**
 * Resource tag keys to ignore across all resources.
 */
exports.ignoreTags = __config.getObject("ignoreTags");
/**
 * Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
 */
exports.insecure = __config.getObject("insecure");
/**
 * The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
 */
exports.maxRetries = __config.getObject("maxRetries");
/**
 * The profile for API operations. If not set, the default profile created with `aws configure` will be used.
 */
exports.profile = __config.get("profile") || utilities.getEnv("AWS_PROFILE");
/**
 * The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
 */
exports.region = __config.get("region") || utilities.getEnv("AWS_REGION", "AWS_DEFAULT_REGION");
/**
 * Set this to true to force the request to use path-style addressing, i.e., http://s3.amazonaws.com/BUCKET/KEY. By
 * default, the S3 client will use virtual hosted bucket addressing when possible (http://BUCKET.s3.amazonaws.com/KEY).
 * Specific to the Amazon S3 service.
 */
exports.s3ForcePathStyle = __config.getObject("s3ForcePathStyle");
/**
 * The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
 */
exports.secretKey = __config.get("secretKey") || utilities.getEnv("AWS_SECRET_ACCESS_KEY");
/**
 * The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
 */
exports.sharedCredentialsFile = __config.get("sharedCredentialsFile") || utilities.getEnv("AWS_SHARED_CREDENTIALS_FILE");
/**
 * Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS
 * available/implemented.
 */
exports.skipCredentialsValidation = __config.getObject("skipCredentialsValidation");
/**
 * Skip getting the supported EC2 platforms. Used by users that don't have ec2:DescribeAccountAttributes permissions.
 */
exports.skipGetEc2Platforms = __config.getObject("skipGetEc2Platforms");
exports.skipMetadataApiCheck = __config.getObject("skipMetadataApiCheck");
/**
 * Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that are
 * not public (yet).
 */
exports.skipRegionValidation = __config.getObject("skipRegionValidation");
/**
 * Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
 */
exports.skipRequestingAccountId = __config.getObject("skipRequestingAccountId");
/**
 * session token. A session token is only required if you are using temporary security credentials.
 */
exports.token = __config.get("token") || utilities.getEnv("AWS_SESSION_TOKEN");
//# sourceMappingURL=vars.js.map