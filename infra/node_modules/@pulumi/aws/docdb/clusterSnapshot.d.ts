import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a DocDB database cluster snapshot for DocDB clusters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.docdb.ClusterSnapshot("example", {
 *     dbClusterIdentifier: aws_docdb_cluster_example.id,
 *     dbClusterSnapshotIdentifier: "resourcetestsnapshot1234",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/docdb_cluster_snapshot.html.markdown.
 */
export declare class ClusterSnapshot extends pulumi.CustomResource {
    /**
     * Get an existing ClusterSnapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterSnapshotState, opts?: pulumi.CustomResourceOptions): ClusterSnapshot;
    /**
     * Returns true if the given object is an instance of ClusterSnapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClusterSnapshot;
    /**
     * List of EC2 Availability Zones that instances in the DocDB cluster snapshot can be restored in.
     */
    readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * The DocDB Cluster Identifier from which to take the snapshot.
     */
    readonly dbClusterIdentifier: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for the DocDB Cluster Snapshot.
     */
    readonly dbClusterSnapshotArn: pulumi.Output<string>;
    /**
     * The Identifier for the snapshot.
     */
    readonly dbClusterSnapshotIdentifier: pulumi.Output<string>;
    /**
     * Specifies the name of the database engine.
     */
    readonly engine: pulumi.Output<string>;
    /**
     * Version of the database engine for this DocDB cluster snapshot.
     */
    readonly engineVersion: pulumi.Output<string>;
    /**
     * If storageEncrypted is true, the AWS KMS key identifier for the encrypted DocDB cluster snapshot.
     */
    readonly kmsKeyId: pulumi.Output<string>;
    /**
     * Port that the DocDB cluster was listening on at the time of the snapshot.
     */
    readonly port: pulumi.Output<number>;
    readonly snapshotType: pulumi.Output<string>;
    readonly sourceDbClusterSnapshotArn: pulumi.Output<string>;
    /**
     * The status of this DocDB Cluster Snapshot.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Specifies whether the DocDB cluster snapshot is encrypted.
     */
    readonly storageEncrypted: pulumi.Output<boolean>;
    /**
     * The VPC ID associated with the DocDB cluster snapshot.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a ClusterSnapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterSnapshotArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ClusterSnapshot resources.
 */
export interface ClusterSnapshotState {
    /**
     * List of EC2 Availability Zones that instances in the DocDB cluster snapshot can be restored in.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DocDB Cluster Identifier from which to take the snapshot.
     */
    readonly dbClusterIdentifier?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for the DocDB Cluster Snapshot.
     */
    readonly dbClusterSnapshotArn?: pulumi.Input<string>;
    /**
     * The Identifier for the snapshot.
     */
    readonly dbClusterSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * Specifies the name of the database engine.
     */
    readonly engine?: pulumi.Input<string>;
    /**
     * Version of the database engine for this DocDB cluster snapshot.
     */
    readonly engineVersion?: pulumi.Input<string>;
    /**
     * If storageEncrypted is true, the AWS KMS key identifier for the encrypted DocDB cluster snapshot.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Port that the DocDB cluster was listening on at the time of the snapshot.
     */
    readonly port?: pulumi.Input<number>;
    readonly snapshotType?: pulumi.Input<string>;
    readonly sourceDbClusterSnapshotArn?: pulumi.Input<string>;
    /**
     * The status of this DocDB Cluster Snapshot.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * Specifies whether the DocDB cluster snapshot is encrypted.
     */
    readonly storageEncrypted?: pulumi.Input<boolean>;
    /**
     * The VPC ID associated with the DocDB cluster snapshot.
     */
    readonly vpcId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ClusterSnapshot resource.
 */
export interface ClusterSnapshotArgs {
    /**
     * The DocDB Cluster Identifier from which to take the snapshot.
     */
    readonly dbClusterIdentifier: pulumi.Input<string>;
    /**
     * The Identifier for the snapshot.
     */
    readonly dbClusterSnapshotIdentifier: pulumi.Input<string>;
}
