import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Inspector assessment template
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = new aws.inspector.AssessmentTemplate("foo", {
 *     duration: 3600,
 *     rulesPackageArns: [
 *         "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-9hgA516p",
 *         "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-H5hpSawc",
 *         "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ",
 *         "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-vg5GGHSD",
 *     ],
 *     targetArn: aws_inspector_assessment_target_foo.arn,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/inspector_assessment_template.html.markdown.
 */
export declare class AssessmentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AssessmentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssessmentTemplateState, opts?: pulumi.CustomResourceOptions): AssessmentTemplate;
    /**
     * Returns true if the given object is an instance of AssessmentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AssessmentTemplate;
    /**
     * The template assessment ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The duration of the inspector run.
     */
    readonly duration: pulumi.Output<number>;
    /**
     * The name of the assessment template.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The rules to be used during the run.
     */
    readonly rulesPackageArns: pulumi.Output<string[]>;
    /**
     * The assessment target ARN to attach the template to.
     */
    readonly targetArn: pulumi.Output<string>;
    /**
     * Create a AssessmentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssessmentTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AssessmentTemplate resources.
 */
export interface AssessmentTemplateState {
    /**
     * The template assessment ARN.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The duration of the inspector run.
     */
    readonly duration?: pulumi.Input<number>;
    /**
     * The name of the assessment template.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The rules to be used during the run.
     */
    readonly rulesPackageArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The assessment target ARN to attach the template to.
     */
    readonly targetArn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AssessmentTemplate resource.
 */
export interface AssessmentTemplateArgs {
    /**
     * The duration of the inspector run.
     */
    readonly duration: pulumi.Input<number>;
    /**
     * The name of the assessment template.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The rules to be used during the run.
     */
    readonly rulesPackageArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The assessment target ARN to attach the template to.
     */
    readonly targetArn: pulumi.Input<string>;
}
