import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a load balancer cookie stickiness policy, which allows an ELB to control the sticky session lifetime of the browser.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const lb = new aws.elb.LoadBalancer("lb", {
 *     availabilityZones: ["us-east-1a"],
 *     listeners: [{
 *         instancePort: 8000,
 *         instanceProtocol: "http",
 *         lbPort: 80,
 *         lbProtocol: "http",
 *     }],
 * });
 * const foo = new aws.elb.LoadBalancerCookieStickinessPolicy("foo", {
 *     cookieExpirationPeriod: 600,
 *     lbPort: 80,
 *     loadBalancer: lb.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/lb_cookie_stickiness_policy.html.markdown.
 */
export declare class LoadBalancerCookieStickinessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancerCookieStickinessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerCookieStickinessPolicyState, opts?: pulumi.CustomResourceOptions): LoadBalancerCookieStickinessPolicy;
    /**
     * Returns true if the given object is an instance of LoadBalancerCookieStickinessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadBalancerCookieStickinessPolicy;
    /**
     * The time period after which
     * the session cookie should be considered stale, expressed in seconds.
     */
    readonly cookieExpirationPeriod: pulumi.Output<number | undefined>;
    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    readonly lbPort: pulumi.Output<number>;
    /**
     * The load balancer to which the policy
     * should be attached.
     */
    readonly loadBalancer: pulumi.Output<string>;
    /**
     * The name of the stickiness policy.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a LoadBalancerCookieStickinessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerCookieStickinessPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LoadBalancerCookieStickinessPolicy resources.
 */
export interface LoadBalancerCookieStickinessPolicyState {
    /**
     * The time period after which
     * the session cookie should be considered stale, expressed in seconds.
     */
    readonly cookieExpirationPeriod?: pulumi.Input<number>;
    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    readonly lbPort?: pulumi.Input<number>;
    /**
     * The load balancer to which the policy
     * should be attached.
     */
    readonly loadBalancer?: pulumi.Input<string>;
    /**
     * The name of the stickiness policy.
     */
    readonly name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LoadBalancerCookieStickinessPolicy resource.
 */
export interface LoadBalancerCookieStickinessPolicyArgs {
    /**
     * The time period after which
     * the session cookie should be considered stale, expressed in seconds.
     */
    readonly cookieExpirationPeriod?: pulumi.Input<number>;
    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    readonly lbPort: pulumi.Input<number>;
    /**
     * The load balancer to which the policy
     * should be attached.
     */
    readonly loadBalancer: pulumi.Input<string>;
    /**
     * The name of the stickiness policy.
     */
    readonly name?: pulumi.Input<string>;
}
