import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an AppSync Function.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testGraphQLApi = new aws.appsync.GraphQLApi("test", {
 *     authenticationType: "API_KEY",
 *     schema: `type Mutation {
 *     putPost(id: ID!, title: String!): Post
 * }
 *
 * type Post {
 *     id: ID!
 *     title: String!
 * }
 *
 * type Query {
 *     singlePost(id: ID!): Post
 * }
 *
 * schema {
 *     query: Query
 *     mutation: Mutation
 * }
 * `,
 * });
 * const testDataSource = new aws.appsync.DataSource("test", {
 *     apiId: testGraphQLApi.id,
 *     httpConfig: {
 *         endpoint: "http://example.com",
 *     },
 *     type: "HTTP",
 * });
 * const testFunction = new aws.appsync.Function("test", {
 *     apiId: testGraphQLApi.id,
 *     dataSource: testDataSource.name,
 *     name: "tfExample",
 *     requestMappingTemplate: `{
 *     "version": "2018-05-29",
 *     "method": "GET",
 *     "resourcePath": "/",
 *     "params":{
 *         "headers": $utils.http.copyheaders($ctx.request.headers)
 *     }
 * }
 * `,
 *     responseMappingTemplate: `#if($ctx.result.statusCode == 200)
 *     $ctx.result.body
 * #else
 *     $utils.appendError($ctx.result.body, $ctx.result.statusCode)
 * #end
 * `,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/appsync_function.html.markdown.
 */
export declare class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionState, opts?: pulumi.CustomResourceOptions): Function;
    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Function;
    /**
     * The ID of the associated AppSync API.
     */
    readonly apiId: pulumi.Output<string>;
    /**
     * The ARN of the Function object.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Function DataSource name.
     */
    readonly dataSource: pulumi.Output<string>;
    /**
     * The Function description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A unique ID representing the Function object.
     */
    readonly functionId: pulumi.Output<string>;
    /**
     * The version of the request mapping template. Currently the supported value is `2018-05-29`.
     */
    readonly functionVersion: pulumi.Output<string | undefined>;
    /**
     * The Function name. The function name does not have to be unique.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    readonly requestMappingTemplate: pulumi.Output<string>;
    /**
     * The Function response mapping template.
     */
    readonly responseMappingTemplate: pulumi.Output<string>;
    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Function resources.
 */
export interface FunctionState {
    /**
     * The ID of the associated AppSync API.
     */
    readonly apiId?: pulumi.Input<string>;
    /**
     * The ARN of the Function object.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The Function DataSource name.
     */
    readonly dataSource?: pulumi.Input<string>;
    /**
     * The Function description.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A unique ID representing the Function object.
     */
    readonly functionId?: pulumi.Input<string>;
    /**
     * The version of the request mapping template. Currently the supported value is `2018-05-29`.
     */
    readonly functionVersion?: pulumi.Input<string>;
    /**
     * The Function name. The function name does not have to be unique.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    readonly requestMappingTemplate?: pulumi.Input<string>;
    /**
     * The Function response mapping template.
     */
    readonly responseMappingTemplate?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * The ID of the associated AppSync API.
     */
    readonly apiId: pulumi.Input<string>;
    /**
     * The Function DataSource name.
     */
    readonly dataSource: pulumi.Input<string>;
    /**
     * The Function description.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The version of the request mapping template. Currently the supported value is `2018-05-29`.
     */
    readonly functionVersion?: pulumi.Input<string>;
    /**
     * The Function name. The function name does not have to be unique.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    readonly requestMappingTemplate: pulumi.Input<string>;
    /**
     * The Function response mapping template.
     */
    readonly responseMappingTemplate: pulumi.Input<string>;
}
