import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a way to set SNS SMS preferences.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const updateSmsPrefs = new aws.sns.SmsPreferences("updateSmsPrefs", {});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_sms_preferences.html.markdown.
 */
export declare class SmsPreferences extends pulumi.CustomResource {
    /**
     * Get an existing SmsPreferences resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmsPreferencesState, opts?: pulumi.CustomResourceOptions): SmsPreferences;
    /**
     * Returns true if the given object is an instance of SmsPreferences.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SmsPreferences;
    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     */
    readonly defaultSenderId: pulumi.Output<string | undefined>;
    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     */
    readonly defaultSmsType: pulumi.Output<string | undefined>;
    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     */
    readonly deliveryStatusIamRoleArn: pulumi.Output<string | undefined>;
    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     */
    readonly deliveryStatusSuccessSamplingRate: pulumi.Output<string | undefined>;
    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     */
    readonly monthlySpendLimit: pulumi.Output<string | undefined>;
    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     */
    readonly usageReportS3Bucket: pulumi.Output<string | undefined>;
    /**
     * Create a SmsPreferences resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SmsPreferencesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SmsPreferences resources.
 */
export interface SmsPreferencesState {
    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     */
    readonly defaultSenderId?: pulumi.Input<string>;
    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     */
    readonly defaultSmsType?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     */
    readonly deliveryStatusIamRoleArn?: pulumi.Input<string>;
    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     */
    readonly deliveryStatusSuccessSamplingRate?: pulumi.Input<string>;
    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     */
    readonly monthlySpendLimit?: pulumi.Input<string>;
    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     */
    readonly usageReportS3Bucket?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SmsPreferences resource.
 */
export interface SmsPreferencesArgs {
    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     */
    readonly defaultSenderId?: pulumi.Input<string>;
    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     */
    readonly defaultSmsType?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     */
    readonly deliveryStatusIamRoleArn?: pulumi.Input<string>;
    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     */
    readonly deliveryStatusSuccessSamplingRate?: pulumi.Input<string>;
    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     */
    readonly monthlySpendLimit?: pulumi.Input<string>;
    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     */
    readonly usageReportS3Bucket?: pulumi.Input<string>;
}
