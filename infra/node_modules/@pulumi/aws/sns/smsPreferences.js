"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a way to set SNS SMS preferences.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const updateSmsPrefs = new aws.sns.SmsPreferences("updateSmsPrefs", {});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_sms_preferences.html.markdown.
 */
class SmsPreferences extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["defaultSenderId"] = state ? state.defaultSenderId : undefined;
            inputs["defaultSmsType"] = state ? state.defaultSmsType : undefined;
            inputs["deliveryStatusIamRoleArn"] = state ? state.deliveryStatusIamRoleArn : undefined;
            inputs["deliveryStatusSuccessSamplingRate"] = state ? state.deliveryStatusSuccessSamplingRate : undefined;
            inputs["monthlySpendLimit"] = state ? state.monthlySpendLimit : undefined;
            inputs["usageReportS3Bucket"] = state ? state.usageReportS3Bucket : undefined;
        }
        else {
            const args = argsOrState;
            inputs["defaultSenderId"] = args ? args.defaultSenderId : undefined;
            inputs["defaultSmsType"] = args ? args.defaultSmsType : undefined;
            inputs["deliveryStatusIamRoleArn"] = args ? args.deliveryStatusIamRoleArn : undefined;
            inputs["deliveryStatusSuccessSamplingRate"] = args ? args.deliveryStatusSuccessSamplingRate : undefined;
            inputs["monthlySpendLimit"] = args ? args.monthlySpendLimit : undefined;
            inputs["usageReportS3Bucket"] = args ? args.usageReportS3Bucket : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(SmsPreferences.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SmsPreferences resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new SmsPreferences(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SmsPreferences.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmsPreferences.__pulumiType;
    }
}
exports.SmsPreferences = SmsPreferences;
/** @internal */
SmsPreferences.__pulumiType = 'aws:sns/smsPreferences:SmsPreferences';
//# sourceMappingURL=smsPreferences.js.map