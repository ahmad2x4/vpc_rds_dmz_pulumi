"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an SNS platform application resource
 *
 * ## Example Usage
 *
 * ### Apple Push Notification Service (APNS)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const apnsApplication = new aws.sns.PlatformApplication("apnsApplication", {
 *     platform: "APNS",
 *     platformCredential: "<APNS PRIVATE KEY>",
 *     platformPrincipal: "<APNS CERTIFICATE>",
 * });
 * ```
 *
 * ### Google Cloud Messaging (GCM)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const gcmApplication = new aws.sns.PlatformApplication("gcmApplication", {
 *     platform: "GCM",
 *     platformCredential: "<GCM API KEY>",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_platform_application.html.markdown.
 */
class PlatformApplication extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["eventDeliveryFailureTopicArn"] = state ? state.eventDeliveryFailureTopicArn : undefined;
            inputs["eventEndpointCreatedTopicArn"] = state ? state.eventEndpointCreatedTopicArn : undefined;
            inputs["eventEndpointDeletedTopicArn"] = state ? state.eventEndpointDeletedTopicArn : undefined;
            inputs["eventEndpointUpdatedTopicArn"] = state ? state.eventEndpointUpdatedTopicArn : undefined;
            inputs["failureFeedbackRoleArn"] = state ? state.failureFeedbackRoleArn : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["platform"] = state ? state.platform : undefined;
            inputs["platformCredential"] = state ? state.platformCredential : undefined;
            inputs["platformPrincipal"] = state ? state.platformPrincipal : undefined;
            inputs["successFeedbackRoleArn"] = state ? state.successFeedbackRoleArn : undefined;
            inputs["successFeedbackSampleRate"] = state ? state.successFeedbackSampleRate : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.platform === undefined) {
                throw new Error("Missing required property 'platform'");
            }
            if (!args || args.platformCredential === undefined) {
                throw new Error("Missing required property 'platformCredential'");
            }
            inputs["eventDeliveryFailureTopicArn"] = args ? args.eventDeliveryFailureTopicArn : undefined;
            inputs["eventEndpointCreatedTopicArn"] = args ? args.eventEndpointCreatedTopicArn : undefined;
            inputs["eventEndpointDeletedTopicArn"] = args ? args.eventEndpointDeletedTopicArn : undefined;
            inputs["eventEndpointUpdatedTopicArn"] = args ? args.eventEndpointUpdatedTopicArn : undefined;
            inputs["failureFeedbackRoleArn"] = args ? args.failureFeedbackRoleArn : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["platform"] = args ? args.platform : undefined;
            inputs["platformCredential"] = args ? args.platformCredential : undefined;
            inputs["platformPrincipal"] = args ? args.platformPrincipal : undefined;
            inputs["successFeedbackRoleArn"] = args ? args.successFeedbackRoleArn : undefined;
            inputs["successFeedbackSampleRate"] = args ? args.successFeedbackSampleRate : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PlatformApplication.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PlatformApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new PlatformApplication(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PlatformApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PlatformApplication.__pulumiType;
    }
}
exports.PlatformApplication = PlatformApplication;
/** @internal */
PlatformApplication.__pulumiType = 'aws:sns/platformApplication:PlatformApplication';
//# sourceMappingURL=platformApplication.js.map