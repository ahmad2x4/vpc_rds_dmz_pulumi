import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Gamelift Alias resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.gamelift.Alias("example", {
 *     description: "Example Description",
 *     routingStrategy: {
 *         message: "Example Message",
 *         type: "TERMINAL",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/gamelift_alias.html.markdown.
 */
export declare class Alias extends pulumi.CustomResource {
    /**
     * Get an existing Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AliasState, opts?: pulumi.CustomResourceOptions): Alias;
    /**
     * Returns true if the given object is an instance of Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Alias;
    /**
     * Alias ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Description of the alias.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the alias.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the fleet and/or routing type to use for the alias.
     */
    readonly routingStrategy: pulumi.Output<outputs.gamelift.AliasRoutingStrategy>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Create a Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Alias resources.
 */
export interface AliasState {
    /**
     * Alias ARN.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Description of the alias.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name of the alias.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the fleet and/or routing type to use for the alias.
     */
    readonly routingStrategy?: pulumi.Input<inputs.gamelift.AliasRoutingStrategy>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
/**
 * The set of arguments for constructing a Alias resource.
 */
export interface AliasArgs {
    /**
     * Description of the alias.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name of the alias.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the fleet and/or routing type to use for the alias.
     */
    readonly routingStrategy: pulumi.Input<inputs.gamelift.AliasRoutingStrategy>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
