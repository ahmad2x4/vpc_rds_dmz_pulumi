import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import { IpAddressType } from "../alb/ipAddressType";
import { LoadBalancerType } from "../alb/loadBalancerType";
/**
 * Provides a Load Balancer resource.
 *
 * > **Note:** `aws.alb.LoadBalancer` is known as `aws.lb.LoadBalancer`. The functionality is identical.
 *
 * ## Example Usage
 *
 * ### Application Load Balancer
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.lb.LoadBalancer("test", {
 *     accessLogs: {
 *         bucket: aws_s3_bucket_lb_logs.bucket,
 *         enabled: true,
 *         prefix: "test-lb",
 *     },
 *     enableDeletionProtection: true,
 *     internal: false,
 *     loadBalancerType: "application",
 *     securityGroups: [aws_security_group_lb_sg.id],
 *     subnets: [aws_subnet_public.map(v => v.id)],
 *     tags: {
 *         Environment: "production",
 *     },
 * });
 * ```
 *
 * ### Network Load Balancer
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.lb.LoadBalancer("test", {
 *     enableDeletionProtection: true,
 *     internal: false,
 *     loadBalancerType: "network",
 *     subnets: [aws_subnet_public.map(v => v.id)],
 *     tags: {
 *         Environment: "production",
 *     },
 * });
 * ```
 *
 * ### Specifying Elastic IPs
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lb.LoadBalancer("example", {
 *     loadBalancerType: "network",
 *     subnetMappings: [
 *         {
 *             allocationId: aws_eip_example1.id,
 *             subnetId: aws_subnet_example1.id,
 *         },
 *         {
 *             allocationId: aws_eip_example2.id,
 *             subnetId: aws_subnet_example2.id,
 *         },
 *     ],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/alb_legacy.html.markdown.
 */
export declare class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer;
    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadBalancer;
    /**
     * An Access Logs block. Access Logs documented below.
     */
    readonly accessLogs: pulumi.Output<outputs.applicationloadbalancing.LoadBalancerAccessLogs | undefined>;
    /**
     * The ARN of the load balancer (matches `id`).
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ARN suffix for use with CloudWatch Metrics.
     */
    readonly arnSuffix: pulumi.Output<string>;
    /**
     * The DNS name of the load balancer.
     */
    readonly dnsName: pulumi.Output<string>;
    /**
     * If true, cross-zone load balancing of the load balancer will be enabled.
     * This is a `network` load balancer feature. Defaults to `false`.
     */
    readonly enableCrossZoneLoadBalancing: pulumi.Output<boolean | undefined>;
    /**
     * If true, deletion of the load balancer will be disabled via
     * the AWS API. This will prevent this provider from deleting the load balancer. Defaults to `false`.
     */
    readonly enableDeletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether HTTP/2 is enabled in `application` load balancers. Defaults to `true`.
     */
    readonly enableHttp2: pulumi.Output<boolean | undefined>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`. Default: 60.
     */
    readonly idleTimeout: pulumi.Output<number | undefined>;
    /**
     * If true, the LB will be internal.
     */
    readonly internal: pulumi.Output<boolean>;
    /**
     * The type of IP addresses used by the subnets for your load balancer. The possible values are `ipv4` and `dualstack`
     */
    readonly ipAddressType: pulumi.Output<IpAddressType>;
    /**
     * The type of load balancer to create. Possible values are `application` or `network`. The default value is `application`.
     */
    readonly loadBalancerType: pulumi.Output<LoadBalancerType | undefined>;
    /**
     * The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,
     * must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,
     * this provider will autogenerate a name beginning with `tf-lb`.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix: pulumi.Output<string | undefined>;
    /**
     * A list of security group IDs to assign to the LB. Only valid for Load Balancers of type `application`.
     */
    readonly securityGroups: pulumi.Output<string[]>;
    /**
     * A subnet mapping block as documented below.
     */
    readonly subnetMappings: pulumi.Output<outputs.applicationloadbalancing.LoadBalancerSubnetMapping[]>;
    /**
     * A list of subnet IDs to attach to the LB. Subnets
     * cannot be updated for Load Balancers of type `network`. Changing this value
     * for load balancers of type `network` will force a recreation of the resource.
     */
    readonly subnets: pulumi.Output<string[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    readonly vpcId: pulumi.Output<string>;
    /**
     * The canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    /**
     * An Access Logs block. Access Logs documented below.
     */
    readonly accessLogs?: pulumi.Input<inputs.applicationloadbalancing.LoadBalancerAccessLogs>;
    /**
     * The ARN of the load balancer (matches `id`).
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The ARN suffix for use with CloudWatch Metrics.
     */
    readonly arnSuffix?: pulumi.Input<string>;
    /**
     * The DNS name of the load balancer.
     */
    readonly dnsName?: pulumi.Input<string>;
    /**
     * If true, cross-zone load balancing of the load balancer will be enabled.
     * This is a `network` load balancer feature. Defaults to `false`.
     */
    readonly enableCrossZoneLoadBalancing?: pulumi.Input<boolean>;
    /**
     * If true, deletion of the load balancer will be disabled via
     * the AWS API. This will prevent this provider from deleting the load balancer. Defaults to `false`.
     */
    readonly enableDeletionProtection?: pulumi.Input<boolean>;
    /**
     * Indicates whether HTTP/2 is enabled in `application` load balancers. Defaults to `true`.
     */
    readonly enableHttp2?: pulumi.Input<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`. Default: 60.
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * If true, the LB will be internal.
     */
    readonly internal?: pulumi.Input<boolean>;
    /**
     * The type of IP addresses used by the subnets for your load balancer. The possible values are `ipv4` and `dualstack`
     */
    readonly ipAddressType?: pulumi.Input<IpAddressType>;
    /**
     * The type of load balancer to create. Possible values are `application` or `network`. The default value is `application`.
     */
    readonly loadBalancerType?: pulumi.Input<LoadBalancerType>;
    /**
     * The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,
     * must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,
     * this provider will autogenerate a name beginning with `tf-lb`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * A list of security group IDs to assign to the LB. Only valid for Load Balancers of type `application`.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A subnet mapping block as documented below.
     */
    readonly subnetMappings?: pulumi.Input<pulumi.Input<inputs.applicationloadbalancing.LoadBalancerSubnetMapping>[]>;
    /**
     * A list of subnet IDs to attach to the LB. Subnets
     * cannot be updated for Load Balancers of type `network`. Changing this value
     * for load balancers of type `network` will force a recreation of the resource.
     */
    readonly subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    readonly vpcId?: pulumi.Input<string>;
    /**
     * The canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).
     */
    readonly zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * An Access Logs block. Access Logs documented below.
     */
    readonly accessLogs?: pulumi.Input<inputs.applicationloadbalancing.LoadBalancerAccessLogs>;
    /**
     * If true, cross-zone load balancing of the load balancer will be enabled.
     * This is a `network` load balancer feature. Defaults to `false`.
     */
    readonly enableCrossZoneLoadBalancing?: pulumi.Input<boolean>;
    /**
     * If true, deletion of the load balancer will be disabled via
     * the AWS API. This will prevent this provider from deleting the load balancer. Defaults to `false`.
     */
    readonly enableDeletionProtection?: pulumi.Input<boolean>;
    /**
     * Indicates whether HTTP/2 is enabled in `application` load balancers. Defaults to `true`.
     */
    readonly enableHttp2?: pulumi.Input<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`. Default: 60.
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * If true, the LB will be internal.
     */
    readonly internal?: pulumi.Input<boolean>;
    /**
     * The type of IP addresses used by the subnets for your load balancer. The possible values are `ipv4` and `dualstack`
     */
    readonly ipAddressType?: pulumi.Input<IpAddressType>;
    /**
     * The type of load balancer to create. Possible values are `application` or `network`. The default value is `application`.
     */
    readonly loadBalancerType?: pulumi.Input<LoadBalancerType>;
    /**
     * The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,
     * must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,
     * this provider will autogenerate a name beginning with `tf-lb`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * A list of security group IDs to assign to the LB. Only valid for Load Balancers of type `application`.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A subnet mapping block as documented below.
     */
    readonly subnetMappings?: pulumi.Input<pulumi.Input<inputs.applicationloadbalancing.LoadBalancerSubnetMapping>[]>;
    /**
     * A list of subnet IDs to attach to the LB. Subnets
     * cannot be updated for Load Balancers of type `network`. Changing this value
     * for load balancers of type `network` will force a recreation of the resource.
     */
    readonly subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
