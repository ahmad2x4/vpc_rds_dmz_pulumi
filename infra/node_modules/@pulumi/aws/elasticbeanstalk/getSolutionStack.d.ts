import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to get the name of a elastic beanstalk solution stack.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const multiDocker = aws.elasticbeanstalk.getSolutionStack({
 *     mostRecent: true,
 *     nameRegex: "^64bit Amazon Linux (.*) Multi-container Docker (.*)$",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/elastic_beanstalk_solution_stack.html.markdown.
 */
export declare function getSolutionStack(args: GetSolutionStackArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionStackResult> & GetSolutionStackResult;
/**
 * A collection of arguments for invoking getSolutionStack.
 */
export interface GetSolutionStackArgs {
    /**
     * If more than one result is returned, use the most
     * recent solution stack.
     */
    readonly mostRecent?: boolean;
    /**
     * A regex string to apply to the solution stack list returned
     * by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
     * AWS documentation for reference solution stack names.
     */
    readonly nameRegex: string;
}
/**
 * A collection of values returned by getSolutionStack.
 */
export interface GetSolutionStackResult {
    readonly mostRecent?: boolean;
    /**
     * The name of the solution stack.
     */
    readonly name: string;
    readonly nameRegex: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
