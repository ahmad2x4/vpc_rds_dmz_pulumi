import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an Elastic Beanstalk Configuration Template, which are associated with
 * a specific application and are used to deploy different versions of the
 * application with the same configuration settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const tftest = new aws.elasticbeanstalk.Application("tftest", {
 *     description: "tf-test-desc",
 * });
 * const tfTemplate = new aws.elasticbeanstalk.ConfigurationTemplate("tfTemplate", {
 *     application: tftest.name,
 *     solutionStackName: "64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4",
 * });
 * ```
 *
 * ## Option Settings
 *
 * The `setting` field supports the following format:
 *
 * * `namespace` - unique namespace identifying the option's associated AWS resource
 * * `name` - name of the configuration option
 * * `value` - value for the configuration option
 * * `resource` - (Optional) resource name for [scheduled action](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalingscheduledaction)
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elastic_beanstalk_configuration_template.html.markdown.
 */
export declare class ConfigurationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationTemplateState, opts?: pulumi.CustomResourceOptions): ConfigurationTemplate;
    /**
     * Returns true if the given object is an instance of ConfigurationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfigurationTemplate;
    /**
     * name of the application to associate with this configuration template
     */
    readonly application: pulumi.Output<string>;
    /**
     * Short description of the Template
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment used with this configuration template
     */
    readonly environmentId: pulumi.Output<string | undefined>;
    /**
     * A unique name for this Template.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Option settings to configure the new Environment. These
     * override specific values that are set as defaults. The format is detailed
     * below in Option Settings
     */
    readonly settings: pulumi.Output<outputs.elasticbeanstalk.ConfigurationTemplateSetting[]>;
    /**
     * A solution stack to base your Template
     * off of. Example stacks can be found in the [Amazon API documentation][1]
     */
    readonly solutionStackName: pulumi.Output<string | undefined>;
    /**
     * Create a ConfigurationTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ConfigurationTemplate resources.
 */
export interface ConfigurationTemplateState {
    /**
     * name of the application to associate with this configuration template
     */
    readonly application?: pulumi.Input<string>;
    /**
     * Short description of the Template
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the environment used with this configuration template
     */
    readonly environmentId?: pulumi.Input<string>;
    /**
     * A unique name for this Template.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Option settings to configure the new Environment. These
     * override specific values that are set as defaults. The format is detailed
     * below in Option Settings
     */
    readonly settings?: pulumi.Input<pulumi.Input<inputs.elasticbeanstalk.ConfigurationTemplateSetting>[]>;
    /**
     * A solution stack to base your Template
     * off of. Example stacks can be found in the [Amazon API documentation][1]
     */
    readonly solutionStackName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ConfigurationTemplate resource.
 */
export interface ConfigurationTemplateArgs {
    /**
     * name of the application to associate with this configuration template
     */
    readonly application: pulumi.Input<string>;
    /**
     * Short description of the Template
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the environment used with this configuration template
     */
    readonly environmentId?: pulumi.Input<string>;
    /**
     * A unique name for this Template.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Option settings to configure the new Environment. These
     * override specific values that are set as defaults. The format is detailed
     * below in Option Settings
     */
    readonly settings?: pulumi.Input<pulumi.Input<inputs.elasticbeanstalk.ConfigurationTemplateSetting>[]>;
    /**
     * A solution stack to base your Template
     * off of. Example stacks can be found in the [Amazon API documentation][1]
     */
    readonly solutionStackName?: pulumi.Input<string>;
}
