import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Route53 Resolver rule association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.route53.ResolverRuleAssociation("example", {
 *     resolverRuleId: aws_route53_resolver_rule_sys.id,
 *     vpcId: aws_vpc_foo.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/route53_resolver_rule_association.html.markdown.
 */
export declare class ResolverRuleAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ResolverRuleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverRuleAssociationState, opts?: pulumi.CustomResourceOptions): ResolverRuleAssociation;
    /**
     * Returns true if the given object is an instance of ResolverRuleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResolverRuleAssociation;
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    readonly resolverRuleId: pulumi.Output<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a ResolverRuleAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverRuleAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResolverRuleAssociation resources.
 */
export interface ResolverRuleAssociationState {
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    readonly resolverRuleId?: pulumi.Input<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    readonly vpcId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ResolverRuleAssociation resource.
 */
export interface ResolverRuleAssociationArgs {
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    readonly resolverRuleId: pulumi.Input<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    readonly vpcId: pulumi.Input<string>;
}
