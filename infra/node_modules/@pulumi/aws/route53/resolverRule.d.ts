import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Route53 Resolver rule.
 *
 * ## Example Usage
 *
 * ### System rule
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const sys = new aws.route53.ResolverRule("sys", {
 *     domainName: "subdomain.example.com",
 *     ruleType: "SYSTEM",
 * });
 * ```
 *
 * ### Forward rule
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const fwd = new aws.route53.ResolverRule("fwd", {
 *     domainName: "example.com",
 *     resolverEndpointId: aws_route53_resolver_endpoint_foo.id,
 *     ruleType: "FORWARD",
 *     tags: {
 *         Environment: "Prod",
 *     },
 *     targetIps: [{
 *         ip: "123.45.67.89",
 *     }],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/route53_resolver_rule.html.markdown.
 */
export declare class ResolverRule extends pulumi.CustomResource {
    /**
     * Get an existing ResolverRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverRuleState, opts?: pulumi.CustomResourceOptions): ResolverRule;
    /**
     * Returns true if the given object is an instance of ResolverRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResolverRule;
    /**
     * The ARN (Amazon Resource Name) for the resolver rule.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified using `targetIp`.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.
     */
    readonly name: pulumi.Output<string>;
    /**
     * When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify using `targetIp`.
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly resolverEndpointId: pulumi.Output<string | undefined>;
    /**
     * The rule type. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`.
     */
    readonly ruleType: pulumi.Output<string>;
    /**
     * Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     */
    readonly shareStatus: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Configuration block(s) indicating the IPs that you want Resolver to forward DNS queries to (documented below).
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly targetIps: pulumi.Output<outputs.route53.ResolverRuleTargetIp[] | undefined>;
    /**
     * Create a ResolverRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResolverRule resources.
 */
export interface ResolverRuleState {
    /**
     * The ARN (Amazon Resource Name) for the resolver rule.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified using `targetIp`.
     */
    readonly domainName?: pulumi.Input<string>;
    /**
     * A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     */
    readonly ownerId?: pulumi.Input<string>;
    /**
     * The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify using `targetIp`.
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly resolverEndpointId?: pulumi.Input<string>;
    /**
     * The rule type. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`.
     */
    readonly ruleType?: pulumi.Input<string>;
    /**
     * Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     */
    readonly shareStatus?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Configuration block(s) indicating the IPs that you want Resolver to forward DNS queries to (documented below).
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly targetIps?: pulumi.Input<pulumi.Input<inputs.route53.ResolverRuleTargetIp>[]>;
}
/**
 * The set of arguments for constructing a ResolverRule resource.
 */
export interface ResolverRuleArgs {
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified using `targetIp`.
     */
    readonly domainName: pulumi.Input<string>;
    /**
     * A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify using `targetIp`.
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly resolverEndpointId?: pulumi.Input<string>;
    /**
     * The rule type. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`.
     */
    readonly ruleType: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Configuration block(s) indicating the IPs that you want Resolver to forward DNS queries to (documented below).
     * This argument should only be specified for `FORWARD` type rules.
     */
    readonly targetIps?: pulumi.Input<pulumi.Input<inputs.route53.ResolverRuleTargetIp>[]>;
}
