import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Route 53 Resolver endpoint resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = new aws.route53.ResolverEndpoint("foo", {
 *     direction: "INBOUND",
 *     ipAddresses: [
 *         {
 *             subnetId: aws_subnet_sn1.id,
 *         },
 *         {
 *             ip: "10.0.64.4",
 *             subnetId: aws_subnet_sn2.id,
 *         },
 *     ],
 *     securityGroupIds: [
 *         aws_security_group_sg1.id,
 *         aws_security_group_sg2.id,
 *     ],
 *     tags: {
 *         Environment: "Prod",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/route53_resolver_endpoint.html.markdown.
 */
export declare class ResolverEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ResolverEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverEndpointState, opts?: pulumi.CustomResourceOptions): ResolverEndpoint;
    /**
     * Returns true if the given object is an instance of ResolverEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResolverEndpoint;
    /**
     * The ARN of the Route 53 Resolver endpoint.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The direction of DNS queries to or from the Route 53 Resolver endpoint.
     * Valid values are `INBOUND` (resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC)
     * or `OUTBOUND` (resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC).
     */
    readonly direction: pulumi.Output<string>;
    /**
     * The ID of the VPC that you want to create the resolver endpoint in.
     */
    readonly hostVpcId: pulumi.Output<string>;
    /**
     * The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs
     * to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound endpoints). Described below.
     */
    readonly ipAddresses: pulumi.Output<outputs.route53.ResolverEndpointIpAddress[]>;
    /**
     * The friendly name of the Route 53 Resolver endpoint.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of one or more security groups that you want to use to control access to this VPC.
     */
    readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Create a ResolverEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResolverEndpoint resources.
 */
export interface ResolverEndpointState {
    /**
     * The ARN of the Route 53 Resolver endpoint.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The direction of DNS queries to or from the Route 53 Resolver endpoint.
     * Valid values are `INBOUND` (resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC)
     * or `OUTBOUND` (resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC).
     */
    readonly direction?: pulumi.Input<string>;
    /**
     * The ID of the VPC that you want to create the resolver endpoint in.
     */
    readonly hostVpcId?: pulumi.Input<string>;
    /**
     * The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs
     * to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound endpoints). Described below.
     */
    readonly ipAddresses?: pulumi.Input<pulumi.Input<inputs.route53.ResolverEndpointIpAddress>[]>;
    /**
     * The friendly name of the Route 53 Resolver endpoint.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of one or more security groups that you want to use to control access to this VPC.
     */
    readonly securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
/**
 * The set of arguments for constructing a ResolverEndpoint resource.
 */
export interface ResolverEndpointArgs {
    /**
     * The direction of DNS queries to or from the Route 53 Resolver endpoint.
     * Valid values are `INBOUND` (resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC)
     * or `OUTBOUND` (resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC).
     */
    readonly direction: pulumi.Input<string>;
    /**
     * The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs
     * to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound endpoints). Described below.
     */
    readonly ipAddresses: pulumi.Input<pulumi.Input<inputs.route53.ResolverEndpointIpAddress>[]>;
    /**
     * The friendly name of the Route 53 Resolver endpoint.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of one or more security groups that you want to use to control access to this VPC.
     */
    readonly securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
