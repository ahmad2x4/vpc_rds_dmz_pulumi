"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
 *
 * > **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
 * See the [`aws.rds.ClusterSnapshot` data source](https://www.terraform.io/docs/providers/aws/d/db_cluster_snapshot.html) for DB Cluster snapshots.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const prod = new aws.rds.Instance("prod", {
 *     allocatedStorage: 10,
 *     dbSubnetGroupName: "myDatabaseSubnetGroup",
 *     engine: "mysql",
 *     engineVersion: "5.6.17",
 *     instanceClass: "db.t2.micro",
 *     name: "mydb",
 *     parameterGroupName: "default.mysql5.6",
 *     password: "bar",
 *     username: "foo",
 * });
 * const latestProdSnapshot = prod.id.apply(id => aws.rds.getSnapshot({
 *     dbInstanceIdentifier: id,
 *     mostRecent: true,
 * }));
 * // Use the latest production snapshot to create a dev instance.
 * const dev = new aws.rds.Instance("dev", {
 *     instanceClass: "db.t2.micro",
 *     name: "mydbdev",
 *     snapshotIdentifier: latestProdSnapshot.id,
 * }, {ignoreChanges: ["snapshotIdentifier"]});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/db_snapshot.html.markdown.
 */
function getSnapshot(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:rds/getSnapshot:getSnapshot", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "dbSnapshotIdentifier": args.dbSnapshotIdentifier,
        "includePublic": args.includePublic,
        "includeShared": args.includeShared,
        "mostRecent": args.mostRecent,
        "snapshotType": args.snapshotType,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getSnapshot = getSnapshot;
//# sourceMappingURL=getSnapshot.js.map