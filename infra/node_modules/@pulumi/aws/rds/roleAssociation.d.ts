import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a RDS DB Instance association with an IAM Role. Example use cases:
 *
 * * [Amazon RDS Oracle integration with Amazon S3](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-s3-integration.html)
 * * [Importing Amazon S3 Data into an RDS PostgreSQL DB Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PostgreSQL.S3Import.html)
 *
 * > To manage the RDS DB Instance IAM Role for [Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html), see the `aws.rds.Instance` resource `monitoringRoleArn` argument instead.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.rds.RoleAssociation("example", {
 *     dbInstanceIdentifier: aws_db_instance_example.id,
 *     featureName: "S3_INTEGRATION",
 *     roleArn: aws_iam_role_example.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/db_instance_role_association.html.markdown.
 */
export declare class RoleAssociation extends pulumi.CustomResource {
    /**
     * Get an existing RoleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleAssociationState, opts?: pulumi.CustomResourceOptions): RoleAssociation;
    /**
     * Returns true if the given object is an instance of RoleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RoleAssociation;
    /**
     * DB Instance Identifier to associate with the IAM Role.
     */
    readonly dbInstanceIdentifier: pulumi.Output<string>;
    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     */
    readonly featureName: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * Create a RoleAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RoleAssociation resources.
 */
export interface RoleAssociationState {
    /**
     * DB Instance Identifier to associate with the IAM Role.
     */
    readonly dbInstanceIdentifier?: pulumi.Input<string>;
    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     */
    readonly featureName?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     */
    readonly roleArn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RoleAssociation resource.
 */
export interface RoleAssociationArgs {
    /**
     * DB Instance Identifier to associate with the IAM Role.
     */
    readonly dbInstanceIdentifier: pulumi.Input<string>;
    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     */
    readonly featureName: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     */
    readonly roleArn: pulumi.Input<string>;
}
