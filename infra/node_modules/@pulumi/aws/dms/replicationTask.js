"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a DMS (Data Migration Service) replication task resource. DMS replication tasks can be created, updated, deleted, and imported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Create a new replication task
 * const test = new aws.dms.ReplicationTask("test", {
 *     cdcStartTime: "1.48434688e+09",
 *     migrationType: "full-load",
 *     replicationInstanceArn: aws_dms_replication_instance_test_dms_replication_instance_tf.replicationInstanceArn,
 *     replicationTaskId: "test-dms-replication-task-tf",
 *     replicationTaskSettings: "...",
 *     sourceEndpointArn: aws_dms_endpoint_test_dms_source_endpoint_tf.endpointArn,
 *     tableMappings: "{\"rules\":[{\"rule-type\":\"selection\",\"rule-id\":\"1\",\"rule-name\":\"1\",\"object-locator\":{\"schema-name\":\"%\",\"table-name\":\"%\"},\"rule-action\":\"include\"}]}",
 *     tags: {
 *         Name: "test",
 *     },
 *     targetEndpointArn: aws_dms_endpoint_test_dms_target_endpoint_tf.endpointArn,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dms_replication_task.html.markdown.
 */
class ReplicationTask extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["cdcStartTime"] = state ? state.cdcStartTime : undefined;
            inputs["migrationType"] = state ? state.migrationType : undefined;
            inputs["replicationInstanceArn"] = state ? state.replicationInstanceArn : undefined;
            inputs["replicationTaskArn"] = state ? state.replicationTaskArn : undefined;
            inputs["replicationTaskId"] = state ? state.replicationTaskId : undefined;
            inputs["replicationTaskSettings"] = state ? state.replicationTaskSettings : undefined;
            inputs["sourceEndpointArn"] = state ? state.sourceEndpointArn : undefined;
            inputs["tableMappings"] = state ? state.tableMappings : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetEndpointArn"] = state ? state.targetEndpointArn : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.migrationType === undefined) {
                throw new Error("Missing required property 'migrationType'");
            }
            if (!args || args.replicationInstanceArn === undefined) {
                throw new Error("Missing required property 'replicationInstanceArn'");
            }
            if (!args || args.replicationTaskId === undefined) {
                throw new Error("Missing required property 'replicationTaskId'");
            }
            if (!args || args.sourceEndpointArn === undefined) {
                throw new Error("Missing required property 'sourceEndpointArn'");
            }
            if (!args || args.tableMappings === undefined) {
                throw new Error("Missing required property 'tableMappings'");
            }
            if (!args || args.targetEndpointArn === undefined) {
                throw new Error("Missing required property 'targetEndpointArn'");
            }
            inputs["cdcStartTime"] = args ? args.cdcStartTime : undefined;
            inputs["migrationType"] = args ? args.migrationType : undefined;
            inputs["replicationInstanceArn"] = args ? args.replicationInstanceArn : undefined;
            inputs["replicationTaskId"] = args ? args.replicationTaskId : undefined;
            inputs["replicationTaskSettings"] = args ? args.replicationTaskSettings : undefined;
            inputs["sourceEndpointArn"] = args ? args.sourceEndpointArn : undefined;
            inputs["tableMappings"] = args ? args.tableMappings : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetEndpointArn"] = args ? args.targetEndpointArn : undefined;
            inputs["replicationTaskArn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ReplicationTask.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ReplicationTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new ReplicationTask(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ReplicationTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationTask.__pulumiType;
    }
}
exports.ReplicationTask = ReplicationTask;
/** @internal */
ReplicationTask.__pulumiType = 'aws:dms/replicationTask:ReplicationTask';
//# sourceMappingURL=replicationTask.js.map