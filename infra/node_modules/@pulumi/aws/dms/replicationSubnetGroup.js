"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a DMS (Data Migration Service) replication subnet group resource. DMS replication subnet groups can be created, updated, deleted, and imported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Create a new replication subnet group
 * const test = new aws.dms.ReplicationSubnetGroup("test", {
 *     replicationSubnetGroupDescription: "Test replication subnet group",
 *     replicationSubnetGroupId: "test-dms-replication-subnet-group-tf",
 *     subnetIds: ["subnet-12345678"],
 *     tags: {
 *         Name: "test",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dms_replication_subnet_group.html.markdown.
 */
class ReplicationSubnetGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["replicationSubnetGroupArn"] = state ? state.replicationSubnetGroupArn : undefined;
            inputs["replicationSubnetGroupDescription"] = state ? state.replicationSubnetGroupDescription : undefined;
            inputs["replicationSubnetGroupId"] = state ? state.replicationSubnetGroupId : undefined;
            inputs["subnetIds"] = state ? state.subnetIds : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.replicationSubnetGroupDescription === undefined) {
                throw new Error("Missing required property 'replicationSubnetGroupDescription'");
            }
            if (!args || args.replicationSubnetGroupId === undefined) {
                throw new Error("Missing required property 'replicationSubnetGroupId'");
            }
            if (!args || args.subnetIds === undefined) {
                throw new Error("Missing required property 'subnetIds'");
            }
            inputs["replicationSubnetGroupDescription"] = args ? args.replicationSubnetGroupDescription : undefined;
            inputs["replicationSubnetGroupId"] = args ? args.replicationSubnetGroupId : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["replicationSubnetGroupArn"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ReplicationSubnetGroup.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ReplicationSubnetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new ReplicationSubnetGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ReplicationSubnetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationSubnetGroup.__pulumiType;
    }
}
exports.ReplicationSubnetGroup = ReplicationSubnetGroup;
/** @internal */
ReplicationSubnetGroup.__pulumiType = 'aws:dms/replicationSubnetGroup:ReplicationSubnetGroup';
//# sourceMappingURL=replicationSubnetGroup.js.map