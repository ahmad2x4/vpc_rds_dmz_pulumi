"use strict";
// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const lambda = require("../lambda");
/**
 * Function is a higher-level API for creating and managing AWS Lambda Function resources
 * implemented by a Pulumi lambda expression and with a set of attached policies.
 *
 * @deprecated Use [lambda.CallbackFunction] instead.
 */
class Function extends pulumi.ComponentResource {
    /**
     * @param func Deprecated.  Pass the function as [options.func] or [options.factoryFunc] instead.
     */
    constructor(name, options, func, opts) {
        super("aws:serverless:Function", name, {}, opts);
        opts = opts || { parent: this };
        // Migrate old aws-serverless.FunctionOptions forward to lambda.FunctionOptions.
        options.callback = options.callback || options.func || func;
        options.callbackFactory = options.callbackFactory || options.factoryFunc;
        if (!options.codePathOptions) {
            options.codePathOptions = {
                extraIncludePaths: options.includePaths,
                extraIncludePackages: options.includePackages,
                extraExcludePackages: options.excludePackages,
            };
        }
        this.lambda = new lambda.CallbackFunction(name, options, { parent: this });
        this.role = this.lambda.roleInstance;
        this.options = options;
    }
}
exports.Function = Function;
//# sourceMappingURL=function.js.map