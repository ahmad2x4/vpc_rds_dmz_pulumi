import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a CloudTrail resource.
 *
 * > *NOTE:* For a multi-region trail, this resource must be in the home region of the trail.
 *
 * > *NOTE:* For an organization trail, this resource must be in the master account of the organization.
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * Enable CloudTrail to capture all compatible management events in region.
 * For capturing events from services like IAM, `includeGlobalServiceEvents` must be enabled.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.getCallerIdentity();
 * const foo = new aws.s3.Bucket("foo", {
 *     forceDestroy: true,
 *     policy: `{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Sid": "AWSCloudTrailAclCheck",
 *             "Effect": "Allow",
 *             "Principal": {
 *               "Service": "cloudtrail.amazonaws.com"
 *             },
 *             "Action": "s3:GetBucketAcl",
 *             "Resource": "arn:aws:s3:::tf-test-trail"
 *         },
 *         {
 *             "Sid": "AWSCloudTrailWrite",
 *             "Effect": "Allow",
 *             "Principal": {
 *               "Service": "cloudtrail.amazonaws.com"
 *             },
 *             "Action": "s3:PutObject",
 *             "Resource": "arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${current.accountId}/*",
 *             "Condition": {
 *                 "StringEquals": {
 *                     "s3:x-amz-acl": "bucket-owner-full-control"
 *                 }
 *             }
 *         }
 *     ]
 * }
 * `,
 * });
 * const foobar = new aws.cloudtrail.Trail("foobar", {
 *     includeGlobalServiceEvents: false,
 *     s3BucketName: foo.id,
 *     s3KeyPrefix: "prefix",
 * });
 * ```
 *
 * ### Data Event Logging
 *
 * CloudTrail can log [Data Events](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html#logging-data-events) for certain services such as S3 bucket objects and Lambda function invocations. Additional information about data event configuration can be found in the [CloudTrail API DataResource documentation](https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DataResource.html).
 *
 * #### Logging All Lambda Function Invocations
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudtrail.Trail("example", {
 *     eventSelectors: [{
 *         dataResources: [{
 *             type: "AWS::Lambda::Function",
 *             values: ["arn:aws:lambda"],
 *         }],
 *         includeManagementEvents: true,
 *         readWriteType: "All",
 *     }],
 * });
 * ```
 *
 * #### Logging All S3 Bucket Object Events
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudtrail.Trail("example", {
 *     eventSelectors: [{
 *         dataResources: [{
 *             type: "AWS::S3::Object",
 *             values: ["arn:aws:s3:::"],
 *         }],
 *         includeManagementEvents: true,
 *         readWriteType: "All",
 *     }],
 * });
 * ```
 *
 * #### Logging Individual S3 Bucket Events
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const importantBucket = aws.s3.getBucket({
 *     bucket: "important-bucket",
 * });
 * const example = new aws.cloudtrail.Trail("example", {
 *     eventSelectors: [{
 *         dataResources: [{
 *             type: "AWS::S3::Object",
 *             // Make sure to append a trailing '/' to your ARN if you want
 *             // to monitor all objects in a bucket.
 *             values: [`${important_bucket.arn}/`],
 *         }],
 *         includeManagementEvents: true,
 *         readWriteType: "All",
 *     }],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudtrail.html.markdown.
 */
export declare class Trail extends pulumi.CustomResource {
    /**
     * Get an existing Trail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrailState, opts?: pulumi.CustomResourceOptions): Trail;
    /**
     * Returns true if the given object is an instance of Trail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Trail;
    /**
     * The Amazon Resource Name of the trail.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Specifies a log group name using an Amazon Resource Name (ARN),
     * that represents the log group to which CloudTrail logs will be delivered.
     */
    readonly cloudWatchLogsGroupArn: pulumi.Output<string | undefined>;
    /**
     * Specifies the role for the CloudWatch Logs
     * endpoint to assume to write to a user’s log group.
     */
    readonly cloudWatchLogsRoleArn: pulumi.Output<string | undefined>;
    /**
     * Specifies whether log file integrity validation is enabled.
     * Defaults to `false`.
     */
    readonly enableLogFileValidation: pulumi.Output<boolean | undefined>;
    /**
     * Enables logging for the trail. Defaults to `true`.
     * Setting this to `false` will pause logging.
     */
    readonly enableLogging: pulumi.Output<boolean | undefined>;
    /**
     * Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
     */
    readonly eventSelectors: pulumi.Output<outputs.cloudtrail.TrailEventSelector[] | undefined>;
    /**
     * The region in which the trail was created.
     */
    readonly homeRegion: pulumi.Output<string>;
    /**
     * Specifies whether the trail is publishing events
     * from global services such as IAM to the log files. Defaults to `true`.
     */
    readonly includeGlobalServiceEvents: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the trail is created in the current
     * region or in all regions. Defaults to `false`.
     */
    readonly isMultiRegionTrail: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
     */
    readonly isOrganizationTrail: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the trail.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the name of the S3 bucket designated for publishing log files.
     */
    readonly s3BucketName: pulumi.Output<string>;
    /**
     * Specifies the S3 key prefix that follows
     * the name of the bucket you have designated for log file delivery.
     */
    readonly s3KeyPrefix: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Amazon SNS topic
     * defined for notification of log file delivery.
     */
    readonly snsTopicName: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags to assign to the trail
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Create a Trail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrailArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Trail resources.
 */
export interface TrailState {
    /**
     * The Amazon Resource Name of the trail.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Specifies a log group name using an Amazon Resource Name (ARN),
     * that represents the log group to which CloudTrail logs will be delivered.
     */
    readonly cloudWatchLogsGroupArn?: pulumi.Input<string>;
    /**
     * Specifies the role for the CloudWatch Logs
     * endpoint to assume to write to a user’s log group.
     */
    readonly cloudWatchLogsRoleArn?: pulumi.Input<string>;
    /**
     * Specifies whether log file integrity validation is enabled.
     * Defaults to `false`.
     */
    readonly enableLogFileValidation?: pulumi.Input<boolean>;
    /**
     * Enables logging for the trail. Defaults to `true`.
     * Setting this to `false` will pause logging.
     */
    readonly enableLogging?: pulumi.Input<boolean>;
    /**
     * Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
     */
    readonly eventSelectors?: pulumi.Input<pulumi.Input<inputs.cloudtrail.TrailEventSelector>[]>;
    /**
     * The region in which the trail was created.
     */
    readonly homeRegion?: pulumi.Input<string>;
    /**
     * Specifies whether the trail is publishing events
     * from global services such as IAM to the log files. Defaults to `true`.
     */
    readonly includeGlobalServiceEvents?: pulumi.Input<boolean>;
    /**
     * Specifies whether the trail is created in the current
     * region or in all regions. Defaults to `false`.
     */
    readonly isMultiRegionTrail?: pulumi.Input<boolean>;
    /**
     * Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
     */
    readonly isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the name of the trail.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the name of the S3 bucket designated for publishing log files.
     */
    readonly s3BucketName?: pulumi.Input<string>;
    /**
     * Specifies the S3 key prefix that follows
     * the name of the bucket you have designated for log file delivery.
     */
    readonly s3KeyPrefix?: pulumi.Input<string>;
    /**
     * Specifies the name of the Amazon SNS topic
     * defined for notification of log file delivery.
     */
    readonly snsTopicName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the trail
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
/**
 * The set of arguments for constructing a Trail resource.
 */
export interface TrailArgs {
    /**
     * Specifies a log group name using an Amazon Resource Name (ARN),
     * that represents the log group to which CloudTrail logs will be delivered.
     */
    readonly cloudWatchLogsGroupArn?: pulumi.Input<string>;
    /**
     * Specifies the role for the CloudWatch Logs
     * endpoint to assume to write to a user’s log group.
     */
    readonly cloudWatchLogsRoleArn?: pulumi.Input<string>;
    /**
     * Specifies whether log file integrity validation is enabled.
     * Defaults to `false`.
     */
    readonly enableLogFileValidation?: pulumi.Input<boolean>;
    /**
     * Enables logging for the trail. Defaults to `true`.
     * Setting this to `false` will pause logging.
     */
    readonly enableLogging?: pulumi.Input<boolean>;
    /**
     * Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
     */
    readonly eventSelectors?: pulumi.Input<pulumi.Input<inputs.cloudtrail.TrailEventSelector>[]>;
    /**
     * Specifies whether the trail is publishing events
     * from global services such as IAM to the log files. Defaults to `true`.
     */
    readonly includeGlobalServiceEvents?: pulumi.Input<boolean>;
    /**
     * Specifies whether the trail is created in the current
     * region or in all regions. Defaults to `false`.
     */
    readonly isMultiRegionTrail?: pulumi.Input<boolean>;
    /**
     * Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
     */
    readonly isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the name of the trail.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the name of the S3 bucket designated for publishing log files.
     */
    readonly s3BucketName: pulumi.Input<string>;
    /**
     * Specifies the S3 key prefix that follows
     * the name of the bucket you have designated for log file delivery.
     */
    readonly s3KeyPrefix?: pulumi.Input<string>;
    /**
     * Specifies the name of the Amazon SNS topic
     * defined for notification of log file delivery.
     */
    readonly snsTopicName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the trail
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
