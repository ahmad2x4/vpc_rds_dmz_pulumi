import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an ElastiCache Security Group to control access to one or more cache
 * clusters.
 *
 * > **NOTE:** ElastiCache Security Groups are for use only when working with an
 * ElastiCache cluster **outside** of a VPC. If you are using a VPC, see the
 * ElastiCache Subnet Group resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const barEc2SecurityGroup = new aws.ec2.SecurityGroup("bar", {});
 * const barSecurityGroup = new aws.elasticache.SecurityGroup("bar", {
 *     securityGroupNames: [barEc2SecurityGroup.name],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elasticache_security_group.html.markdown.
 */
export declare class SecurityGroup extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupState, opts?: pulumi.CustomResourceOptions): SecurityGroup;
    /**
     * Returns true if the given object is an instance of SecurityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityGroup;
    /**
     * description for the cache security group. Defaults to "Managed by Pulumi".
     */
    readonly description: pulumi.Output<string>;
    /**
     * Name for the cache security group. This value is stored as a lowercase string.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of EC2 security group names to be
     * authorized for ingress to the cache security group
     */
    readonly securityGroupNames: pulumi.Output<string[]>;
    /**
     * Create a SecurityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SecurityGroup resources.
 */
export interface SecurityGroupState {
    /**
     * description for the cache security group. Defaults to "Managed by Pulumi".
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name for the cache security group. This value is stored as a lowercase string.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * List of EC2 security group names to be
     * authorized for ingress to the cache security group
     */
    readonly securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a SecurityGroup resource.
 */
export interface SecurityGroupArgs {
    /**
     * description for the cache security group. Defaults to "Managed by Pulumi".
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name for the cache security group. This value is stored as a lowercase string.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * List of EC2 security group names to be
     * authorized for ingress to the cache security group
     */
    readonly securityGroupNames: pulumi.Input<pulumi.Input<string>[]>;
}
