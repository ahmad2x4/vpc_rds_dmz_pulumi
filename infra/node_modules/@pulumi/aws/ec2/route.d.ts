import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource to create a routing table entry (a route) in a VPC routing table.
 *
 * > **NOTE on Route Tables and Routes:** This provider currently
 * provides both a standalone Route resource and a Route Table resource with routes
 * defined in-line. At this time you cannot use a Route Table with in-line routes
 * in conjunction with any Route resources. Doing so will cause
 * a conflict of rule settings and will overwrite rules.
 *
 * ## Example IPv6 Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const vpc = new aws.ec2.Vpc("vpc", {
 *     assignGeneratedIpv6CidrBlock: true,
 *     cidrBlock: "10.1.0.0/16",
 * });
 * const egress = new aws.ec2.EgressOnlyInternetGateway("egress", {
 *     vpcId: vpc.id,
 * });
 * const route = new aws.ec2.Route("r", {
 *     destinationIpv6CidrBlock: "::/0",
 *     egressOnlyGatewayId: egress.id,
 *     routeTableId: "rtb-4fbb3ac4",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/route.html.markdown.
 */
export declare class Route extends pulumi.CustomResource {
    /**
     * Get an existing Route resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteState, opts?: pulumi.CustomResourceOptions): Route;
    /**
     * Returns true if the given object is an instance of Route.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Route;
    /**
     * The destination CIDR block.
     */
    readonly destinationCidrBlock: pulumi.Output<string | undefined>;
    /**
     * The destination IPv6 CIDR block.
     */
    readonly destinationIpv6CidrBlock: pulumi.Output<string | undefined>;
    readonly destinationPrefixListId: pulumi.Output<string>;
    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     */
    readonly egressOnlyGatewayId: pulumi.Output<string>;
    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     */
    readonly gatewayId: pulumi.Output<string>;
    /**
     * Identifier of an EC2 instance.
     */
    readonly instanceId: pulumi.Output<string>;
    readonly instanceOwnerId: pulumi.Output<string>;
    /**
     * Identifier of a VPC NAT gateway.
     */
    readonly natGatewayId: pulumi.Output<string>;
    /**
     * Identifier of an EC2 network interface.
     */
    readonly networkInterfaceId: pulumi.Output<string>;
    readonly origin: pulumi.Output<string>;
    /**
     * The ID of the routing table.
     */
    readonly routeTableId: pulumi.Output<string>;
    readonly state: pulumi.Output<string>;
    /**
     * Identifier of an EC2 Transit Gateway.
     */
    readonly transitGatewayId: pulumi.Output<string | undefined>;
    /**
     * Identifier of a VPC peering connection.
     */
    readonly vpcPeeringConnectionId: pulumi.Output<string | undefined>;
    /**
     * Create a Route resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Route resources.
 */
export interface RouteState {
    /**
     * The destination CIDR block.
     */
    readonly destinationCidrBlock?: pulumi.Input<string>;
    /**
     * The destination IPv6 CIDR block.
     */
    readonly destinationIpv6CidrBlock?: pulumi.Input<string>;
    readonly destinationPrefixListId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     */
    readonly egressOnlyGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     */
    readonly gatewayId?: pulumi.Input<string>;
    /**
     * Identifier of an EC2 instance.
     */
    readonly instanceId?: pulumi.Input<string>;
    readonly instanceOwnerId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC NAT gateway.
     */
    readonly natGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of an EC2 network interface.
     */
    readonly networkInterfaceId?: pulumi.Input<string>;
    readonly origin?: pulumi.Input<string>;
    /**
     * The ID of the routing table.
     */
    readonly routeTableId?: pulumi.Input<string>;
    readonly state?: pulumi.Input<string>;
    /**
     * Identifier of an EC2 Transit Gateway.
     */
    readonly transitGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC peering connection.
     */
    readonly vpcPeeringConnectionId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Route resource.
 */
export interface RouteArgs {
    /**
     * The destination CIDR block.
     */
    readonly destinationCidrBlock?: pulumi.Input<string>;
    /**
     * The destination IPv6 CIDR block.
     */
    readonly destinationIpv6CidrBlock?: pulumi.Input<string>;
    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     */
    readonly egressOnlyGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     */
    readonly gatewayId?: pulumi.Input<string>;
    /**
     * Identifier of an EC2 instance.
     */
    readonly instanceId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC NAT gateway.
     */
    readonly natGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of an EC2 network interface.
     */
    readonly networkInterfaceId?: pulumi.Input<string>;
    /**
     * The ID of the routing table.
     */
    readonly routeTableId: pulumi.Input<string>;
    /**
     * Identifier of an EC2 Transit Gateway.
     */
    readonly transitGatewayId?: pulumi.Input<string>;
    /**
     * Identifier of a VPC peering connection.
     */
    readonly vpcPeeringConnectionId?: pulumi.Input<string>;
}
