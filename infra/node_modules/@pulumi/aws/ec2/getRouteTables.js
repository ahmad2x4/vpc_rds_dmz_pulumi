"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * This resource can be useful for getting back a list of route table ids to be referenced elsewhere.
 *
 * ## Example Usage
 *
 * The following adds a route for a particular cidr block to every (private
 * kops) route table in a specified vpc to use a particular vpc peering
 * connection.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const rts = aws.ec2.getRouteTables({
 *     filters: [{
 *         name: "tag:kubernetes.io/kops/role",
 *         values: ["private*"],
 *     }],
 *     vpcId: var_vpc_id,
 * });
 * const route: aws.ec2.Route[] = [];
 * for (let i = 0; i < rts.ids.length; i++) {
 *     route.push(new aws.ec2.Route(`r-${i}`, {
 *         destinationCidrBlock: "10.0.1.0/22",
 *         routeTableId: rts.ids[i],
 *         vpcPeeringConnectionId: "pcx-0e9a7a9ecd137dc54",
 *     }));
 * }
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/route_tables.html.markdown.
 */
function getRouteTables(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:ec2/getRouteTables:getRouteTables", {
        "filters": args.filters,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getRouteTables = getRouteTables;
//# sourceMappingURL=getRouteTables.js.map