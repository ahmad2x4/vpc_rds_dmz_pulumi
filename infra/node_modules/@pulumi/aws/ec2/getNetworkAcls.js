"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * The following shows outputing all network ACL ids in a vpc.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleNetworkAcls = aws.ec2.getNetworkAcls({
 *     vpcId: var_vpc_id,
 * });
 *
 * export const example = exampleNetworkAcls.ids;
 * ```
 *
 * The following example retrieves a list of all network ACL ids in a VPC with a custom
 * tag of `Tier` set to a value of "Private".
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     tags: {
 *         Tier: "Private",
 *     },
 *     vpcId: var_vpc_id,
 * });
 * ```
 *
 * The following example retrieves a network ACL id in a VPC which associated
 * with specific subnet.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws_subnet_test.id.apply(id => aws.ec2.getNetworkAcls({
 *     filters: [{
 *         name: "association.subnet-id",
 *         values: [id],
 *     }],
 *     vpcId: var_vpc_id,
 * }));
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/network_acls.html.markdown.
 */
function getNetworkAcls(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:ec2/getNetworkAcls:getNetworkAcls", {
        "filters": args.filters,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getNetworkAcls = getNetworkAcls;
//# sourceMappingURL=getNetworkAcls.js.map