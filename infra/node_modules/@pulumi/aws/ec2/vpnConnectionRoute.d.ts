import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a static route between a VPN connection and a customer gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const vpc = new aws.ec2.Vpc("vpc", {
 *     cidrBlock: "10.0.0.0/16",
 * });
 * const vpnGateway = new aws.ec2.VpnGateway("vpnGateway", {
 *     vpcId: vpc.id,
 * });
 * const customerGateway = new aws.ec2.CustomerGateway("customerGateway", {
 *     bgpAsn: 65000,
 *     ipAddress: "172.0.0.1",
 *     type: "ipsec.1",
 * });
 * const main = new aws.ec2.VpnConnection("main", {
 *     customerGatewayId: customerGateway.id,
 *     staticRoutesOnly: true,
 *     type: "ipsec.1",
 *     vpnGatewayId: vpnGateway.id,
 * });
 * const office = new aws.ec2.VpnConnectionRoute("office", {
 *     destinationCidrBlock: "192.168.10.0/24",
 *     vpnConnectionId: main.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpn_connection_route.html.markdown.
 */
export declare class VpnConnectionRoute extends pulumi.CustomResource {
    /**
     * Get an existing VpnConnectionRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnConnectionRouteState, opts?: pulumi.CustomResourceOptions): VpnConnectionRoute;
    /**
     * Returns true if the given object is an instance of VpnConnectionRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpnConnectionRoute;
    /**
     * The CIDR block associated with the local subnet of the customer network.
     */
    readonly destinationCidrBlock: pulumi.Output<string>;
    /**
     * The ID of the VPN connection.
     */
    readonly vpnConnectionId: pulumi.Output<string>;
    /**
     * Create a VpnConnectionRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnConnectionRouteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VpnConnectionRoute resources.
 */
export interface VpnConnectionRouteState {
    /**
     * The CIDR block associated with the local subnet of the customer network.
     */
    readonly destinationCidrBlock?: pulumi.Input<string>;
    /**
     * The ID of the VPN connection.
     */
    readonly vpnConnectionId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VpnConnectionRoute resource.
 */
export interface VpnConnectionRouteArgs {
    /**
     * The CIDR block associated with the local subnet of the customer network.
     */
    readonly destinationCidrBlock: pulumi.Input<string>;
    /**
     * The ID of the VPN connection.
     */
    readonly vpnConnectionId: pulumi.Input<string>;
}
