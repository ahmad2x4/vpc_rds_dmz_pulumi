"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * This resource can be useful for getting back a list of VPC Ids for a region.
 *
 * The following example retrieves a list of VPC Ids with a custom tag of `service` set to a value of "production".
 *
 * ## Example Usage
 *
 * The following shows outputing all VPC Ids.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const fooVpcs = aws.ec2.getVpcs({
 *     tags: {
 *         service: "production",
 *     },
 * });
 *
 * export const foo = fooVpcs.ids;
 * ```
 *
 * An example use case would be interpolate the `aws.ec2.getVpcs` output into `count` of an aws.ec2.FlowLog resource.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const fooVpcs = aws.ec2.getVpcs();
 * const testFlowLog: aws.ec2.FlowLog[] = [];
 * for (let i = 0; i < fooVpcs.ids.length; i++) {
 *     testFlowLog.push(new aws.ec2.FlowLog(`test_flow_log-${i}`, {
 *         // ...
 *         vpcId: fooVpcs.ids[i],
 *     }));
 * }
 *
 * export const foo = fooVpcs.ids;
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/vpcs.html.markdown.
 */
function getVpcs(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:ec2/getVpcs:getVpcs", {
        "filters": args.filters,
        "tags": args.tags,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getVpcs = getVpcs;
//# sourceMappingURL=getVpcs.js.map