"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to allow a principal to discover a VPC endpoint service.
 *
 * > **NOTE on VPC Endpoint Services and VPC Endpoint Service Allowed Principals:** This provider provides
 * both a standalone VPC Endpoint Service Allowed Principal resource
 * and a VPC Endpoint Service resource with an `allowedPrincipals` attribute. Do not use the same principal ARN in both
 * a VPC Endpoint Service resource and a VPC Endpoint Service Allowed Principal resource. Doing so will cause a conflict
 * and will overwrite the association.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.getCallerIdentity();
 * const allowMeToFoo = new aws.ec2.VpcEndpointServiceAllowedPrinciple("allowMeToFoo", {
 *     principalArn: current.arn,
 *     vpcEndpointServiceId: aws_vpc_endpoint_service_foo.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_endpoint_service_allowed_principal.html.markdown.
 */
class VpcEndpointServiceAllowedPrinciple extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["principalArn"] = state ? state.principalArn : undefined;
            inputs["vpcEndpointServiceId"] = state ? state.vpcEndpointServiceId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.principalArn === undefined) {
                throw new Error("Missing required property 'principalArn'");
            }
            if (!args || args.vpcEndpointServiceId === undefined) {
                throw new Error("Missing required property 'vpcEndpointServiceId'");
            }
            inputs["principalArn"] = args ? args.principalArn : undefined;
            inputs["vpcEndpointServiceId"] = args ? args.vpcEndpointServiceId : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(VpcEndpointServiceAllowedPrinciple.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing VpcEndpointServiceAllowedPrinciple resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new VpcEndpointServiceAllowedPrinciple(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpcEndpointServiceAllowedPrinciple.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointServiceAllowedPrinciple.__pulumiType;
    }
}
exports.VpcEndpointServiceAllowedPrinciple = VpcEndpointServiceAllowedPrinciple;
/** @internal */
VpcEndpointServiceAllowedPrinciple.__pulumiType = 'aws:ec2/vpcEndpointServiceAllowedPrinciple:VpcEndpointServiceAllowedPrinciple';
//# sourceMappingURL=vpcEndpointServiceAllowedPrinciple.js.map