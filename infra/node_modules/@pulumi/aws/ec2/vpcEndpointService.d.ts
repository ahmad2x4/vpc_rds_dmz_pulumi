import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a VPC Endpoint Service resource.
 * Service consumers can create an _Interface_ VPC Endpoint to connect to the service.
 *
 * > **NOTE on VPC Endpoint Services and VPC Endpoint Service Allowed Principals:** This provider provides
 * both a standalone VPC Endpoint Service Allowed Principal resource
 * and a VPC Endpoint Service resource with an `allowedPrincipals` attribute. Do not use the same principal ARN in both
 * a VPC Endpoint Service resource and a VPC Endpoint Service Allowed Principal resource. Doing so will cause a conflict
 * and will overwrite the association.
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.VpcEndpointService("example", {
 *     acceptanceRequired: false,
 *     networkLoadBalancerArns: [aws_lb_example.arn],
 * });
 * ```
 *
 * ### Basic w/ Tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.VpcEndpointService("example", {
 *     acceptanceRequired: false,
 *     networkLoadBalancerArns: [aws_lb_example.arn],
 *     tags: {
 *         Environment: "test",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_endpoint_service.html.markdown.
 */
export declare class VpcEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointServiceState, opts?: pulumi.CustomResourceOptions): VpcEndpointService;
    /**
     * Returns true if the given object is an instance of VpcEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpcEndpointService;
    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    readonly acceptanceRequired: pulumi.Output<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    readonly allowedPrincipals: pulumi.Output<string[]>;
    /**
     * The Availability Zones in which the service is available.
     */
    readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * The DNS names for the service.
     */
    readonly baseEndpointDnsNames: pulumi.Output<string[]>;
    /**
     * Whether or not the service manages its VPC endpoints - `true` or `false`.
     */
    readonly managesVpcEndpoints: pulumi.Output<boolean>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    readonly networkLoadBalancerArns: pulumi.Output<string[]>;
    /**
     * The private DNS name for the service.
     */
    readonly privateDnsName: pulumi.Output<string>;
    /**
     * The service name.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * The service type, `Gateway` or `Interface`.
     */
    readonly serviceType: pulumi.Output<string>;
    /**
     * The state of the VPC endpoint service.
     */
    readonly state: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Create a VpcEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VpcEndpointService resources.
 */
export interface VpcEndpointServiceState {
    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    readonly acceptanceRequired?: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    readonly allowedPrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Availability Zones in which the service is available.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS names for the service.
     */
    readonly baseEndpointDnsNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether or not the service manages its VPC endpoints - `true` or `false`.
     */
    readonly managesVpcEndpoints?: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    readonly networkLoadBalancerArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The private DNS name for the service.
     */
    readonly privateDnsName?: pulumi.Input<string>;
    /**
     * The service name.
     */
    readonly serviceName?: pulumi.Input<string>;
    /**
     * The service type, `Gateway` or `Interface`.
     */
    readonly serviceType?: pulumi.Input<string>;
    /**
     * The state of the VPC endpoint service.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
/**
 * The set of arguments for constructing a VpcEndpointService resource.
 */
export interface VpcEndpointServiceArgs {
    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    readonly acceptanceRequired: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    readonly allowedPrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    readonly networkLoadBalancerArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
