import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a VPC Endpoint connection notification resource.
 * Connection notifications notify subscribers of VPC Endpoint events.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const topic = new aws.sns.Topic("topic", {
 *     policy: `{
 *     "Version":"2012-10-17",
 *     "Statement":[{
 *         "Effect": "Allow",
 *         "Principal": {
 *             "Service": "vpce.amazonaws.com"
 *         },
 *         "Action": "SNS:Publish",
 *         "Resource": "arn:aws:sns:*:*:vpce-notification-topic"
 *     }]
 * }
 * `,
 * });
 * const fooVpcEndpointService = new aws.ec2.VpcEndpointService("foo", {
 *     acceptanceRequired: false,
 *     networkLoadBalancerArns: [aws_lb_test.arn],
 * });
 * const fooVpcEndpointConnectionNotification = new aws.ec2.VpcEndpointConnectionNotification("foo", {
 *     connectionEvents: [
 *         "Accept",
 *         "Reject",
 *     ],
 *     connectionNotificationArn: topic.arn,
 *     vpcEndpointServiceId: fooVpcEndpointService.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_endpoint_connection_notification.html.markdown.
 */
export declare class VpcEndpointConnectionNotification extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointConnectionNotification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointConnectionNotificationState, opts?: pulumi.CustomResourceOptions): VpcEndpointConnectionNotification;
    /**
     * Returns true if the given object is an instance of VpcEndpointConnectionNotification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpcEndpointConnectionNotification;
    /**
     * One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     */
    readonly connectionEvents: pulumi.Output<string[]>;
    /**
     * The ARN of the SNS topic for the notifications.
     */
    readonly connectionNotificationArn: pulumi.Output<string>;
    /**
     * The type of notification.
     */
    readonly notificationType: pulumi.Output<string>;
    /**
     * The state of the notification.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The ID of the VPC Endpoint to receive notifications for.
     */
    readonly vpcEndpointId: pulumi.Output<string | undefined>;
    /**
     * The ID of the VPC Endpoint Service to receive notifications for.
     */
    readonly vpcEndpointServiceId: pulumi.Output<string | undefined>;
    /**
     * Create a VpcEndpointConnectionNotification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointConnectionNotificationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VpcEndpointConnectionNotification resources.
 */
export interface VpcEndpointConnectionNotificationState {
    /**
     * One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     */
    readonly connectionEvents?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the SNS topic for the notifications.
     */
    readonly connectionNotificationArn?: pulumi.Input<string>;
    /**
     * The type of notification.
     */
    readonly notificationType?: pulumi.Input<string>;
    /**
     * The state of the notification.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * The ID of the VPC Endpoint to receive notifications for.
     */
    readonly vpcEndpointId?: pulumi.Input<string>;
    /**
     * The ID of the VPC Endpoint Service to receive notifications for.
     */
    readonly vpcEndpointServiceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VpcEndpointConnectionNotification resource.
 */
export interface VpcEndpointConnectionNotificationArgs {
    /**
     * One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     */
    readonly connectionEvents: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the SNS topic for the notifications.
     */
    readonly connectionNotificationArn: pulumi.Input<string>;
    /**
     * The ID of the VPC Endpoint to receive notifications for.
     */
    readonly vpcEndpointId?: pulumi.Input<string>;
    /**
     * The ID of the VPC Endpoint Service to receive notifications for.
     */
    readonly vpcEndpointServiceId?: pulumi.Input<string>;
}
