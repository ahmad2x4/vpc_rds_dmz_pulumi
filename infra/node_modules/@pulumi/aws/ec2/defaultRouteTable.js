"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage a Default VPC Routing Table.
 *
 * Each VPC created in AWS comes with a Default Route Table that can be managed, but not
 * destroyed. **This is an advanced resource**, and has special caveats to be aware
 * of when using it. Please read this document in its entirety before using this
 * resource. It is recommended you **do not** use both `aws.ec2.DefaultRouteTable` to
 * manage the default route table **and** use the `aws.ec2.MainRouteTableAssociation`,
 * due to possible conflict in routes.
 *
 * The `aws.ec2.DefaultRouteTable` behaves differently from normal resources, in that
 * this provider does not _create_ this resource, but instead attempts to "adopt" it
 * into management. We can do this because each VPC created has a Default Route
 * Table that cannot be destroyed, and is created with a single route.
 *
 * When this provider first adopts the Default Route Table, it **immediately removes all
 * defined routes**. It then proceeds to create any routes specified in the
 * configuration. This step is required so that only the routes specified in the
 * configuration present in the Default Route Table.
 *
 * For more information about Route Tables, see the AWS Documentation on
 * [Route Tables][aws-route-tables].
 *
 * For more information about managing normal Route Tables in this provider, see our
 * documentation on [aws.ec2.RouteTable][tf-route-tables].
 *
 * > **NOTE on Route Tables and Routes:** This provider currently
 * provides both a standalone Route resource and a Route Table resource with routes
 * defined in-line. At this time you cannot use a Route Table with in-line routes
 * in conjunction with any Route resources. Doing so will cause
 * a conflict of rule settings and will overwrite routes.
 *
 *
 * ## Example usage with tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultRouteTable = new aws.ec2.DefaultRouteTable("r", {
 *     defaultRouteTableId: aws_vpc_foo.defaultRouteTableId,
 *     routes: [{}],
 *     tags: {
 *         Name: "default table",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/default_route_table.html.markdown.
 */
class DefaultRouteTable extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["defaultRouteTableId"] = state ? state.defaultRouteTableId : undefined;
            inputs["ownerId"] = state ? state.ownerId : undefined;
            inputs["propagatingVgws"] = state ? state.propagatingVgws : undefined;
            inputs["routes"] = state ? state.routes : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.defaultRouteTableId === undefined) {
                throw new Error("Missing required property 'defaultRouteTableId'");
            }
            inputs["defaultRouteTableId"] = args ? args.defaultRouteTableId : undefined;
            inputs["propagatingVgws"] = args ? args.propagatingVgws : undefined;
            inputs["routes"] = args ? args.routes : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["ownerId"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DefaultRouteTable.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DefaultRouteTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new DefaultRouteTable(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DefaultRouteTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultRouteTable.__pulumiType;
    }
}
exports.DefaultRouteTable = DefaultRouteTable;
/** @internal */
DefaultRouteTable.__pulumiType = 'aws:ec2/defaultRouteTable:DefaultRouteTable';
//# sourceMappingURL=defaultRouteTable.js.map