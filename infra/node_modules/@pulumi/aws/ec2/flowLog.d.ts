import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a VPC/Subnet/ENI Flow Log to capture IP traffic for a specific network
 * interface, subnet, or VPC. Logs are sent to a CloudWatch Log Group or a S3 Bucket.
 *
 * ## Example Usage
 *
 * ### CloudWatch Logging
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleLogGroup = new aws.cloudwatch.LogGroup("example", {});
 * const exampleRole = new aws.iam.Role("example", {
 *     assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Sid": "",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "Service": "vpc-flow-logs.amazonaws.com"
 *       },
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * `,
 * });
 * const exampleFlowLog = new aws.ec2.FlowLog("example", {
 *     iamRoleArn: exampleRole.arn,
 *     logDestination: exampleLogGroup.arn,
 *     trafficType: "ALL",
 *     vpcId: aws_vpc_example.id,
 * });
 * const exampleRolePolicy = new aws.iam.RolePolicy("example", {
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": [
 *         "logs:CreateLogGroup",
 *         "logs:CreateLogStream",
 *         "logs:PutLogEvents",
 *         "logs:DescribeLogGroups",
 *         "logs:DescribeLogStreams"
 *       ],
 *       "Effect": "Allow",
 *       "Resource": "*"
 *     }
 *   ]
 * }
 * `,
 *     role: exampleRole.id,
 * });
 * ```
 *
 * ### S3 Logging
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucket = new aws.s3.Bucket("example", {});
 * const exampleFlowLog = new aws.ec2.FlowLog("example", {
 *     logDestination: exampleBucket.arn,
 *     logDestinationType: "s3",
 *     trafficType: "ALL",
 *     vpcId: aws_vpc_example.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/flow_log.html.markdown.
 */
export declare class FlowLog extends pulumi.CustomResource {
    /**
     * Get an existing FlowLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowLogState, opts?: pulumi.CustomResourceOptions): FlowLog;
    /**
     * Returns true if the given object is an instance of FlowLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FlowLog;
    /**
     * Elastic Network Interface ID to attach to
     */
    readonly eniId: pulumi.Output<string | undefined>;
    /**
     * The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
     */
    readonly iamRoleArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the logging destination.
     */
    readonly logDestination: pulumi.Output<string>;
    /**
     * The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`. Default: `cloud-watch-logs`.
     */
    readonly logDestinationType: pulumi.Output<string | undefined>;
    /**
     * The fields to include in the flow log record, in the order in which they should appear.
     */
    readonly logFormat: pulumi.Output<string>;
    /**
     * *Deprecated:* Use `logDestination` instead. The name of the CloudWatch log group.
     */
    readonly logGroupName: pulumi.Output<string>;
    /**
     * Subnet ID to attach to
     */
    readonly subnetId: pulumi.Output<string | undefined>;
    /**
     * The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
     */
    readonly trafficType: pulumi.Output<string>;
    /**
     * VPC ID to attach to
     */
    readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * Create a FlowLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowLogArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FlowLog resources.
 */
export interface FlowLogState {
    /**
     * Elastic Network Interface ID to attach to
     */
    readonly eniId?: pulumi.Input<string>;
    /**
     * The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
     */
    readonly iamRoleArn?: pulumi.Input<string>;
    /**
     * The ARN of the logging destination.
     */
    readonly logDestination?: pulumi.Input<string>;
    /**
     * The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`. Default: `cloud-watch-logs`.
     */
    readonly logDestinationType?: pulumi.Input<string>;
    /**
     * The fields to include in the flow log record, in the order in which they should appear.
     */
    readonly logFormat?: pulumi.Input<string>;
    /**
     * *Deprecated:* Use `logDestination` instead. The name of the CloudWatch log group.
     */
    readonly logGroupName?: pulumi.Input<string>;
    /**
     * Subnet ID to attach to
     */
    readonly subnetId?: pulumi.Input<string>;
    /**
     * The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
     */
    readonly trafficType?: pulumi.Input<string>;
    /**
     * VPC ID to attach to
     */
    readonly vpcId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FlowLog resource.
 */
export interface FlowLogArgs {
    /**
     * Elastic Network Interface ID to attach to
     */
    readonly eniId?: pulumi.Input<string>;
    /**
     * The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
     */
    readonly iamRoleArn?: pulumi.Input<string>;
    /**
     * The ARN of the logging destination.
     */
    readonly logDestination?: pulumi.Input<string>;
    /**
     * The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`. Default: `cloud-watch-logs`.
     */
    readonly logDestinationType?: pulumi.Input<string>;
    /**
     * The fields to include in the flow log record, in the order in which they should appear.
     */
    readonly logFormat?: pulumi.Input<string>;
    /**
     * *Deprecated:* Use `logDestination` instead. The name of the CloudWatch log group.
     */
    readonly logGroupName?: pulumi.Input<string>;
    /**
     * Subnet ID to attach to
     */
    readonly subnetId?: pulumi.Input<string>;
    /**
     * The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
     */
    readonly trafficType: pulumi.Input<string>;
    /**
     * VPC ID to attach to
     */
    readonly vpcId?: pulumi.Input<string>;
}
