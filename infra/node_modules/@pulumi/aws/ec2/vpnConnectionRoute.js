"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a static route between a VPN connection and a customer gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const vpc = new aws.ec2.Vpc("vpc", {
 *     cidrBlock: "10.0.0.0/16",
 * });
 * const vpnGateway = new aws.ec2.VpnGateway("vpnGateway", {
 *     vpcId: vpc.id,
 * });
 * const customerGateway = new aws.ec2.CustomerGateway("customerGateway", {
 *     bgpAsn: 65000,
 *     ipAddress: "172.0.0.1",
 *     type: "ipsec.1",
 * });
 * const main = new aws.ec2.VpnConnection("main", {
 *     customerGatewayId: customerGateway.id,
 *     staticRoutesOnly: true,
 *     type: "ipsec.1",
 *     vpnGatewayId: vpnGateway.id,
 * });
 * const office = new aws.ec2.VpnConnectionRoute("office", {
 *     destinationCidrBlock: "192.168.10.0/24",
 *     vpnConnectionId: main.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpn_connection_route.html.markdown.
 */
class VpnConnectionRoute extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["destinationCidrBlock"] = state ? state.destinationCidrBlock : undefined;
            inputs["vpnConnectionId"] = state ? state.vpnConnectionId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.destinationCidrBlock === undefined) {
                throw new Error("Missing required property 'destinationCidrBlock'");
            }
            if (!args || args.vpnConnectionId === undefined) {
                throw new Error("Missing required property 'vpnConnectionId'");
            }
            inputs["destinationCidrBlock"] = args ? args.destinationCidrBlock : undefined;
            inputs["vpnConnectionId"] = args ? args.vpnConnectionId : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(VpnConnectionRoute.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing VpnConnectionRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new VpnConnectionRoute(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpnConnectionRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnConnectionRoute.__pulumiType;
    }
}
exports.VpnConnectionRoute = VpnConnectionRoute;
/** @internal */
VpnConnectionRoute.__pulumiType = 'aws:ec2/vpnConnectionRoute:VpnConnectionRoute';
//# sourceMappingURL=vpnConnectionRoute.js.map