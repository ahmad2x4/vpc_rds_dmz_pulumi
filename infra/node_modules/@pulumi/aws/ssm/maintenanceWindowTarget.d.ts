import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an SSM Maintenance Window Target resource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const window = new aws.ssm.MaintenanceWindow("window", {
 *     cutoff: 1,
 *     duration: 3,
 *     schedule: "cron(0 16 ? * TUE *)",
 * });
 * const target1 = new aws.ssm.MaintenanceWindowTarget("target1", {
 *     description: "This is a maintenance window target",
 *     resourceType: "INSTANCE",
 *     targets: [{
 *         key: "tag:Name",
 *         values: ["acceptanceTest"],
 *     }],
 *     windowId: window.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ssm_maintenance_window_target.html.markdown.
 */
export declare class MaintenanceWindowTarget extends pulumi.CustomResource {
    /**
     * Get an existing MaintenanceWindowTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaintenanceWindowTargetState, opts?: pulumi.CustomResourceOptions): MaintenanceWindowTarget;
    /**
     * Returns true if the given object is an instance of MaintenanceWindowTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MaintenanceWindowTarget;
    /**
     * The description of the maintenance window target.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the maintenance window target.
     */
    readonly name: pulumi.Output<string>;
    /**
     * User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
     */
    readonly ownerInformation: pulumi.Output<string | undefined>;
    /**
     * The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
     */
    readonly resourceType: pulumi.Output<string>;
    /**
     * The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
     */
    readonly targets: pulumi.Output<outputs.ssm.MaintenanceWindowTargetTarget[]>;
    /**
     * The Id of the maintenance window to register the target with.
     */
    readonly windowId: pulumi.Output<string>;
    /**
     * Create a MaintenanceWindowTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MaintenanceWindowTargetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MaintenanceWindowTarget resources.
 */
export interface MaintenanceWindowTargetState {
    /**
     * The description of the maintenance window target.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the maintenance window target.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
     */
    readonly ownerInformation?: pulumi.Input<string>;
    /**
     * The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
     */
    readonly resourceType?: pulumi.Input<string>;
    /**
     * The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
     */
    readonly targets?: pulumi.Input<pulumi.Input<inputs.ssm.MaintenanceWindowTargetTarget>[]>;
    /**
     * The Id of the maintenance window to register the target with.
     */
    readonly windowId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MaintenanceWindowTarget resource.
 */
export interface MaintenanceWindowTargetArgs {
    /**
     * The description of the maintenance window target.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the maintenance window target.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
     */
    readonly ownerInformation?: pulumi.Input<string>;
    /**
     * The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
     */
    readonly resourceType: pulumi.Input<string>;
    /**
     * The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
     */
    readonly targets: pulumi.Input<pulumi.Input<inputs.ssm.MaintenanceWindowTargetTarget>[]>;
    /**
     * The Id of the maintenance window to register the target with.
     */
    readonly windowId: pulumi.Input<string>;
}
