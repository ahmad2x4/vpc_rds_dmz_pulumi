"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Pinpoint APNs Sandbox Channel resource.
 *
 * > **Note:** All arguments, including certificates and tokens, will be stored in the raw state as plain-text.
 * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as fs from "fs";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const apnsSandbox = new aws.pinpoint.ApnsSandboxChannel("apnsSandbox", {
 *     applicationId: app.applicationId,
 *     certificate: fs.readFileSync("./certificate.pem", "utf-8"),
 *     privateKey: fs.readFileSync("./private_key.key", "utf-8"),
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_apns_sandbox_channel.html.markdown.
 */
class ApnsSandboxChannel extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["bundleId"] = state ? state.bundleId : undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["defaultAuthenticationMethod"] = state ? state.defaultAuthenticationMethod : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["privateKey"] = state ? state.privateKey : undefined;
            inputs["teamId"] = state ? state.teamId : undefined;
            inputs["tokenKey"] = state ? state.tokenKey : undefined;
            inputs["tokenKeyId"] = state ? state.tokenKeyId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.applicationId === undefined) {
                throw new Error("Missing required property 'applicationId'");
            }
            inputs["applicationId"] = args ? args.applicationId : undefined;
            inputs["bundleId"] = args ? args.bundleId : undefined;
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["defaultAuthenticationMethod"] = args ? args.defaultAuthenticationMethod : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["privateKey"] = args ? args.privateKey : undefined;
            inputs["teamId"] = args ? args.teamId : undefined;
            inputs["tokenKey"] = args ? args.tokenKey : undefined;
            inputs["tokenKeyId"] = args ? args.tokenKeyId : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ApnsSandboxChannel.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ApnsSandboxChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new ApnsSandboxChannel(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApnsSandboxChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApnsSandboxChannel.__pulumiType;
    }
}
exports.ApnsSandboxChannel = ApnsSandboxChannel;
/** @internal */
ApnsSandboxChannel.__pulumiType = 'aws:pinpoint/apnsSandboxChannel:ApnsSandboxChannel';
//# sourceMappingURL=apnsSandboxChannel.js.map