import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Pinpoint SMS Channel resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const identity = new aws.ses.DomainIdentity("identity", {
 *     domain: "example.com",
 * });
 * const role = new aws.iam.Role("role", {
 *     assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "pinpoint.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * `,
 * });
 * const email = new aws.pinpoint.EmailChannel("email", {
 *     applicationId: app.applicationId,
 *     fromAddress: "user@example.com",
 *     identity: identity.arn,
 *     roleArn: role.arn,
 * });
 * const rolePolicy = new aws.iam.RolePolicy("rolePolicy", {
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": {
 *     "Action": [
 *       "mobileanalytics:PutEvents",
 *       "mobileanalytics:PutItems"
 *     ],
 *     "Effect": "Allow",
 *     "Resource": [
 *       "*"
 *     ]
 *   }
 * }
 * `,
 *     role: role.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_email_channel.html.markdown.
 */
export declare class EmailChannel extends pulumi.CustomResource {
    /**
     * Get an existing EmailChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailChannelState, opts?: pulumi.CustomResourceOptions): EmailChannel;
    /**
     * Returns true if the given object is an instance of EmailChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EmailChannel;
    /**
     * The application ID.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The email address used to send emails from.
     */
    readonly fromAddress: pulumi.Output<string>;
    /**
     * The ARN of an identity verified with SES.
     */
    readonly identity: pulumi.Output<string>;
    /**
     * Messages per second that can be sent.
     */
    readonly messagesPerSecond: pulumi.Output<number>;
    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * Create a EmailChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailChannelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EmailChannel resources.
 */
export interface EmailChannelState {
    /**
     * The application ID.
     */
    readonly applicationId?: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * The email address used to send emails from.
     */
    readonly fromAddress?: pulumi.Input<string>;
    /**
     * The ARN of an identity verified with SES.
     */
    readonly identity?: pulumi.Input<string>;
    /**
     * Messages per second that can be sent.
     */
    readonly messagesPerSecond?: pulumi.Input<number>;
    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     */
    readonly roleArn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EmailChannel resource.
 */
export interface EmailChannelArgs {
    /**
     * The application ID.
     */
    readonly applicationId: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * The email address used to send emails from.
     */
    readonly fromAddress: pulumi.Input<string>;
    /**
     * The ARN of an identity verified with SES.
     */
    readonly identity: pulumi.Input<string>;
    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     */
    readonly roleArn: pulumi.Input<string>;
}
