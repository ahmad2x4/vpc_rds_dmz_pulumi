"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Pinpoint Event Stream resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const testStream = new aws.kinesis.Stream("testStream", {
 *     shardCount: 1,
 * });
 * const testRole = new aws.iam.Role("testRole", {
 *     assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "pinpoint.us-east-1.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * `,
 * });
 * const stream = new aws.pinpoint.EventStream("stream", {
 *     applicationId: app.applicationId,
 *     destinationStreamArn: testStream.arn,
 *     roleArn: testRole.arn,
 * });
 * const testRolePolicy = new aws.iam.RolePolicy("testRolePolicy", {
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": {
 *     "Action": [
 *       "kinesis:PutRecords",
 *       "kinesis:DescribeStream"
 *     ],
 *     "Effect": "Allow",
 *     "Resource": [
 *       "arn:aws:kinesis:us-east-1:*:*&#47;*"
 *     ]
 *   }
 * }
 * `,
 *     role: testRole.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_event_stream.html.markdown.
 */
class EventStream extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["destinationStreamArn"] = state ? state.destinationStreamArn : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.applicationId === undefined) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (!args || args.destinationStreamArn === undefined) {
                throw new Error("Missing required property 'destinationStreamArn'");
            }
            if (!args || args.roleArn === undefined) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["applicationId"] = args ? args.applicationId : undefined;
            inputs["destinationStreamArn"] = args ? args.destinationStreamArn : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EventStream.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing EventStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new EventStream(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EventStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventStream.__pulumiType;
    }
}
exports.EventStream = EventStream;
/** @internal */
EventStream.__pulumiType = 'aws:pinpoint/eventStream:EventStream';
//# sourceMappingURL=eventStream.js.map