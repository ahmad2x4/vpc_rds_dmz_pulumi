import * as pulumi from "@pulumi/pulumi";
import { Role } from "./role";
/**
 * Provides an IAM instance profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const role = new aws.iam.Role("role", {
 *     assumeRolePolicy: `{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Action": "sts:AssumeRole",
 *             "Principal": {
 *                "Service": "ec2.amazonaws.com"
 *             },
 *             "Effect": "Allow",
 *             "Sid": ""
 *         }
 *     ]
 * }
 * `,
 *     path: "/",
 * });
 * const testProfile = new aws.iam.InstanceProfile("testProfile", {
 *     role: role.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/iam_instance_profile.html.markdown.
 */
export declare class InstanceProfile extends pulumi.CustomResource {
    /**
     * Get an existing InstanceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceProfileState, opts?: pulumi.CustomResourceOptions): InstanceProfile;
    /**
     * Returns true if the given object is an instance of InstanceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstanceProfile;
    /**
     * The ARN assigned by AWS to the instance profile.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The creation timestamp of the instance profile.
     */
    readonly createDate: pulumi.Output<string>;
    /**
     * The profile's name. If omitted, this provider will assign a random, unique name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix: pulumi.Output<string | undefined>;
    /**
     * Path in which to create the profile.
     */
    readonly path: pulumi.Output<string | undefined>;
    /**
     * The role name to include in the profile.
     */
    readonly role: pulumi.Output<string>;
    /**
     *
     * A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
     */
    readonly roles: pulumi.Output<string[]>;
    /**
     * The [unique ID][1] assigned by AWS.
     */
    readonly uniqueId: pulumi.Output<string>;
    /**
     * Create a InstanceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering InstanceProfile resources.
 */
export interface InstanceProfileState {
    /**
     * The ARN assigned by AWS to the instance profile.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The creation timestamp of the instance profile.
     */
    readonly createDate?: pulumi.Input<string>;
    /**
     * The profile's name. If omitted, this provider will assign a random, unique name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Path in which to create the profile.
     */
    readonly path?: pulumi.Input<string>;
    /**
     * The role name to include in the profile.
     */
    readonly role?: pulumi.Input<string | Role>;
    /**
     *
     * A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
     */
    readonly roles?: pulumi.Input<pulumi.Input<string | Role>[]>;
    /**
     * The [unique ID][1] assigned by AWS.
     */
    readonly uniqueId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a InstanceProfile resource.
 */
export interface InstanceProfileArgs {
    /**
     * The profile's name. If omitted, this provider will assign a random, unique name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Path in which to create the profile.
     */
    readonly path?: pulumi.Input<string>;
    /**
     * The role name to include in the profile.
     */
    readonly role?: pulumi.Input<string | Role>;
    /**
     *
     * A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
     */
    readonly roles?: pulumi.Input<pulumi.Input<string | Role>[]>;
}
