"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to lookup information about IAM Server Certificates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myDomain = aws.iam.getServerCertificate({
 *     latest: true,
 *     namePrefix: "my-domain.org",
 * });
 * const elb = new aws.elb.LoadBalancer("elb", {
 *     listeners: [{
 *         instancePort: 8000,
 *         instanceProtocol: "https",
 *         lbPort: 443,
 *         lbProtocol: "https",
 *         sslCertificateId: my_domain.arn,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The import function will read in certificate body, certificate chain (if it exists), id, name, path, and arn.
 * It will not retrieve the private key which is not available through the AWS API.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/iam_server_certificate.html.markdown.
 */
function getServerCertificate(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:iam/getServerCertificate:getServerCertificate", {
        "latest": args.latest,
        "name": args.name,
        "namePrefix": args.namePrefix,
        "pathPrefix": args.pathPrefix,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getServerCertificate = getServerCertificate;
//# sourceMappingURL=getServerCertificate.js.map