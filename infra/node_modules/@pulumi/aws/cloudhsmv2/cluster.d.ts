import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates an Amazon CloudHSM v2 cluster.
 *
 * For information about CloudHSM v2, see the
 * [AWS CloudHSM User Guide][1] and the [Amazon
 * CloudHSM API Reference][2].
 *
 * > **NOTE:** CloudHSM can take up to several minutes to be set up.
 * Practically no single attribute can be updated except TAGS.
 * If you need to delete a cluster, you have to remove its HSM modules first.
 * To initialize cluster, you have to add an hsm instance to the cluster then sign CSR and upload it.
 *
 * ## Example Usage
 *
 * The following example below creates a CloudHSM cluster.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const available = aws.getAvailabilityZones();
 * const cloudhsm2Vpc = new aws.ec2.Vpc("cloudhsm2Vpc", {
 *     cidrBlock: "10.0.0.0/16",
 *     tags: {
 *         Name: "example-aws_cloudhsm_v2_cluster",
 *     },
 * });
 * const cloudhsm2Subnets: aws.ec2.Subnet[] = [];
 * for (let i = 0; i < 2; i++) {
 *     cloudhsm2Subnets.push(new aws.ec2.Subnet(`cloudhsm2_subnets-${i}`, {
 *         availabilityZone: available.names[i],
 *         cidrBlock: var_subnets[i],
 *         mapPublicIpOnLaunch: false,
 *         tags: {
 *             Name: "example-aws_cloudhsm_v2_cluster",
 *         },
 *         vpcId: cloudhsm2Vpc.id,
 *     }));
 * }
 * const cloudhsmV2Cluster = new aws.cloudhsmv2.Cluster("cloudhsmV2Cluster", {
 *     hsmType: "hsm1.medium",
 *     subnetIds: cloudhsm2Subnets.map(v => v.id),
 *     tags: {
 *         Name: "example-aws_cloudhsm_v2_cluster",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudhsm_v2_cluster.html.markdown.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * The list of cluster certificates.
     * * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster's owner.
     * * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state after an hsm instance is added to the cluster.
     * * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.
     * * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.
     * * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.
     */
    readonly clusterCertificates: pulumi.Output<outputs.cloudhsmv2.ClusterClusterCertificates>;
    /**
     * The id of the CloudHSM cluster.
     */
    readonly clusterId: pulumi.Output<string>;
    /**
     * The state of the cluster.
     */
    readonly clusterState: pulumi.Output<string>;
    /**
     * The type of HSM module in the cluster. Currently, only hsm1.medium is supported.
     */
    readonly hsmType: pulumi.Output<string>;
    /**
     * The ID of the security group associated with the CloudHSM cluster.
     */
    readonly securityGroupId: pulumi.Output<string>;
    /**
     * The id of Cloud HSM v2 cluster backup to be restored.
     */
    readonly sourceBackupIdentifier: pulumi.Output<string | undefined>;
    /**
     * The IDs of subnets in which cluster will operate.
     */
    readonly subnetIds: pulumi.Output<string[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The id of the VPC that the CloudHSM cluster resides in.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * The list of cluster certificates.
     * * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster's owner.
     * * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state after an hsm instance is added to the cluster.
     * * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.
     * * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.
     * * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.
     */
    readonly clusterCertificates?: pulumi.Input<inputs.cloudhsmv2.ClusterClusterCertificates>;
    /**
     * The id of the CloudHSM cluster.
     */
    readonly clusterId?: pulumi.Input<string>;
    /**
     * The state of the cluster.
     */
    readonly clusterState?: pulumi.Input<string>;
    /**
     * The type of HSM module in the cluster. Currently, only hsm1.medium is supported.
     */
    readonly hsmType?: pulumi.Input<string>;
    /**
     * The ID of the security group associated with the CloudHSM cluster.
     */
    readonly securityGroupId?: pulumi.Input<string>;
    /**
     * The id of Cloud HSM v2 cluster backup to be restored.
     */
    readonly sourceBackupIdentifier?: pulumi.Input<string>;
    /**
     * The IDs of subnets in which cluster will operate.
     */
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The id of the VPC that the CloudHSM cluster resides in.
     */
    readonly vpcId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The type of HSM module in the cluster. Currently, only hsm1.medium is supported.
     */
    readonly hsmType: pulumi.Input<string>;
    /**
     * The id of Cloud HSM v2 cluster backup to be restored.
     */
    readonly sourceBackupIdentifier?: pulumi.Input<string>;
    /**
     * The IDs of subnets in which cluster will operate.
     */
    readonly subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
}
