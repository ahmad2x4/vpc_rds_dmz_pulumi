import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an Neptune Cluster Resource. A Cluster Resource defines attributes that are
 * applied to the entire cluster of Neptune Cluster Instances.
 *
 * Changes to a Neptune Cluster can occur when you manually change a
 * parameter, such as `backupRetentionPeriod`, and are reflected in the next maintenance
 * window. Because of this, this provider may report a difference in its planning
 * phase because a modification has not yet taken place. You can use the
 * `applyImmediately` flag to instruct the service to apply the change immediately
 * (see documentation below).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultCluster = new aws.neptune.Cluster("default", {
 *     applyImmediately: true,
 *     backupRetentionPeriod: 5,
 *     clusterIdentifier: "neptune-cluster-demo",
 *     engine: "neptune",
 *     iamDatabaseAuthenticationEnabled: true,
 *     preferredBackupWindow: "07:00-09:00",
 *     skipFinalSnapshot: true,
 * });
 * ```
 *
 * > **Note:** AWS Neptune does not support user name/passwordâ€“based access control.
 * See the AWS [Docs](https://docs.aws.amazon.com/neptune/latest/userguide/limits.html) for more information.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/neptune_cluster.html.markdown.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.
     */
    readonly applyImmediately: pulumi.Output<boolean>;
    /**
     * The Neptune Cluster Amazon Resource Name (ARN)
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
     */
    readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * The days to retain backups for. Default `1`
     */
    readonly backupRetentionPeriod: pulumi.Output<number | undefined>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    readonly clusterIdentifier: pulumi.Output<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    readonly clusterIdentifierPrefix: pulumi.Output<string>;
    /**
     * List of Neptune Instances that are a part of this cluster
     */
    readonly clusterMembers: pulumi.Output<string[]>;
    /**
     * The Neptune Cluster Resource ID
     */
    readonly clusterResourceId: pulumi.Output<string>;
    readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports `audit`.
     */
    readonly enableCloudwatchLogsExports: pulumi.Output<string[] | undefined>;
    /**
     * The DNS address of the Neptune instance
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * The name of the database engine to be used for this Neptune cluster. Defaults to `neptune`.
     */
    readonly engine: pulumi.Output<string | undefined>;
    /**
     * The database engine version.
     */
    readonly engineVersion: pulumi.Output<string>;
    /**
     * The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
     */
    readonly finalSnapshotIdentifier: pulumi.Output<string | undefined>;
    /**
     * The Route53 Hosted Zone ID of the endpoint
     */
    readonly hostedZoneId: pulumi.Output<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
     */
    readonly iamDatabaseAuthenticationEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A List of ARNs for the IAM roles to associate to the Neptune Cluster.
     */
    readonly iamRoles: pulumi.Output<string[] | undefined>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyArn`, `storageEncrypted` needs to be set to true.
     */
    readonly kmsKeyArn: pulumi.Output<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    readonly neptuneClusterParameterGroupName: pulumi.Output<string | undefined>;
    /**
     * A Neptune subnet group to associate with this Neptune instance.
     */
    readonly neptuneSubnetGroupName: pulumi.Output<string>;
    /**
     * The port on which the Neptune accepts connections. Default is `8182`.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    readonly preferredBackupWindow: pulumi.Output<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    readonly preferredMaintenanceWindow: pulumi.Output<string>;
    /**
     * A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas
     */
    readonly readerEndpoint: pulumi.Output<string>;
    /**
     * ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
     */
    readonly replicationSourceIdentifier: pulumi.Output<string | undefined>;
    /**
     * Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    readonly skipFinalSnapshot: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.
     */
    readonly snapshotIdentifier: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the Neptune cluster is encrypted. The default is `false` if not specified.
     */
    readonly storageEncrypted: pulumi.Output<boolean | undefined>;
    /**
     * A mapping of tags to assign to the Neptune cluster.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    readonly vpcSecurityGroupIds: pulumi.Output<string[]>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.
     */
    readonly applyImmediately?: pulumi.Input<boolean>;
    /**
     * The Neptune Cluster Amazon Resource Name (ARN)
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The days to retain backups for. Default `1`
     */
    readonly backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    readonly clusterIdentifier?: pulumi.Input<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    readonly clusterIdentifierPrefix?: pulumi.Input<string>;
    /**
     * List of Neptune Instances that are a part of this cluster
     */
    readonly clusterMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Neptune Cluster Resource ID
     */
    readonly clusterResourceId?: pulumi.Input<string>;
    readonly deletionProtection?: pulumi.Input<boolean>;
    /**
     * A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports `audit`.
     */
    readonly enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS address of the Neptune instance
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * The name of the database engine to be used for this Neptune cluster. Defaults to `neptune`.
     */
    readonly engine?: pulumi.Input<string>;
    /**
     * The database engine version.
     */
    readonly engineVersion?: pulumi.Input<string>;
    /**
     * The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
     */
    readonly finalSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * The Route53 Hosted Zone ID of the endpoint
     */
    readonly hostedZoneId?: pulumi.Input<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
     */
    readonly iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * A List of ARNs for the IAM roles to associate to the Neptune Cluster.
     */
    readonly iamRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyArn`, `storageEncrypted` needs to be set to true.
     */
    readonly kmsKeyArn?: pulumi.Input<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    readonly neptuneClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * A Neptune subnet group to associate with this Neptune instance.
     */
    readonly neptuneSubnetGroupName?: pulumi.Input<string>;
    /**
     * The port on which the Neptune accepts connections. Default is `8182`.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    readonly preferredBackupWindow?: pulumi.Input<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas
     */
    readonly readerEndpoint?: pulumi.Input<string>;
    /**
     * ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
     */
    readonly replicationSourceIdentifier?: pulumi.Input<string>;
    /**
     * Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    readonly skipFinalSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.
     */
    readonly snapshotIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether the Neptune cluster is encrypted. The default is `false` if not specified.
     */
    readonly storageEncrypted?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the Neptune cluster.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.
     */
    readonly applyImmediately?: pulumi.Input<boolean>;
    /**
     * A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The days to retain backups for. Default `1`
     */
    readonly backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    readonly clusterIdentifier?: pulumi.Input<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    readonly clusterIdentifierPrefix?: pulumi.Input<string>;
    readonly deletionProtection?: pulumi.Input<boolean>;
    /**
     * A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports `audit`.
     */
    readonly enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the database engine to be used for this Neptune cluster. Defaults to `neptune`.
     */
    readonly engine?: pulumi.Input<string>;
    /**
     * The database engine version.
     */
    readonly engineVersion?: pulumi.Input<string>;
    /**
     * The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
     */
    readonly finalSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
     */
    readonly iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * A List of ARNs for the IAM roles to associate to the Neptune Cluster.
     */
    readonly iamRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyArn`, `storageEncrypted` needs to be set to true.
     */
    readonly kmsKeyArn?: pulumi.Input<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    readonly neptuneClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * A Neptune subnet group to associate with this Neptune instance.
     */
    readonly neptuneSubnetGroupName?: pulumi.Input<string>;
    /**
     * The port on which the Neptune accepts connections. Default is `8182`.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    readonly preferredBackupWindow?: pulumi.Input<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
     */
    readonly replicationSourceIdentifier?: pulumi.Input<string>;
    /**
     * Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    readonly skipFinalSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.
     */
    readonly snapshotIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether the Neptune cluster is encrypted. The default is `false` if not specified.
     */
    readonly storageEncrypted?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the Neptune cluster.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
