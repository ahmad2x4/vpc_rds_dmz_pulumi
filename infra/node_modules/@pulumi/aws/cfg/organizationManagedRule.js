"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Config Organization Managed Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Custom Rules (those invoking a custom Lambda Function), see the [`aws.cfg.OrganizationCustomRule` resource](https://www.terraform.io/docs/providers/aws/r/config_organization_custom_rule.html).
 *
 * > **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excludedAccounts` argument.
 *
 * > **NOTE:** Every Organization account except those configured in the `excludedAccounts` argument must have a Configuration Recorder with proper IAM permissions before the rule will successfully create or update. See also the [`aws.cfg.Recorder` resource](https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleOrganization = new aws.organizations.Organization("example", {
 *     awsServiceAccessPrincipals: ["config-multiaccountsetup.amazonaws.com"],
 *     featureSet: "ALL",
 * });
 * const exampleOrganizationManagedRule = new aws.cfg.OrganizationManagedRule("example", {
 *     ruleIdentifier: "IAM_PASSWORD_POLICY",
 * }, {dependsOn: [exampleOrganization]});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/config_organization_managed_rule.html.markdown.
 */
class OrganizationManagedRule extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["excludedAccounts"] = state ? state.excludedAccounts : undefined;
            inputs["inputParameters"] = state ? state.inputParameters : undefined;
            inputs["maximumExecutionFrequency"] = state ? state.maximumExecutionFrequency : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceIdScope"] = state ? state.resourceIdScope : undefined;
            inputs["resourceTypesScopes"] = state ? state.resourceTypesScopes : undefined;
            inputs["ruleIdentifier"] = state ? state.ruleIdentifier : undefined;
            inputs["tagKeyScope"] = state ? state.tagKeyScope : undefined;
            inputs["tagValueScope"] = state ? state.tagValueScope : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.ruleIdentifier === undefined) {
                throw new Error("Missing required property 'ruleIdentifier'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["excludedAccounts"] = args ? args.excludedAccounts : undefined;
            inputs["inputParameters"] = args ? args.inputParameters : undefined;
            inputs["maximumExecutionFrequency"] = args ? args.maximumExecutionFrequency : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceIdScope"] = args ? args.resourceIdScope : undefined;
            inputs["resourceTypesScopes"] = args ? args.resourceTypesScopes : undefined;
            inputs["ruleIdentifier"] = args ? args.ruleIdentifier : undefined;
            inputs["tagKeyScope"] = args ? args.tagKeyScope : undefined;
            inputs["tagValueScope"] = args ? args.tagValueScope : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(OrganizationManagedRule.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing OrganizationManagedRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new OrganizationManagedRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OrganizationManagedRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationManagedRule.__pulumiType;
    }
}
exports.OrganizationManagedRule = OrganizationManagedRule;
/** @internal */
OrganizationManagedRule.__pulumiType = 'aws:cfg/organizationManagedRule:OrganizationManagedRule';
//# sourceMappingURL=organizationManagedRule.js.map