"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides details about a specific S3 bucket.
 *
 * This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
 * Distribution.
 *
 * ## Example Usage
 *
 * ### Route53 Record
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.s3.getBucket({
 *     bucket: "bucket.test.com",
 * });
 * const testZone = aws.route53.getZone({
 *     name: "test.com.",
 * });
 * const example = new aws.route53.Record("example", {
 *     aliases: [{
 *         name: selected.websiteDomain,
 *         zoneId: selected.hostedZoneId,
 *     }],
 *     name: "bucket",
 *     type: "A",
 *     zoneId: testZone.id,
 * });
 * ```
 *
 * ### CloudFront Origin
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.s3.getBucket({
 *     bucket: "a-test-bucket",
 * });
 * const test = new aws.cloudfront.Distribution("test", {
 *     origins: [{
 *         domainName: selected.bucketDomainName,
 *         originId: "s3-selected-bucket",
 *     }],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/s3_bucket.html.markdown.
 */
function getBucket(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:s3/getBucket:getBucket", {
        "bucket": args.bucket,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getBucket = getBucket;
//# sourceMappingURL=getBucket.js.map