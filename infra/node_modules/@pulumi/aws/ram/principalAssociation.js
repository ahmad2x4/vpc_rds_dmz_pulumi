"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Resource Access Manager (RAM) principal association. Depending if [RAM Sharing with AWS Organizations is enabled](https://docs.aws.amazon.com/ram/latest/userguide/getting-started-sharing.html#getting-started-sharing-orgs), the RAM behavior with different principal types changes.
 *
 * When RAM Sharing with AWS Organizations is enabled:
 *
 * - For AWS Account ID, Organization, and Organizational Unit principals within the same AWS Organization, no resource share invitation is sent and resources become available automatically after creating the association.
 * - For AWS Account ID principals outside the AWS Organization, a resource share invitation is sent and must be accepted before resources become available. See the [`aws.ram.ResourceShareAccepter` resource](https://www.terraform.io/docs/providers/aws/r/ram_resource_share_accepter.html) to accept these invitations.
 *
 * When RAM Sharing with AWS Organizations is not enabled:
 *
 * - Organization and Organizational Unit principals cannot be used.
 * - For AWS Account ID principals, a resource share invitation is sent and must be accepted before resources become available. See the [`aws.ram.ResourceShareAccepter` resource](https://www.terraform.io/docs/providers/aws/r/ram_resource_share_accepter.html) to accept these invitations.
 *
 * ## Example Usage
 *
 * ### AWS Account ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleResourceShare = new aws.ram.ResourceShare("example", {
 *     // ... other configuration ...
 *     allowExternalPrincipals: true,
 * });
 * const examplePrincipalAssociation = new aws.ram.PrincipalAssociation("example", {
 *     principal: "111111111111",
 *     resourceShareArn: exampleResourceShare.arn,
 * });
 * ```
 *
 * ### AWS Organization
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ram.PrincipalAssociation("example", {
 *     principal: aws_organizations_organization_example.arn,
 *     resourceShareArn: aws_ram_resource_share_example.arn,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ram_principal_association.html.markdown.
 */
class PrincipalAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["principal"] = state ? state.principal : undefined;
            inputs["resourceShareArn"] = state ? state.resourceShareArn : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.principal === undefined) {
                throw new Error("Missing required property 'principal'");
            }
            if (!args || args.resourceShareArn === undefined) {
                throw new Error("Missing required property 'resourceShareArn'");
            }
            inputs["principal"] = args ? args.principal : undefined;
            inputs["resourceShareArn"] = args ? args.resourceShareArn : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PrincipalAssociation.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PrincipalAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new PrincipalAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PrincipalAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrincipalAssociation.__pulumiType;
    }
}
exports.PrincipalAssociation = PrincipalAssociation;
/** @internal */
PrincipalAssociation.__pulumiType = 'aws:ram/principalAssociation:PrincipalAssociation';
//# sourceMappingURL=principalAssociation.js.map