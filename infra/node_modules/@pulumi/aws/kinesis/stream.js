"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Kinesis Stream resource. Amazon Kinesis is a managed service that
 * scales elastically for real-time processing of streaming big data.
 *
 * For more details, see the [Amazon Kinesis Documentation][1].
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testStream = new aws.kinesis.Stream("testStream", {
 *     retentionPeriod: 48,
 *     shardCount: 1,
 *     shardLevelMetrics: [
 *         "IncomingBytes",
 *         "OutgoingBytes",
 *     ],
 *     tags: {
 *         Environment: "test",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/kinesis_stream.html.markdown.
 */
class Stream extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["encryptionType"] = state ? state.encryptionType : undefined;
            inputs["enforceConsumerDeletion"] = state ? state.enforceConsumerDeletion : undefined;
            inputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["retentionPeriod"] = state ? state.retentionPeriod : undefined;
            inputs["shardCount"] = state ? state.shardCount : undefined;
            inputs["shardLevelMetrics"] = state ? state.shardLevelMetrics : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.shardCount === undefined) {
                throw new Error("Missing required property 'shardCount'");
            }
            inputs["arn"] = args ? args.arn : undefined;
            inputs["encryptionType"] = args ? args.encryptionType : undefined;
            inputs["enforceConsumerDeletion"] = args ? args.enforceConsumerDeletion : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["retentionPeriod"] = args ? args.retentionPeriod : undefined;
            inputs["shardCount"] = args ? args.shardCount : undefined;
            inputs["shardLevelMetrics"] = args ? args.shardLevelMetrics : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Stream.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Stream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Stream(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Stream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Stream.__pulumiType;
    }
}
exports.Stream = Stream;
/** @internal */
Stream.__pulumiType = 'aws:kinesis/stream:Stream';
//# sourceMappingURL=stream.js.map