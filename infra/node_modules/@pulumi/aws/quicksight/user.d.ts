import * as pulumi from "@pulumi/pulumi";
/**
 * Resource for managing QuickSight User
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.quicksight.User("example", {
 *     email: "author@example.com",
 *     identityType: "IAM",
 *     userName: "an-author",
 *     userRole: "AUTHOR",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/quicksight_user.html.markdown.
 */
export declare class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User;
    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is User;
    /**
     * Amazon Resource Name (ARN) of the user
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * The email address of the user that you want to register.
     */
    readonly email: pulumi.Output<string>;
    /**
     * The ARN of the IAM user or role that you are registering with Amazon QuickSight.
     */
    readonly iamArn: pulumi.Output<string | undefined>;
    /**
     * Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`.
     */
    readonly identityType: pulumi.Output<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    readonly namespace: pulumi.Output<string | undefined>;
    /**
     * The name of the IAM session to use when assuming roles that can embed QuickSight dashboards.
     */
    readonly sessionName: pulumi.Output<string | undefined>;
    /**
     * The Amazon QuickSight user name that you want to create for the user you are registering.
     */
    readonly userName: pulumi.Output<string | undefined>;
    /**
     * The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
     */
    readonly userRole: pulumi.Output<string>;
    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * Amazon Resource Name (ARN) of the user
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId?: pulumi.Input<string>;
    /**
     * The email address of the user that you want to register.
     */
    readonly email?: pulumi.Input<string>;
    /**
     * The ARN of the IAM user or role that you are registering with Amazon QuickSight.
     */
    readonly iamArn?: pulumi.Input<string>;
    /**
     * Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`.
     */
    readonly identityType?: pulumi.Input<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    readonly namespace?: pulumi.Input<string>;
    /**
     * The name of the IAM session to use when assuming roles that can embed QuickSight dashboards.
     */
    readonly sessionName?: pulumi.Input<string>;
    /**
     * The Amazon QuickSight user name that you want to create for the user you are registering.
     */
    readonly userName?: pulumi.Input<string>;
    /**
     * The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
     */
    readonly userRole?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId?: pulumi.Input<string>;
    /**
     * The email address of the user that you want to register.
     */
    readonly email: pulumi.Input<string>;
    /**
     * The ARN of the IAM user or role that you are registering with Amazon QuickSight.
     */
    readonly iamArn?: pulumi.Input<string>;
    /**
     * Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`.
     */
    readonly identityType: pulumi.Input<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    readonly namespace?: pulumi.Input<string>;
    /**
     * The name of the IAM session to use when assuming roles that can embed QuickSight dashboards.
     */
    readonly sessionName?: pulumi.Input<string>;
    /**
     * The Amazon QuickSight user name that you want to create for the user you are registering.
     */
    readonly userName?: pulumi.Input<string>;
    /**
     * The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
     */
    readonly userRole: pulumi.Input<string>;
}
