"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Sagemaker Notebook Instance resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ni = new aws.sagemaker.NotebookInstance("ni", {
 *     instanceType: "ml.t2.medium",
 *     roleArn: aws_iam_role_role.arn,
 *     tags: {
 *         Name: "foo",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sagemaker_notebook_instance.html.markdown.
 */
class NotebookInstance extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["directInternetAccess"] = state ? state.directInternetAccess : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            inputs["lifecycleConfigName"] = state ? state.lifecycleConfigName : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
            inputs["securityGroups"] = state ? state.securityGroups : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.instanceType === undefined) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (!args || args.roleArn === undefined) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["directInternetAccess"] = args ? args.directInternetAccess : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["lifecycleConfigName"] = args ? args.lifecycleConfigName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
            inputs["securityGroups"] = args ? args.securityGroups : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(NotebookInstance.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing NotebookInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new NotebookInstance(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of NotebookInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotebookInstance.__pulumiType;
    }
}
exports.NotebookInstance = NotebookInstance;
/** @internal */
NotebookInstance.__pulumiType = 'aws:sagemaker/notebookInstance:NotebookInstance';
//# sourceMappingURL=notebookInstance.js.map