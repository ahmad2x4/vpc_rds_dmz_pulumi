import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an OpsWorks application resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as fs from "fs";
 *
 * const fooApp = new aws.opsworks.Application("foo-app", {
 *     appSources: [{
 *         revision: "master",
 *         type: "git",
 *         url: "https://github.com/example.git",
 *     }],
 *     autoBundleOnDeploy: "true",
 *     description: "This is a Rails application",
 *     documentRoot: "public",
 *     domains: [
 *         "example.com",
 *         "sub.example.com",
 *     ],
 *     enableSsl: true,
 *     environments: [{
 *         key: "key",
 *         secure: false,
 *         value: "value",
 *     }],
 *     railsEnv: "staging",
 *     shortName: "foobar",
 *     sslConfigurations: [{
 *         certificate: fs.readFileSync("./foobar.crt", "utf-8"),
 *         privateKey: fs.readFileSync("./foobar.key", "utf-8"),
 *     }],
 *     stackId: aws_opsworks_stack_main.id,
 *     type: "rails",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/opsworks_application.html.markdown.
 */
export declare class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application;
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Application;
    /**
     * SCM configuration of the app as described below.
     */
    readonly appSources: pulumi.Output<outputs.opsworks.ApplicationAppSource[]>;
    /**
     * Run bundle install when deploying for application of type `rails`.
     */
    readonly autoBundleOnDeploy: pulumi.Output<string | undefined>;
    /**
     * Specify activity and workflow workers for your app using the aws-flow gem.
     */
    readonly awsFlowRubySettings: pulumi.Output<string | undefined>;
    /**
     * The data source's ARN.
     */
    readonly dataSourceArn: pulumi.Output<string | undefined>;
    /**
     * The database name.
     */
    readonly dataSourceDatabaseName: pulumi.Output<string | undefined>;
    /**
     * The data source's type one of `AutoSelectOpsworksMysqlInstance`, `OpsworksMysqlInstance`, or `RdsDbInstance`.
     */
    readonly dataSourceType: pulumi.Output<string | undefined>;
    /**
     * A description of the app.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Subfolder for the document root for application of type `rails`.
     */
    readonly documentRoot: pulumi.Output<string | undefined>;
    /**
     * A list of virtual host alias.
     */
    readonly domains: pulumi.Output<string[] | undefined>;
    /**
     * Whether to enable SSL for the app. This must be set in order to let `ssl_configuration.private_key`, `ssl_configuration.certificate` and `ssl_configuration.chain` take effect.
     */
    readonly enableSsl: pulumi.Output<boolean | undefined>;
    /**
     * Object to define environment variables.  Object is described below.
     */
    readonly environments: pulumi.Output<outputs.opsworks.ApplicationEnvironment[] | undefined>;
    /**
     * A human-readable name for the application.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Rails environment for application of type `rails`.
     */
    readonly railsEnv: pulumi.Output<string | undefined>;
    /**
     * A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
     */
    readonly shortName: pulumi.Output<string>;
    /**
     * The SSL configuration of the app. Object is described below.
     */
    readonly sslConfigurations: pulumi.Output<outputs.opsworks.ApplicationSslConfiguration[] | undefined>;
    /**
     * The id of the stack the application will belong to.
     */
    readonly stackId: pulumi.Output<string>;
    /**
     * The type of source to use. For example, "archive".
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * SCM configuration of the app as described below.
     */
    readonly appSources?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationAppSource>[]>;
    /**
     * Run bundle install when deploying for application of type `rails`.
     */
    readonly autoBundleOnDeploy?: pulumi.Input<string>;
    /**
     * Specify activity and workflow workers for your app using the aws-flow gem.
     */
    readonly awsFlowRubySettings?: pulumi.Input<string>;
    /**
     * The data source's ARN.
     */
    readonly dataSourceArn?: pulumi.Input<string>;
    /**
     * The database name.
     */
    readonly dataSourceDatabaseName?: pulumi.Input<string>;
    /**
     * The data source's type one of `AutoSelectOpsworksMysqlInstance`, `OpsworksMysqlInstance`, or `RdsDbInstance`.
     */
    readonly dataSourceType?: pulumi.Input<string>;
    /**
     * A description of the app.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Subfolder for the document root for application of type `rails`.
     */
    readonly documentRoot?: pulumi.Input<string>;
    /**
     * A list of virtual host alias.
     */
    readonly domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable SSL for the app. This must be set in order to let `ssl_configuration.private_key`, `ssl_configuration.certificate` and `ssl_configuration.chain` take effect.
     */
    readonly enableSsl?: pulumi.Input<boolean>;
    /**
     * Object to define environment variables.  Object is described below.
     */
    readonly environments?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationEnvironment>[]>;
    /**
     * A human-readable name for the application.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the Rails environment for application of type `rails`.
     */
    readonly railsEnv?: pulumi.Input<string>;
    /**
     * A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
     */
    readonly shortName?: pulumi.Input<string>;
    /**
     * The SSL configuration of the app. Object is described below.
     */
    readonly sslConfigurations?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationSslConfiguration>[]>;
    /**
     * The id of the stack the application will belong to.
     */
    readonly stackId?: pulumi.Input<string>;
    /**
     * The type of source to use. For example, "archive".
     */
    readonly type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * SCM configuration of the app as described below.
     */
    readonly appSources?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationAppSource>[]>;
    /**
     * Run bundle install when deploying for application of type `rails`.
     */
    readonly autoBundleOnDeploy?: pulumi.Input<string>;
    /**
     * Specify activity and workflow workers for your app using the aws-flow gem.
     */
    readonly awsFlowRubySettings?: pulumi.Input<string>;
    /**
     * The data source's ARN.
     */
    readonly dataSourceArn?: pulumi.Input<string>;
    /**
     * The database name.
     */
    readonly dataSourceDatabaseName?: pulumi.Input<string>;
    /**
     * The data source's type one of `AutoSelectOpsworksMysqlInstance`, `OpsworksMysqlInstance`, or `RdsDbInstance`.
     */
    readonly dataSourceType?: pulumi.Input<string>;
    /**
     * A description of the app.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Subfolder for the document root for application of type `rails`.
     */
    readonly documentRoot?: pulumi.Input<string>;
    /**
     * A list of virtual host alias.
     */
    readonly domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable SSL for the app. This must be set in order to let `ssl_configuration.private_key`, `ssl_configuration.certificate` and `ssl_configuration.chain` take effect.
     */
    readonly enableSsl?: pulumi.Input<boolean>;
    /**
     * Object to define environment variables.  Object is described below.
     */
    readonly environments?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationEnvironment>[]>;
    /**
     * A human-readable name for the application.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the Rails environment for application of type `rails`.
     */
    readonly railsEnv?: pulumi.Input<string>;
    /**
     * A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
     */
    readonly shortName?: pulumi.Input<string>;
    /**
     * The SSL configuration of the app. Object is described below.
     */
    readonly sslConfigurations?: pulumi.Input<pulumi.Input<inputs.opsworks.ApplicationSslConfiguration>[]>;
    /**
     * The id of the stack the application will belong to.
     */
    readonly stackId: pulumi.Input<string>;
    /**
     * The type of source to use. For example, "archive".
     */
    readonly type: pulumi.Input<string>;
}
