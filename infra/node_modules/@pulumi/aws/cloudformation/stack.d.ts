import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a CloudFormation Stack resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const network = new aws.cloudformation.Stack("network", {
 *     parameters: {
 *         VPCCidr: "10.0.0.0/16",
 *     },
 *     templateBody: `{
 *   "Parameters" : {
 *     "VPCCidr" : {
 *       "Type" : "String",
 *       "Default" : "10.0.0.0/16",
 *       "Description" : "Enter the CIDR block for the VPC. Default is 10.0.0.0/16."
 *     }
 *   },
 *   "Resources" : {
 *     "myVpc": {
 *       "Type" : "AWS::EC2::VPC",
 *       "Properties" : {
 *         "CidrBlock" : { "Ref" : "VPCCidr" },
 *         "Tags" : [
 *           {"Key": "Name", "Value": "Primary_CF_VPC"}
 *         ]
 *       }
 *     }
 *   }
 * }
 * `,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudformation_stack.html.markdown.
 */
export declare class Stack extends pulumi.CustomResource {
    /**
     * Get an existing Stack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackState, opts?: pulumi.CustomResourceOptions): Stack;
    /**
     * Returns true if the given object is an instance of Stack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Stack;
    /**
     * A list of capabilities.
     * Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
     */
    readonly capabilities: pulumi.Output<string[] | undefined>;
    /**
     * Set to true to disable rollback of the stack if stack creation failed.
     * Conflicts with `onFailure`.
     */
    readonly disableRollback: pulumi.Output<boolean | undefined>;
    /**
     * The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
     */
    readonly iamRoleArn: pulumi.Output<string | undefined>;
    /**
     * Stack name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of SNS topic ARNs to publish stack related events.
     */
    readonly notificationArns: pulumi.Output<string[] | undefined>;
    /**
     * Action to be taken if stack creation fails. This must be
     * one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
     */
    readonly onFailure: pulumi.Output<string | undefined>;
    /**
     * A map of outputs from the stack.
     */
    readonly outputs: pulumi.Output<{
        [key: string]: any;
    }>;
    /**
     * A map of Parameter structures that specify input parameters for the stack.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: any;
    }>;
    /**
     * Structure containing the stack policy body.
     * Conflicts w/ `policyUrl`.
     */
    readonly policyBody: pulumi.Output<string>;
    /**
     * Location of a file containing the stack policy.
     * Conflicts w/ `policyBody`.
     */
    readonly policyUrl: pulumi.Output<string | undefined>;
    /**
     * A list of tags to associate with this stack.
     */
    readonly tags: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Structure containing the template body (max size: 51,200 bytes).
     */
    readonly templateBody: pulumi.Output<string>;
    /**
     * Location of a file containing the template body (max size: 460,800 bytes).
     */
    readonly templateUrl: pulumi.Output<string | undefined>;
    /**
     * The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
     */
    readonly timeoutInMinutes: pulumi.Output<number | undefined>;
    /**
     * Create a Stack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Stack resources.
 */
export interface StackState {
    /**
     * A list of capabilities.
     * Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
     */
    readonly capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to true to disable rollback of the stack if stack creation failed.
     * Conflicts with `onFailure`.
     */
    readonly disableRollback?: pulumi.Input<boolean>;
    /**
     * The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
     */
    readonly iamRoleArn?: pulumi.Input<string>;
    /**
     * Stack name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A list of SNS topic ARNs to publish stack related events.
     */
    readonly notificationArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Action to be taken if stack creation fails. This must be
     * one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
     */
    readonly onFailure?: pulumi.Input<string>;
    /**
     * A map of outputs from the stack.
     */
    readonly outputs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * A map of Parameter structures that specify input parameters for the stack.
     */
    readonly parameters?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Structure containing the stack policy body.
     * Conflicts w/ `policyUrl`.
     */
    readonly policyBody?: pulumi.Input<string>;
    /**
     * Location of a file containing the stack policy.
     * Conflicts w/ `policyBody`.
     */
    readonly policyUrl?: pulumi.Input<string>;
    /**
     * A list of tags to associate with this stack.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Structure containing the template body (max size: 51,200 bytes).
     */
    readonly templateBody?: pulumi.Input<string>;
    /**
     * Location of a file containing the template body (max size: 460,800 bytes).
     */
    readonly templateUrl?: pulumi.Input<string>;
    /**
     * The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
     */
    readonly timeoutInMinutes?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a Stack resource.
 */
export interface StackArgs {
    /**
     * A list of capabilities.
     * Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
     */
    readonly capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to true to disable rollback of the stack if stack creation failed.
     * Conflicts with `onFailure`.
     */
    readonly disableRollback?: pulumi.Input<boolean>;
    /**
     * The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
     */
    readonly iamRoleArn?: pulumi.Input<string>;
    /**
     * Stack name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A list of SNS topic ARNs to publish stack related events.
     */
    readonly notificationArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Action to be taken if stack creation fails. This must be
     * one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
     */
    readonly onFailure?: pulumi.Input<string>;
    /**
     * A map of Parameter structures that specify input parameters for the stack.
     */
    readonly parameters?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Structure containing the stack policy body.
     * Conflicts w/ `policyUrl`.
     */
    readonly policyBody?: pulumi.Input<string>;
    /**
     * Location of a file containing the stack policy.
     * Conflicts w/ `policyBody`.
     */
    readonly policyUrl?: pulumi.Input<string>;
    /**
     * A list of tags to associate with this stack.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Structure containing the template body (max size: 51,200 bytes).
     */
    readonly templateBody?: pulumi.Input<string>;
    /**
     * Location of a file containing the template body (max size: 460,800 bytes).
     */
    readonly templateUrl?: pulumi.Input<string>;
    /**
     * The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
     */
    readonly timeoutInMinutes?: pulumi.Input<number>;
}
