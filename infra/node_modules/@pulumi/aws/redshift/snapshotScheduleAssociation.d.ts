import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultCluster = new aws.redshift.Cluster("default", {
 *     clusterIdentifier: "tf-redshift-cluster",
 *     clusterType: "single-node",
 *     databaseName: "mydb",
 *     masterPassword: "Mustbe8characters",
 *     masterUsername: "foo",
 *     nodeType: "dc1.large",
 * });
 * const defaultSnapshotSchedule = new aws.redshift.SnapshotSchedule("default", {
 *     definitions: ["rate(12 hours)"],
 *     identifier: "tf-redshift-snapshot-schedule",
 * });
 * const defaultSnapshotScheduleAssociation = new aws.redshift.SnapshotScheduleAssociation("default", {
 *     clusterIdentifier: defaultCluster.id,
 *     scheduleIdentifier: defaultSnapshotSchedule.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/redshift_snapshot_schedule_association.html.markdown.
 */
export declare class SnapshotScheduleAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotScheduleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotScheduleAssociationState, opts?: pulumi.CustomResourceOptions): SnapshotScheduleAssociation;
    /**
     * Returns true if the given object is an instance of SnapshotScheduleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SnapshotScheduleAssociation;
    /**
     * The cluster identifier.
     */
    readonly clusterIdentifier: pulumi.Output<string>;
    /**
     * The snapshot schedule identifier.
     */
    readonly scheduleIdentifier: pulumi.Output<string>;
    /**
     * Create a SnapshotScheduleAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotScheduleAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SnapshotScheduleAssociation resources.
 */
export interface SnapshotScheduleAssociationState {
    /**
     * The cluster identifier.
     */
    readonly clusterIdentifier?: pulumi.Input<string>;
    /**
     * The snapshot schedule identifier.
     */
    readonly scheduleIdentifier?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SnapshotScheduleAssociation resource.
 */
export interface SnapshotScheduleAssociationArgs {
    /**
     * The cluster identifier.
     */
    readonly clusterIdentifier: pulumi.Input<string>;
    /**
     * The snapshot schedule identifier.
     */
    readonly scheduleIdentifier: pulumi.Input<string>;
}
