"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to get the IP ranges of various AWS products and services. For more information about the contents of this data source and required JSON syntax if referencing a custom URL, see the [AWS IP Address Ranges documention][1].
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const europeanEc2 = aws.getIpRanges({
 *     regions: [
 *         "eu-west-1",
 *         "eu-central-1",
 *     ],
 *     services: ["ec2"],
 * });
 * const fromEurope = new aws.ec2.SecurityGroup("fromEurope", {
 *     ingress: [{
 *         cidrBlocks: europeanEc2.cidrBlocks,
 *         fromPort: 443,
 *         ipv6CidrBlocks: europeanEc2.ipv6CidrBlocks,
 *         protocol: "tcp",
 *         toPort: 443,
 *     }],
 *     tags: {
 *         CreateDate: europeanEc2.createDate,
 *         SyncToken: europeanEc2.syncToken,
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ip_ranges.html.markdown.
 */
function getIpRanges(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("aws:index/getIpRanges:getIpRanges", {
        "regions": args.regions,
        "services": args.services,
        "url": args.url,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getIpRanges = getIpRanges;
//# sourceMappingURL=getIpRanges.js.map