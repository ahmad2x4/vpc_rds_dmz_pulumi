import * as pulumi from "@pulumi/pulumi";
import { ClusterNetworkArgs } from "./cluster";
/**
 * Optional arguments that can be provided when creating a network.
 *
 * @deprecated Usages of awsx.Network should be migrated to awsx.ec2.Vpc.
 */
export interface NetworkArgs {
    /**
     * The maximum number of availability zones to use in the current region.  Defaults to '2' if
     * unspecified.
     */
    readonly numberOfAvailabilityZones?: number;
    readonly usePrivateSubnets?: boolean;
    /**
     * The CIDR block for the VPC.  Defaults to "10.10.0.0/16" if unspecified.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Whether or not to have DNS hostnames in the VPC. Defaults to 'true' if unspecified.
     */
    enableDnsHostnames?: pulumi.Input<boolean>;
    /**
     * Whether or not to have DNS support in the VPC.  Defaults to 'true' if unspecified.
     */
    enableDnsSupport?: pulumi.Input<boolean>;
    /**
     * A tenancy option for instances launched into the VPC.  Defaults to 'default' if unspecified.
     */
    instanceTenancy?: pulumi.Input<"default" | "dedicated">;
}
/**
 * Arguments necessary when creating a network using Network.fromVpc.
 *
 * @deprecated Usages of awsx.Network should be migrated to awsx.ec2.Vpc.
 */
export interface NetworkVpcArgs {
    /**
     * The VPC id of the network for the cluster
     */
    readonly vpcId: pulumi.Input<string>;
    /**
     * The network subnets for the clusters
     */
    readonly subnetIds: pulumi.Input<string>[];
    /**
     * Whether the network includes private subnets.
     */
    readonly usePrivateSubnets: boolean;
    /**
     * The security group IDs for the network.
     */
    readonly securityGroupIds: pulumi.Input<string>[];
    /**
     * The public subnets for the VPC.  In case [usePrivateSubnets] == false, these are the same as [subnets].
     */
    readonly publicSubnetIds: pulumi.Input<string>[];
}
/**
 * Network encapsulates the configuration of an Amazon VPC.  Both [VPC with Public
 * Subnet](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario1.html) and [VPC with Public and Private
 * Subnets (NAT)](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Scenario2.html) configurations are
 * supported.
 *
 * @deprecated Usages of awsx.Network should be migrated to awsx.ec2.Vpc.
 */
export declare class Network extends pulumi.ComponentResource implements ClusterNetworkArgs {
    /**
     * The VPC id of the network.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Whether the network includes private subnets.
     */
    readonly usePrivateSubnets: boolean;
    /**
     * The security group IDs for the network.
     */
    readonly securityGroupIds: pulumi.Output<string>[];
    /**
     * The subnets in which compute should run.  These are the private subnets if
     * [usePrivateSubnets] == true, else these are the public subnets.
     */
    readonly subnetIds: pulumi.Output<string>[];
    /**
     * The public subnets for the VPC.  In case [usePrivateSubnets] == false, these are the same as
     * [subnets].
     */
    readonly publicSubnetIds: pulumi.Output<string>[];
    /**
     * The public subnet route table for the VPC.
     */
    readonly publicRouteTableId: pulumi.Output<string> | undefined;
    /**
     * Gets the default VPC for the AWS account as a Network.  This first time this is called, the
     * default network will be lazily created, using whatever options are provided in opts. All
     * subsequent calls will return that same network even if different opts are provided.
     */
    static getDefault(opts?: pulumi.ComponentResourceOptions): Network;
    /**
     * Creates a new network using the configuration values of an existing VPC.
     */
    static fromVpc(name: string, vpcArgs: NetworkVpcArgs, opts?: pulumi.ComponentResourceOptions): Network;
    constructor(name: string, args?: NetworkArgs, opts?: pulumi.ComponentResourceOptions);
}
