import * as pulumi from "@pulumi/pulumi";
/**
 * Pulls a Docker image to a given Docker host from a Docker Registry.
 *
 * This resource will *not* pull new layers of the image automatically unless used in
 * conjunction with [`docker..getRegistryImage`](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
 * data source to update the `pullTriggers` field.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as docker from "@pulumi/docker";
 *
 * // Find the latest Ubuntu precise image.
 * const ubuntu = new docker.RemoteImage("ubuntu", {
 *     name: "ubuntu:precise",
 * });
 * ```
 *
 * ### Dynamic image
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as docker from "@pulumi/docker";
 *
 * const ubuntuRegistryImage = docker.getRegistryImage({
 *     name: "ubuntu:precise",
 * });
 * const ubuntuRemoteImage = new docker.RemoteImage("ubuntu", {
 *     name: ubuntuRegistryImage.name,
 *     pullTriggers: [ubuntuRegistryImage.sha256Digest],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-docker/blob/master/website/docs/r/image.html.markdown.
 */
export declare class RemoteImage extends pulumi.CustomResource {
    /**
     * Get an existing RemoteImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RemoteImageState, opts?: pulumi.CustomResourceOptions): RemoteImage;
    /**
     * Returns true if the given object is an instance of RemoteImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RemoteImage;
    /**
     * If true, then the Docker image won't be
     * deleted on destroy operation. If this is false, it will delete the image from
     * the docker local storage on destroy operation.
     */
    readonly keepLocally: pulumi.Output<boolean | undefined>;
    readonly latest: pulumi.Output<string>;
    /**
     * The name of the Docker image, including any tags or SHA256 repo digests.
     */
    readonly name: pulumi.Output<string>;
    /**
     * **Deprecated**, use `pullTriggers` instead.
     */
    readonly pullTrigger: pulumi.Output<string | undefined>;
    /**
     * List of values which cause an
     * image pull when changed. This is used to store the image digest from the
     * registry when using the `docker..getRegistryImage` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
     * to trigger an image update.
     */
    readonly pullTriggers: pulumi.Output<string[] | undefined>;
    /**
     * Create a RemoteImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RemoteImageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RemoteImage resources.
 */
export interface RemoteImageState {
    /**
     * If true, then the Docker image won't be
     * deleted on destroy operation. If this is false, it will delete the image from
     * the docker local storage on destroy operation.
     */
    readonly keepLocally?: pulumi.Input<boolean>;
    readonly latest?: pulumi.Input<string>;
    /**
     * The name of the Docker image, including any tags or SHA256 repo digests.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * **Deprecated**, use `pullTriggers` instead.
     */
    readonly pullTrigger?: pulumi.Input<string>;
    /**
     * List of values which cause an
     * image pull when changed. This is used to store the image digest from the
     * registry when using the `docker..getRegistryImage` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
     * to trigger an image update.
     */
    readonly pullTriggers?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a RemoteImage resource.
 */
export interface RemoteImageArgs {
    /**
     * If true, then the Docker image won't be
     * deleted on destroy operation. If this is false, it will delete the image from
     * the docker local storage on destroy operation.
     */
    readonly keepLocally?: pulumi.Input<boolean>;
    /**
     * The name of the Docker image, including any tags or SHA256 repo digests.
     */
    readonly name: pulumi.Input<string>;
    /**
     * **Deprecated**, use `pullTriggers` instead.
     */
    readonly pullTrigger?: pulumi.Input<string>;
    /**
     * List of values which cause an
     * image pull when changed. This is used to store the image digest from the
     * registry when using the `docker..getRegistryImage` [data source](https://www.terraform.io/docs/providers/docker/d/registry_image.html)
     * to trigger an image update.
     */
    readonly pullTriggers?: pulumi.Input<pulumi.Input<string>[]>;
}
