import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Manages a Docker Network. This can be used alongside
 * [docker\_container](https://www.terraform.io/docs/providers/docker/r/container.html)
 * to create virtual networks within the docker environment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as docker from "@pulumi/docker";
 *
 * // Create a new docker network
 * const privateNetwork = new docker.Network("privateNetwork", {});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-docker/blob/master/website/docs/r/network.html.markdown.
 */
export declare class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network;
    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Network;
    /**
     * Enable manual container attachment to the network.
     * Defaults to `false`.
     */
    readonly attachable: pulumi.Output<boolean | undefined>;
    /**
     * Requests daemon to check for networks
     * with same name.
     */
    readonly checkDuplicate: pulumi.Output<boolean | undefined>;
    /**
     * Name of the network driver to use. Defaults to
     * `bridge` driver.
     */
    readonly driver: pulumi.Output<string>;
    /**
     * Create swarm routing-mesh network.
     * Defaults to `false`.
     */
    readonly ingress: pulumi.Output<boolean | undefined>;
    /**
     * Restrict external access to the network.
     * Defaults to `false`.
     */
    readonly internal: pulumi.Output<boolean>;
    /**
     * See IPAM config below for
     * details.
     */
    readonly ipamConfigs: pulumi.Output<outputs.NetworkIpamConfig[] | undefined>;
    /**
     * Driver used by the custom IP scheme of the
     * network.
     */
    readonly ipamDriver: pulumi.Output<string | undefined>;
    /**
     * Enable IPv6 networking.
     * Defaults to `false`.
     */
    readonly ipv6: pulumi.Output<boolean | undefined>;
    /**
     * User-defined key/value metadata.
     */
    readonly labels: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The name of the Docker network.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network specific options to be used by
     * the drivers.
     */
    readonly options: pulumi.Output<{
        [key: string]: any;
    }>;
    readonly scope: pulumi.Output<string>;
    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * Enable manual container attachment to the network.
     * Defaults to `false`.
     */
    readonly attachable?: pulumi.Input<boolean>;
    /**
     * Requests daemon to check for networks
     * with same name.
     */
    readonly checkDuplicate?: pulumi.Input<boolean>;
    /**
     * Name of the network driver to use. Defaults to
     * `bridge` driver.
     */
    readonly driver?: pulumi.Input<string>;
    /**
     * Create swarm routing-mesh network.
     * Defaults to `false`.
     */
    readonly ingress?: pulumi.Input<boolean>;
    /**
     * Restrict external access to the network.
     * Defaults to `false`.
     */
    readonly internal?: pulumi.Input<boolean>;
    /**
     * See IPAM config below for
     * details.
     */
    readonly ipamConfigs?: pulumi.Input<pulumi.Input<inputs.NetworkIpamConfig>[]>;
    /**
     * Driver used by the custom IP scheme of the
     * network.
     */
    readonly ipamDriver?: pulumi.Input<string>;
    /**
     * Enable IPv6 networking.
     * Defaults to `false`.
     */
    readonly ipv6?: pulumi.Input<boolean>;
    /**
     * User-defined key/value metadata.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the Docker network.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Network specific options to be used by
     * the drivers.
     */
    readonly options?: pulumi.Input<{
        [key: string]: any;
    }>;
    readonly scope?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * Enable manual container attachment to the network.
     * Defaults to `false`.
     */
    readonly attachable?: pulumi.Input<boolean>;
    /**
     * Requests daemon to check for networks
     * with same name.
     */
    readonly checkDuplicate?: pulumi.Input<boolean>;
    /**
     * Name of the network driver to use. Defaults to
     * `bridge` driver.
     */
    readonly driver?: pulumi.Input<string>;
    /**
     * Create swarm routing-mesh network.
     * Defaults to `false`.
     */
    readonly ingress?: pulumi.Input<boolean>;
    /**
     * Restrict external access to the network.
     * Defaults to `false`.
     */
    readonly internal?: pulumi.Input<boolean>;
    /**
     * See IPAM config below for
     * details.
     */
    readonly ipamConfigs?: pulumi.Input<pulumi.Input<inputs.NetworkIpamConfig>[]>;
    /**
     * Driver used by the custom IP scheme of the
     * network.
     */
    readonly ipamDriver?: pulumi.Input<string>;
    /**
     * Enable IPv6 networking.
     * Defaults to `false`.
     */
    readonly ipv6?: pulumi.Input<boolean>;
    /**
     * User-defined key/value metadata.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the Docker network.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Network specific options to be used by
     * the drivers.
     */
    readonly options?: pulumi.Input<{
        [key: string]: any;
    }>;
}
