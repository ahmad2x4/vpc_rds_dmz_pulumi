"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Reads the image metadata from a Docker Registry. Used in conjunction with the
 * [docker\_image](https://www.terraform.io/docs/providers/docker/r/image.html) resource to keep an image up
 * to date on the latest available version of the tag.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as docker from "@pulumi/docker";
 *
 * const ubuntuRegistryImage = docker.getRegistryImage({
 *     name: "ubuntu:precise",
 * });
 * const ubuntuRemoteImage = new docker.RemoteImage("ubuntu", {
 *     name: ubuntuRegistryImage.name,
 *     pullTriggers: [ubuntuRegistryImage.sha256Digest],
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-docker/blob/master/website/docs/d/registry_image.html.markdown.
 */
function getRegistryImage(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise = pulumi.runtime.invoke("docker:index/getRegistryImage:getRegistryImage", {
        "name": args.name,
    }, opts);
    return pulumi.utils.liftProperties(promise, opts);
}
exports.getRegistryImage = getRegistryImage;
//# sourceMappingURL=getRegistryImage.js.map